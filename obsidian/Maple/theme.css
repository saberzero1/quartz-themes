@charset "UTF-8";
/* #region [style settings] */
/* @settings

name: 🛠️ Maple Color And Animation
id: maple-basic
settings:
    -
        id: setting-animation-time
        title: Animation Duration (ms)
        title.zh: 动画持续时间（毫秒）
        type: variable-number-slider
        format: ms
        default: 200
        min: 0
        max: 500
        step: 50
    -
        id: color-use-custom
        title: Use Custom Accent Color
        description: Use style setting accent color instead of Obsidian's accent color
        title.zh: 自定义 accent color
        description.zh: 使用 style setting 的颜色，而不是 Obsidian 自带的颜色
        type: class-toggle
    -
        id: color-accent-light
        title: Light Mode
        title.zh: 浅色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-light
        title: Base Color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 35
        min: 0
        max: 360
        step: 5
    -
        id: color-active-light
        title: Highlight Color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-light
        options:
            -   label: accent color
                value: color-active-default-light
            -   label: accent color alt
                value: color-active-alt-light
            -   label: custom
                value: color-active-custom-light
    -
        id: setting-color-active-custom-light
        title: Custom Highlight Color
        title.zh: 自定义高亮颜色
        type: variable-color
        format: rgb
        default: '#'
        opacity: false
    -
        id: color-more-light
        title: More Configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-light
        title: Accent Color Saturation
        description: S(aturation) of HSL
        title.zh: 高亮颜色饱和度
        description.zh: HSL 中的 S
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-light
        title: Accent Color Lightness
        description: L(ight) of HSL
        title.zh: 高亮颜色亮度
        description.zh: HSL 中的 L
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: color-accent-dark
        title: Dark Mode
        title.zh: 暗色模式
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-accent-h-dark
        title: Base Color
        title.zh: 基础颜色
        type: variable-number-slider
        default: 207
        min: 0
        max: 360
        step: 5
    -
        id: color-active-dark
        title: Highlight Color
        title.zh: 高亮颜色
        type: class-select
        allowEmpty: false
        default: color-active-default-dark
        options:
            -   label: accent color
                value: color-active-default-dark
            -   label: accent color alt
                value: color-active-alt-dark
            -   label: custom
                value: color-active-custom-dark
    -
        id: setting-color-active-custom-dark
        title: Custom Highlight Color
        title.zh: 自定义高亮颜色
        type: variable-color
        default: '#'
        format: rgb
        opacity: false
    -
        id: color-more-dark
        title: More Configuration
        title.zh: 更多设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-accent-s-dark
        title: Accent Color Saturation
        description: S(aturation) of hsl
        title.zh: 高亮颜色饱和度
        description.zh: HSL 中的 S
        type: variable-number-slider
        default: 32
        format: '%'
        min: 0
        max: 100
        step: 1
    -
        id: setting-accent-l-dark
        title: Accent Color Lightness
        description: L(ight) of hsl
        title.zh: 高亮颜色亮度
        description.zh: HSL 中的 L
        type: variable-number-slider
        default: 58
        format: '%'
        min: 0
        max: 100
        step: 1
    -
*/
/* @settings

name: 🌏 Maple Workspace
id: maple-workspace
settings:
    -
        id: titlebar
        title: Obsidian Titlebar
        title.zh: Obsidian 标题栏
        type: heading
        collapsed: true
        level: 2
    -
        id: titlebar-button-style
        title: Styled Window Buttons
        description: For Windows and Linux
        title.zh: 窗体按钮美化
        description.zh: 在 Windows 和 Linux 中生效
        type: class-toggle
        default: true
    -
        id: titlebar-colorful
        title: Colorful Titlebar
        description: Reference from https://github.com/kepano/obsidian-minimal
        title.zh: 多彩 Obsidian 标题栏
        description.zh: 参考 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: bg
        title: Wave Background
        description: Will also add in canvas card when card width > 768px
        title.zh: 波浪背景图
        description.zh: 白板的卡片宽度 >768px 时编辑卡片也会添加
        type: heading
        collapsed: true
        level: 2
    -
        id: bg-enable
        title: Background Wave Image
        description: Static style reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow, ❗live style will increase CPU/GPU use
        title.zh: 背景波浪图
        description.zh: 静态图（static）参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow，❗动态图（live）将提高 CPU/GPU 占用率
        type: class-select
        allowEmpty: false
        default: bg-static
        options:
            -   label: disable
                value: bg-default
            -   label: static
                value: bg-static
            -   label: live
                value: bg-live
    -
        id: setting-bg-color
        title: Wave Color
        title.zh: 波浪颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: explorer
        title: File Explorer
        title.zh: 文件管理器
        type: heading
        collapsed: true
        level: 2
    -
        id: explorer-nav-decoration
        title: Add Tail Decorator On Active File
        description: Reference from https://github.com/Akifyss/obsidian-border
        title.zh: 在当前文件末尾添加装饰
        description.zh: 参考 https://github.com/Akifyss/obsidian-border
        type: class-toggle
    -
        id: explorer-title-wrap
        title: Auto Wrap For Long File Name
        title.zh: 为长文件名自动换行
        type: class-toggle
    -
        id: explorer-item-height
        title: Item Line Height
        title.zh: 行高
        type: variable-number-slider
        default: 1.6
        min: 1.2
        max: 1.8
        step: 0.1
    -
        id: explorer-icon
        title: Enable Prefix Icon
        description: If the tree indent is weird, please collpase all the directory and restart Obsidian
        title.zh: 开启前置图标
        description.zh: 如果缩进出现问题，请折叠全部文件夹并重启 Obsidian
        type: class-toggle
        default: true
    -
        id: setting-color-dirs
        title: Directory Color
        title.zh: 文件夹颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: rgb(245, 180, 0)
        default-dark: rgb(245, 180, 0)
    -
        id: outline-panel
        title: Outline Panel
        title.zh: 文档大纲
        type: heading
        collapsed: true
        level: 2
    -
        id: outline-enable
        title: Logseq Bullet Thread Style Outline
        description: Please reload Obsidian after enable it, reference from https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        title.zh: logseq bullet thread 样式的文档视图
        description.zh: 启用后请重启应用 参考 https://github.com/pengx17/logseq-dev-theme/blob/main/bullet_threading.css
        type: class-toggle
        default: true
    -
        id: status-bar
        title: Status Bar
        title.zh: 状态栏
        type: heading
        collapsed: true
        level: 2
    -
        id: status-bar-enable
        title: Custom Status Bar Style
        title.zh: 自定义状态栏样式
        type: class-toggle
        default: true
    -
        id: status-bar-style-float
        title: Round Style Status Bar
        title.zh: 圆角风格的状态栏
        type: class-toggle
        default: true
    -
        id: status-bar-style
        title: Status Bar Animation
        description: ❗last style only valid when turn on “round status bar”
        title.zh: 状态栏样式
        description.zh: ❗最后一种样式只在开启“圆角风格的状态栏”才生效
        type: class-select
        allowEmpty: false
        default: status-bar-default
        options:
            -   label: default
                value: status-bar-default
            -   label: show on hover
                value: status-bar-hidden
            -   label: scroll out on hover
                value: status-bar-scroll
    -
        id: status-bar-style-center
        title: Center Status Bar
        title.zh: 状态栏居中
        type: class-toggle
    -
        id: search-internal
        title: Document Search / Replace Panel
        title.zh: 文档内搜索框
        type: heading
        collapsed: true
        level: 2
    -
        id: search-internal-enable
        title: Minimal Document Search / Replace Panel (Like VSCode)
        title.zh: 精简的文档内搜索框（和 VSCode 类似）
        type: class-toggle
        default: true
    -
        id: tab
        title: Tab
        title.zh: 标签页
        type: heading
        collapsed: true
        level: 2
    -
        id: tab-float
        title: Float Style Tab (Like Firefox / Microsoft Edge)
        title.zh: 浮动的标签页（和 Firefox / Microsoft Edge 类似）
        type: class-toggle
    -
        id: tab-slide-up
        title: Slide Up Animation On Tab Switch
        description: ❗will prevent outline panel update instantly on switch articles
        title.zh: 标签页切换动画
        description.zh: ❗会导致切换文章时无法立即更新大纲面板
        type: class-toggle
        default: true
    -
        id: labeled-nav
        title: Text Labels For Primary Navigation
        description: Reference from https://github.com/kepano/obsidian-minimal
        title.zh: 主导航栏添加文字
        description.zh: 参考自 https://github.com/kepano/obsidian-minimal
        type: class-toggle
    -
        id: tab-show-close
        title: When To Show Close Button On Tabs
        title.zh: 何时显示标签页的关闭按钮
        type: class-select
        allowEmpty: false
        default: tab-show-close-default
        options:
            -   label: default
                value: tab-show-close-default
            -   label: on hover all tabs
                value: tab-show-close-all
            -   label: on hover except active tab
                value: tab-show-close-part
    -
        id: tab-title
        title: Tab Title Bar
        title.zh: 标签页标题栏
        type: heading
        level: 3
    -
        id: tab-title-bar-round
        title: Enable Tab Title Bar Round Style
        title.zh: 开启标签页标题栏圆角样式
        type: class-toggle
    -
        id: tab-title-bar-shadow
        title: Add Shadow For Active Tab Title Bar
        title.zh: 为当前标签页标题栏添加阴影
        type: class-toggle
    -
        id: tab-title-bar-text
        title: File Name On Tab Title Bar
        title.zh: 标签页标题栏的文件名
        type: class-select
        allowEmpty: false
        default: tab-title-bar-text-default
        options:
            -   label: default
                value: tab-title-bar-text-default
            -   label: small size
                value: tab-title-bar-text-small
            -   label: show on hover
                value: tab-title-bar-text-hidden
    -
        id: message
        title: Tooltip & Notice
        title.zh: 气泡提示框 & 通知
        type: heading
        collapsed: true
        level: 2
    -
        id: message-tooltip-hide-arrow
        title: Hide Tooltip Arrow
        title.zh: 隐藏气泡提示框箭头
        type: class-toggle
    -
        id: message-tooltip-hide
        title: Always Hide Tooltip
        title.zh: 永久隐藏气泡提示框
        type: class-toggle
    -
        id: message-modify
        title: Change Tooltip & Notice Color
        title.zh: 修改气泡提示框和消息的颜色
        type: class-toggle
        default: true
    -
        id: setting-message-bg
        title: Background Color
        title.zh: 背景色
        type: variable-themed-color
        format: hsl-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-message-fg
        title: Foreground Color
        title.zh: 文字色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: modal
        title: Modal & Setting Panel
        title.zh: 弹出框 & 设置面板
        type: heading
        collapsed: true
        level: 2
    -
        id: modal-blur
        title: Enable Modal Background Blur
        description: If there is a delay in scrolling, try turning this option off
        title.zh: 开启弹出框背景模糊
        description.zh: 如果滚动时有卡顿，尝试关闭该选项
        type: class-toggle
        default: true
    -
        id: modal-header
        title: Add Header For Setting Panel
        description: Better with plugin “setting search”, invalid in mobile
        title.zh: 为设置面板添加顶部框
        description.zh: 配合 setting search 插件使用更佳，移动端无效
        type: class-toggle
    -
        id: setting-modal-header-title
        title: Set Modal Header Title
        title.zh: 设置面板标题
        type: variable-text
        default: "'maple 0.8.29'"
    -
        id: setting-group-title
        title: Add Style For Left Navigation Group Title
        title.zh: 为左侧选项组标题添加样式
        type: class-toggle
        default: true
    -
        id: setting-nav-decoration
        title: Styled Active Nav Item
        title.zh: 左侧当前设置项美化
        type: class-toggle
        default: true
    -
        id: modal-slider
        title: Styled Slider Thumb
        title.zh: 滑动条按钮美化
        type: class-toggle
        default: true
    -
        id: modal-toggle
        title: Styled Toggle Button
        title.zh: 开关按钮美化
        type: class-select
        allowEmpty: false
        default: modal-toggle-default
        options:
            -   label: default
                value: modal-toggle-default
            -   label: thin
                value: modal-toggle-thin
            -   label: round
                value: modal-toggle-round
    -
        id: modal-animation
        title: Modal Bounce Animation
        desciption: reference from https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        title.zh: 弹出框抖动动画
        desciption.zh: 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow
        type: class-toggle
        default: true
    -
        id: menu-blur
        title: Menu Blur
        title.zh: 菜单模糊
        type: heading
        collapsed: true
        level: 2
    -
        id: menu-normal
        title: Normal Menu
        title.zh: 普通菜单
        type: class-toggle
        default: true
    -
        id: menu-suggestion
        title: Suggestion Menu
        title.zh: 提示菜单
        type: class-toggle
        default: true
    -
        id: menu-graph
        title: Graph Menu
        title.zh: 图谱菜单
        type: class-toggle
        default: true
    -
        id: scrollbar
        title: Scrollbar
        title.zh: 滚动条
        type: heading
        collapsed: true
        level: 2
    -
        id: scrollbar-hide
        title: Always Hide Scrollbar
        title.zh: 不显示滚动条
        type: class-toggle
    -
        id: scrollbar-hover
        title: Scrollbar Hover Action
        title.zh: 鼠标经过时滚动条变化
        type: class-select
        allowEmpty: false
        default: scrollbar-hover-default
        options:
            -   label: default
                value: scrollbar-hover-default
            -   label: accent
                value: scrollbar-hover-accent
            -   label: expand
                value: scrollbar-hover-expand
    -
        id: scrollbar-movein-animation-enable
        title: Enable Scrollbar Animation
        description: When disabled, always show scrollbar; when enabled, hide scrollbar when the mouse move outside the container
        title.zh: 启用滚动条动画
        description.zh: 关闭时，一直显示滚动条；开启后，鼠标在容器外时隐藏滚动条
        type: class-toggle
        default: true
    -
        id: graph
        title: Graph
        title.zh: 关系图谱
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-graph-node
        title: Node Color
        title.zh: 普通节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-unresolved
        title: Unresolved Node Color
        title.zh: 未连接节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-graph-node-focus
        title: Focused Node Color
        title.zh: 聚焦节点颜色
        type: variable-themed-color
        format: rgb-values
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: export-pdf
        title: PDF Export
        title.zh: PDF 导出
        type: heading
        collapsed: true
        level: 2
    -
        id: export-pdf-transparent
        title: Transparent Page Background Color
        title.zh: 透明页面背景色
        type: class-toggle
*/
/* @settings

name: ✏️ Maple Editor
id: maple-editor
settings:
    -
        id: bg
        title: Background
        title.zh: 背景
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-editor-bg
        title: Editor Background Color
        title.zh: 编辑器背景色
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: setting-md-container-bg
        title: Editor Container Background Color
        description: Quote, code block, table and so on
        title.zh: 编辑器容器背景色
        description.zh: 引用、代码块、表格等
        type: variable-themed-color
        format: hsl-values
        default-light: '#'
        default-dark: '#'
    -
        id: text-line-font
        title: Text & Font & Line
        title.zh: 文字 & 字体 & 行
        type: heading
        collapsed: true
        level: 2
    -
        id: font-maple
        title: Use "Maple Mono" As Monospace Font
        description: https://github.com/subframe7536/Maple-font
        title.zh: 使用 Maple Mono 作为等宽字体
        description.zh: https://github.com/subframe7536/Maple-font
        type: class-toggle
        default: true
    -
        id: setting-code-ligature
        title: OpenType Feature Config For Monospace Font
        title.zh: 等宽字体的 OpenType 特性配置
        type: variable-text
        default: '"calt"'
    -
        id: font-fix-latex
        title: Fix Latex Italic Absent
        description: Latex in my vault often wrong rendered, so i make this setting. If wrong rendered, just toggle it
        title.zh: 修复 latex 斜体问题
        description.zh: 在我的仓库里经常渲染失败，只能自己打包一份字体进主题了。只要字体不正常，开关一次即可
        type: class-toggle
    -
        id: font-latex-text
        title: Use "Text Font" In Non-formula Parts Of Latex
        description: ❗only tested in CJK font, maybe not reconcile with latin characters
        title.zh: 在 latex 非公式部分使用正文字体
        description.zh: 默认的字体比较丑
        type: class-toggle
    -
        id: setting-editor-p-spacing
        title: Editor Paragraph Spacing (px)
        title.zh: 编辑器段落间隔（px）
        type: variable-number-slider
        default: 4
        format: 'px'
        min: 0
        max: 20
        step: 1
    -
        id: setting-editor-p-indent
        title: Editor Paragraph Indent
        description: If 'p-indent' exist in properties.cssclasses, all paragraph will add indent(n times of font size)
        title.zh: 编辑器段落缩进
        description.zh: 在文档属性的cssclasses中存在 'p-indent' 类时，会为段落添加缩进（字体大小的倍数）
        type: variable-number-slider
        default: 2
        min: 0
        max: 4
        step: 0.2
    -
        id: setting-line-height
        title: Editor Line Height
        description: Multiple of the text size
        title.zh: 编辑器行高
        description.zh: 文字大小的倍数
        type: variable-number-slider
        default: 1.8
        min: 1.2
        max: 2.4
        step: 0.1
    -
        id: setting-file-line-width
        title: Editor Line Width
        description: Dynamic width — clamp(MinWidth, WidthPercent, MaxWidth)
        title.zh: 编辑器行宽
        description.zh: 动态宽度 — clamp(最小值, 宽度百分比, 最大值)
        type: variable-text
        default: clamp(600px, 72%, 850px)
    -
        id: setting-underline-offset
        title: Underline Offset
        title.zh: 下划线间距
        type: variable-number-slider
        default: 2
        format: 'px'
        min: 0
        max: 8
        step: 0.5
    -
        id: line-indicator-enable
        title: Hover Line Indicator
        description: Reference from https://github.com/Akifyss/obsidian-border, need install version>=1.1.9
        title.zh: 鼠标经过行指示器
        description.zh: 参考自 https://github.com/Akifyss/obsidian-border, 需要安装版本>=1.1.9
        type: class-toggle
        default: true
    -
        id: line-active-enable
        title: Active Line Hightlight
        title.zh: 当前行高亮
        type: class-toggle
        default: true
    -
        id: setting-line-active-color
        title: Active Line Color
        title.zh: 高亮行颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-normal
        title: Editor Text Color
        title.zh: 编辑器文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: text-highlight
        title: Highlight
        title.zh: 高亮
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-highlight-bg
        title: Highlight Text Background Color
        description: The value can be the value of any background attribute in css
        title.zh: 文本高亮背景色
        description.zh: 填写的值可以为css中任意 background 属性的值
        type: variable-text
        default: 'rgba(255, 208, 0, 0.4)'
    -
        id: setting-text-highlight-color
        title: Highlight Text Color
        title.zh: 文本高亮文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-highlight-radius
        title: Highlight Background Radius
        description: Format px
        title.zh: 高亮背景色圆角大小
        description.zh: 单位 px
        type: variable-number-slider
        default: 4
        min: 0
        max: 8
        step: 1
    -
        id: text-highlight-all-round
        title: Keep Radius When Wrap
        description: Except when edit
        title.zh: 换行时保持圆角
        description.zh: 除了编辑的时候
        type: class-toggle
        default: true
    -
        id: text-highlight-margin
        title: Add Spacing Around Highlight
        title.zh: 增加高亮周围边距
        type: class-toggle
    -
        id: text-bold
        title: Bold
        title.zh: 粗体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-bold-color
        title: Bold Text Color
        title.zh: 粗体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-bold-style
        title: Bold Style
        description: Support any css text-decoration property
        title.zh: 粗体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-bold-font
        title: Bold Font
        title.zh: 粗体字体
        type: variable-text
        default: "''"
    -
        id: text-italic
        title: Italic
        title.zh: 斜体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-italic-color
        title: Italic Text Color
        title.zh: 斜体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-italic-style
        title: Italic Style
        description: Support any css text-decoration property
        title.zh: 斜体样式
        description.zh: 支持任何 css 的 text-decoration 属性值
        type: variable-text
        default: "underline dotted"
    -
        id: setting-text-italic-font
        title: Italic Font
        title.zh: 斜体字体
        type: variable-text
        default: "''"
    -
        id: links
        title: Link
        title.zh: 链接
        type: heading
        collapsed: true
        level: 2
    -
        id: link-hover-expand
        title: Use Underline Animation On Hover
        title.zh: 鼠标经过时开启下划线动画
        type: class-toggle
    -
        id: link-icon
        title: Add Icon Before Link In Editor
        title.zh: 编辑器内链接前添加图标
        type: class-toggle
        default: true
    -
        id: link-heading
        title: Compatible With Heading Style
        description: Keep link color with heading, but keep icon
        title.zh: 兼容标题样式
        description.zh: 链接颜色改为标题颜色，保留图标
        type: class-toggle
    -
        id: link-click-to-edit-in-live-preview
        title: Click To Edit Link In Live-Preview
        description: ❗will disable hover animation, external link prefix icon will be diabled
        title.zh: 实时预览 模式时点击链接进行编辑而不是跳转
        description.zh: ❗鼠标经过动画会消失，外部链接的前置图标会消失
        type: class-toggle
    -
        id: link-color
        title: Link Color
        title.zh: 链接颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-link-internal-color
        title: Internal Link Color
        title.zh: 内部链接颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-internal-color-underline
        title: Internal Link Underline Color
        title.zh: 内部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color
        title: External Link Color
        title.zh: 外部链接颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color-underline
        title: External Link Underline Color
        title.zh: 外部链接下划线颜色
        type: variable-themed-color
        format: rgb
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading
        title: Heading
        title.zh: 标题
        type: heading
        collapsed: true
        level: 2
    -
        id: fix-line-number
        title: Fix Line Number Movement
        description: Will increase '#' size
        title.zh: 修复行号的移动
        description.zh: 将增加 '#' 的大小
        type: class-toggle
    -
        id: heading-level
        title: Heading Level Icon
        description: Add prefix icon for heading, click to collapse title if you open setting “Fold heading”
        title.zh: 标题等级图标
        description.zh: 为标题添加前置图标，如果你开启了“折叠图标”选项，点击图标可以收起标题
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-level-enable
        title: Level Heading Icon
        title.zh: 标题等级图标
        type: class-toggle
    -
        id: heading-level-fix
        title: Always Show Heading Icon
        description: Highlight on hover
        title.zh: 总是显示图标
        description.zh: 鼠标经过时高亮
        type: class-toggle
    -
        id: heading-level
        title: Heading Style Preference
        title.zh: 标题样式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-center
        title: Centered Heading 1
        title.zh: 居中一级标题
        type: class-toggle
        default: true
    -
        id: heading-underline-thin
        title: Thinner Heading Underline
        title.zh: 标题下划线变细
        type: class-toggle
    -
        id: heading-h6-variant
        title: Set Font Small-caps For Heading 6
        description: All characters are capitalized
        title.zh: 为六级标题设置 small-caps 样式
        description.zh: 所有字母都是大写
        type: class-toggle
        default: true
    -
        id: heading-color
        title: Heading Color
        title.zh: 标题颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-color-style
        title: Heading Color Style
        title.zh: 标题颜色样式
        type: class-select
        allowEmpty: false
        default: heading-color-colorful
        options:
            -   label: text color
                value: heading-color-base
            -   label: accent color
                value: heading-color-accent
            -   label: colorful
                value: heading-color-colorful
    -
        id: heading-color-custom
        title: Custom Heading Color
        title.zh: 自定义标题颜色
        type: heading
        level: 4
    -
        id: setting-h1-color
        title: H1 Color
        title.zh: 标题 1 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h2-color
        title: H2 Color
        title.zh: 标题 2 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h3-color
        title: H3 Color
        title.zh: 标题 3 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h4-color
        title: H4 Color
        title.zh: 标题 4 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h5-color
        title: H5 Color
        title.zh: 标题 5 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h6-color
        title: H6 Color
        title.zh: 标题 6 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: heading-size
        title: Heading Size
        description: Compare to normal text
        title.zh: 标题大小
        description.zh: 相对于正文字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-size
        title: H1 Font Size
        title.zh: 标题 1 字体大小
        type: variable-number-slider
        default: 1.6
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h2-size
        title: H2 Font Size
        title.zh: 标题 2 字体大小
        type: variable-number-slider
        default: 1.5
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h3-size
        title: H3 Font Size
        title.zh: 标题 3 字体大小
        type: variable-number-slider
        default: 1.4
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h4-size
        title: H4 Font Size
        title.zh: 标题 4 字体大小
        type: variable-number-slider
        default: 1.3
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h5-size
        title: H5 Font Size
        title.zh: 标题 5 字体大小
        type: variable-number-slider
        default: 1.2
        min: 1
        max: 2.4
        step: 0.1
    -
        id: setting-h6-size
        title: H6 Font Size
        title.zh: 标题 6 字体大小
        type: variable-number-slider
        default: 1.1
        min: 1
        max: 2.4
        step: 0.1
    -
        id: heading-underline
        title: Heading Underline
        description: With line-gredient
        title.zh: 标题下划线
        description.zh: 渐变色
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-h1-underline
        title: Add Underline For H1
        title.zh: 添加 h1 下划线
        type: class-toggle
    -
        id: heading-h2-underline
        title: Add Underline For H2
        title.zh: 添加 h2 下划线
        type: class-toggle
        default: true
    -
        id: heading-h3-underline
        title: Add Underline For H3
        title.zh: 添加 h3 下划线
        type: class-toggle
    -
        id: heading-h4-underline
        title: Add Underline For H4
        title.zh: 添加 h4 下划线
        type: class-toggle
    -
        id: heading-h5-underline
        title: Add Underline For H5
        title.zh: 添加 h5 下划线
        type: class-toggle
    -
        id: heading-h6-underline
        title: Add Underline For H6
        title.zh: 添加 h6 下划线
        type: class-toggle
    -
        id: heading-font
        title: Heading Font
        title.zh: 标题字体
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-h1-font
        title: H1 Font
        title.zh: 标题 1 字体
        type: variable-text
        default: "''"
    -
        id: setting-h2-font
        title: H2 Font
        title.zh: 标题 2 字体
        type: variable-text
        default: "''"
    -
        id: setting-h3-font
        title: H3 Font
        title.zh: 标题 3 字体
        type: variable-text
        default: "''"
    -
        id: setting-h4-font
        title: H4 Font
        title.zh: 标题 4 字体
        type: variable-text
        default: "''"
    -
        id: setting-h5-font
        title: H5 Font
        title.zh: 标题 5 字体
        type: variable-text
        default: "''"
    -
        id: setting-h6-font
        title: H6 Font
        title.zh: 标题 6 字体
        type: variable-text
        default: "''"
    -
        id: hr
        title: Hr
        title.zh: 分隔行
        type: heading
        collapsed: true
        level: 2
    -
        id: hr-enable
        title: Enable Hr Style
        title.zh: 开启分割线样式
        type: class-toggle
        default: true
    -
        id: setting-hr-icon
        title: Set Icon In The Center Of Hr
        title.zh: 分割行中部图标
        type: variable-text
        default: "'⭐'"
    -
        id: table
        title: Table
        title.zh: 表格
        type: heading
        collapsed: true
        level: 2
    -
        id: table-full
        title: Full Width Table
        title.zh: 全宽表格
        type: class-toggle
        default: true
    -
        id: table-colorful
        title: Colorful Table
        description: Accent header and line color
        title.zh: 多彩表格
        description.zh: 添加表头和行的颜色
        type: class-toggle
        default: true
    -
        id: setting-table-header-text
        title: Header Text Color
        title.zh: 表头文字色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-header-bg
        title: Header Background Color
        title.zh: 表头背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-table-line-bg
        title: Alt Line Color
        title.zh: 交错行背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: embed
        title: Embed File
        title.zh: 内嵌文档
        type: heading
        collapsed: true
        level: 2
    -
        id: embed-enable
        title: Block Style Embed File
        title.zh: 块状的内嵌文档
        type: class-toggle
        default: true
    -
        id: embed-title-right-top
        title: Move Embed Title To Right Top
        description: Visiable on hover, disabled when alias is '#', Example ![[FileName|#]]
        title.zh: 内嵌文档标题移至右上角
        description.zh: 鼠标经过时显示；别名为'#'时禁用，例：![[文件名|#]]
        type: class-toggle
        default: true
    -
        id: image
        title: Image
        title.zh: 图片
        type: heading
        collapsed: true
        level: 2
    -
        id: image-alt
        title: Add Alt Text Below And Center The Image
        description: Example ![[image.jpg|alt text]]
        title.zh: 在图片底部添加提示文本并居中图片
        description.zh: 样例 ![[图片.jpg|提示文本]]
        type: class-toggle
        default: true
    -
        id: image-zoom
        title: Click To Zoom Out Image
        description: Invalid in source view or Live-Preview
        title.zh: 鼠标按下时放大图片
        description.zh: 在 源码模式 或者 实时预览 模式不生效
        type: class-toggle
        default: true
    -
        id: image-zoom-out
        title: Zoom Out The Image To Full Screen
        title.zh: 图片放大到全屏
        type: class-toggle
        default: true
    -
        id: image-dark-hover
        title: Decrease Brightness In Dark Mode
        description: Hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: quote
        title: Quote
        title.zh: 引言
        type: heading
        collapsed: true
        level: 2
    -
        id: quote-theme
        title: Alternative Quote Style
        description: With thick guide line
        title.zh: 另一种引言样式
        description.zh: 宽引导线
        type: class-toggle
        default: true
    -
        id: quote-mark
        title: Add Front Quote Mark In Preview Mode
        title.zh: 阅读模式 引言块添加前置引号
        type: class-toggle
    -
        id: quote-outline-style
        title: Preview Mode Outline Style
        title.zh: 阅读模式 外部样式
        type: class-select
        allowEmpty: false
        default: quote-shadow
        options:
            -   label: none
                value: quote-none
            -   label: border
                value: quote-border
            -   label: shadow
                value: quote-shadow
    -
        id: list
        title: List
        title.zh: 列表
        type: heading
        collapsed: true
        level: 2
    -
        id: list-enable
        title: Optimize List Style
        description: ❗no support for list or task items inside callout
        title.zh: 优化列表样式
        description.zh: ❗精力有限，不打算适配 callout 中的列表或者代办项
        type: class-toggle
        default: true
    -
        id: list-bullet-thread-style
        title: Logseq Bullet Thread Style List
        description: ❗WIP
        title.zh: logseq bullet thread 样式的列表
        description.zh: ❗待完成
        type: class-toggle
        default: true
    -
        id: setting-list-marker
        title: List Marker Color
        title.zh: 列表标号颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-marker-alt
        title: List Marker Alt Color
        title.zh: 列表标号颜色 2
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: list-checkbox
        title: Task List (checkbox)
        title.zh: 待办事项（勾选框）
        type: heading
        collapsed: true
        level: 3
    -
        id: list-checkbox-line
        title: Remove Middle Line In Completed Item
        title.zh: 移除已完成事项上的删除线
        type: class-toggle
    -
        id: list-checkbox-alternative
        title: Enable Alternative Checkboxes
        description: Disable this if you are using your own implementation via a CSS Snippet.
        title.zh: 增加勾选框样式
        description.zh: 如果你用了其他勾选框 CSS 片段，可以关闭
        type: class-toggle
    -
        id: setting-list-checkbox-color
        title: Checkbox Marker Color
        title.zh: 勾选框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-color-hover
        title: Checkbox Marker Hover Color
        title.zh: 勾选框鼠标经过色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-list-checkbox-border
        title: Checkbox Marker Border
        title.zh: 勾选框边框
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code
        title: Code
        title.zh: 代码
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-code-inline
        title: Inline Code Color
        title.zh: 行内代码文字色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-code-bg
        title: Code Block Background Color
        title.zh: 代码块背景色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-line-number
        title: Add Code Block Line Number In Live Preview Mode
        description: If the code block lines are too large, the line number will have error
        title.zh: 为 实时预览模式 代码块添加行号
        description.zh: 如果代码块行数太多，行号会出现错误
        type: class-toggle
        default: true
    -
        id: code-language
        title: Add Code Block Language Indicator In Preview Mode
        title.zh: 为 阅读模式 代码块添加语言标识
        type: class-toggle
        default: true
    -
        id: code-nowrap
        title: No Wrap In Preview Mode
        title.zh: 阅读模式 代码块不换行
        type: class-toggle
        default: true
    -
        id: setting-code-ligature
        title: Monospace Font Feature
        description: If you use “Maple Mono” as monospace, recommend to set 'calt','cv02'
        title.zh: 等宽字体字体特性
        description.zh: 如果你使用“Maple Mono”作为等宽字体，推荐设置为 'calt','cv02'
        type: variable-text
        default: "'calt'"
    -
        id: code-preview-bg
        title: Enable Codeblock Background In Preview Mode
        description: Need install version >= 1.1.9
        title.zh: 在 阅读模式 开启代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
    -
        id: setting-code-bg-outer
        title: Custom Codeblock Background In Preview Mode
        description: Need install version >= 1.1.9, image is supported(eg. 'url("/your/image/uri")'), it can be all the css value that supported by background-image
        title.zh: 修改 阅读模式 代码块背景
        description.zh: 需要安装程序版本 >= 1.1.9，支持图片（'url("图片地址")'），可以是 css background-image 支持的所有的值
        type: variable-text
        default: "''"
    -
        id: code-mac-style-header
        title: Add Mac Style Code Block Header In Preview Mode
        description: No code block border
        title.zh: 为 阅读模式 代码块添加mac的标题栏
        description.zh: 没有代码块边框
        type: class-toggle
    -
        id: setting-code-language-color
        title: Language Indicator Color
        title.zh: 语言标识颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-theme
        title: Use Theme's Color Schema
        title.zh: 使用主题的代码高亮
        type: class-toggle
        default: true
    -
        id: tag
        title: Tag
        title.zh: 标签
        type: heading
        collapsed: true
        level: 2
    -
        id: tag-click-to-edit
        title: Click To Edit Tags In Live-Preview Mode
        description: Click '#' to jump
        title.zh: 点击标签进行编辑
        description.zh: 点击'#'跳转
        type: class-toggle
    -
        id: tag-style
        title: Tag Style
        description: Tags of obsidian / todo / important / progress / complete will be colorized when use outline or fill
        title.zh: 标签样式
        description.zh: 当选择 outline 或者 fill 时，obsidian / todo / important / progress / complete 标签会有额外颜色
        type: class-select
        allowEmpty: false
        default: tag-outline
        options:
            -   label: default
                value: tag-default
            -   label: plain
                value: tag-plain
            -   label: outline
                value: tag-outline
            -   label: fill
                value: tag-fill
    -
        id: setting-tag-bg
        title: Tag Background Color
        title.zh: 标签背景颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: tag-outline-setting
        title: Outline Style Setting
        title.zh: 边框模式设置
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-tag-color
        title: Tag Text Color
        title.zh: 标签文字颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-border
        title: Tag Border Color
        title.zh: 标签边框颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: canvas
        title: Canvas
        title.zh: 白板
        type: heading
        collapsed: true
        level: 2
    -
        id: canvas-group-hide
        title: Hide Left Canvas Control Buttons
        description: Show on hover
        title.zh: 隐藏左侧的控制按钮
        description.zh: 鼠标移入时显示
        type: class-toggle
    -
        id: canvas-center
        title: Center Text In Card When Blur Focus
        title.zh: 卡片失去焦点时居中文本
        type: class-toggle
    -
        id: pdf
        title: PDF
        type: heading
        collapsed: true
        level: 2
    -
        id: pdf-dark-hover
        title: Decrease Brightness In Dark Mode
        description: Hover will increase brightness
        title.zh: 黑暗模式下降低图片亮度
        description.zh: 鼠标经过时会增加亮度
        type: class-toggle
        default: true
    -
        id: prop
        title: Properties
        title.zh: 文档属性
        type: heading
        collapsed: true
        level: 2
    -
        id: prop-outline
        title: Add Outlint For Property Panel
        title.zh: 属性面板添加边框
        type: class-toggle
        default: true
*/
/* @settings

name: 🔌 Maple Plugin
id: maple-plugin
settings:
    -
        id: calendar
        title: Calendar
        title.zh: 日历
        type: heading
        collapsed: true
        level: 2
    -
        id: calendar-weekend
        title: Highlight Weekend
        title.zh: 突显周末
        type: class-toggle
        default: true
    -
        id: calendar-swap-year-month
        title: Swap Year & Month
        title.zh: 交换年和月的位置
        type: class-toggle
    -
        id: setting-calendar-year-suffix
        title: Year Suffix
        title.zh: 年份后缀
        type: variable-text
        default: "'年'"
    -
        id: setting-calendar-max-width
        title: Max Width
        description: Support any css max-width property
        title.zh: 最大宽度
        description.zh: 支持任何 css 的 max-width 属性值
        type: variable-text
        default: "500px"
    -
        id: kanban
        title: Kanban
        type: heading
        collapsed: true
        level: 2
    -
        id: setting-kanban-item-color
        title: Kanban Item Font Color
        title.zh: kanban 项 文字颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-item-bg
        title: Kanban Item Background Color
        title.zh: kanban 项 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-kanban-board-bg
        title: Kanban Board Backgound Color
        title.zh: kanban 版面 背景色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: dv
        title: DataView(WIP)
        title.zh: DataView(待完工)
        type: heading
        collapsed: true
        level: 2
    -
        id: dv-enable
        title: Enable Dataview Style
        description: Need install version >= 1.1.9
        title.zh: 启用 dataview 样式
        description.zh: 需要安装程序版本 >= 1.1.9
        type: class-toggle
*/
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color] {
  position: relative;
}
.mod-settings .vertical-tab-content > .setting-item:nth-child(2) > .setting-item-control > input[type=color]::before {
  content: "only change Hue!";
  font-family: var(--font-interface);
  position: absolute;
  width: auto;
  left: calc((var(--swatch-width) + var(--size-4-12) * 2 + 120%) * -1);
  top: 50%;
  transform: translateY(-50%);
}

:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label) {
  transition: var(--animation);
  text-decoration: none !important;
  height: var(--input-height);
  font-size: var(--font-ui-small);
  font-family: inherit;
  font-weight: var(--input-font-weight);
  color: var(--text-normal) !important;
  line-height: var(--input-height);
  padding: 0 0.8em;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 0;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download, .style-settings-import-label):hover {
  box-shadow: var(--input-shadow-hover);
  background-color: var(--interactive-hover);
}

.themed-color-wrapper > .theme-light {
  background-color: #eee;
}
.themed-color-wrapper > .theme-dark {
  background-color: #111;
}
.themed-color-wrapper .pickr-reset > button {
  padding: var(--size-2-3);
}

.pickr .pcr-button::before, .pickr .pcr-button::after {
  border-radius: var(--radius-s);
}

.style-settings-container .setting-item:is([data-id^=setting-accent-h]) input.slider {
  height: 0.8em;
  --hue-slider-sat: 70%;
  --hue-slider-br: 60%;
  background: linear-gradient(to right, hsl(0, var(--hue-slider-sat), var(--hue-slider-br)), hsl(30, var(--hue-slider-sat), var(--hue-slider-br)), hsl(60, var(--hue-slider-sat), var(--hue-slider-br)), hsl(90, var(--hue-slider-sat), var(--hue-slider-br)), hsl(120, var(--hue-slider-sat), var(--hue-slider-br)), hsl(150, var(--hue-slider-sat), var(--hue-slider-br)), hsl(180, var(--hue-slider-sat), var(--hue-slider-br)), hsl(210, var(--hue-slider-sat), var(--hue-slider-br)), hsl(240, var(--hue-slider-sat), var(--hue-slider-br)), hsl(270, var(--hue-slider-sat), var(--hue-slider-br)), hsl(300, var(--hue-slider-sat), var(--hue-slider-br)), hsl(330, var(--hue-slider-sat), var(--hue-slider-br)), hsl(360, var(--hue-slider-sat), var(--hue-slider-br)));
  border-radius: var(--size-2-1);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-h]) .setting-item-control::before {
  content: "";
  font-size: 0.7em;
  text-align: center;
  white-space: pre-wrap;
  height: 1.6em;
  width: 1.6em;
  color: var(--text-normal);
  background-color: hsl(var(--setting-accent-h-light, 116), 32%, 58%);
  position: relative;
  right: 1em;
  border-radius: var(--radius-s);
}
.style-settings-container .setting-item[data-id=setting-accent-h-dark] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-h-dark, 207), 32%, 58%);
}

/* hide option */
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color],
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix],
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]),
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor],
body.bg-default .setting-item[data-id=setting-bg-color],
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]),
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style],
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center],
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow],
body:not(.loading-text) .setting-item[data-id=loading-text-content],
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs],
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]),
body:not(.color-use-custom) .setting-item[data-id*=color-accent-],
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]),
body:not(.code-language) .setting-item[data-id=setting-code-language-color],
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer],
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title],
body:not(.color-use-custom) .setting-item[data-id^=accent-hue],
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light],
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark],
body:not(.message-modify) .setting-item[data-id^=setting-message],
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out],
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix],
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom],
body:not(.table-colorful) .setting-item[data-id^=setting-table],
body:not(.embed-enable) .setting-item[data-id^=embed-title],
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon],
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] {
  display: none;
}
body:not(.line-active-enable) .setting-item[data-id=setting-line-active-color] + .style-settings-container,
body:not(.calendar-swap-year-month) .setting-item[data-id=setting-calendar-year-suffix] + .style-settings-container,
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-shadow]) + .style-settings-container,
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor] + .style-settings-container,
body.bg-default .setting-item[data-id=setting-bg-color] + .style-settings-container,
body.scrollbar-hide .setting-item:is([data-id*=scrollbar-hover], [data-id=scrollbar-movein-animation], [data-id=scrollbar-gutter]) + .style-settings-container,
body:not(.status-bar-enable) .setting-item[data-id*=status-bar-style] + .style-settings-container,
:is(body.status-bar-scroll, body:not(.status-bar-style-float)) .setting-item[data-id=status-bar-style-center] + .style-settings-container,
body:not(.tab-title-bar-round) .setting-item[data-id=tab-title-bar-shadow] + .style-settings-container,
body:not(.loading-text) .setting-item[data-id=loading-text-content] + .style-settings-container,
body:not(.explorer-icon) .setting-item[data-id=setting-color-dirs] + .style-settings-container,
body:not(.search-internal-enable) .setting-item:is([data-id=search-internal-expand-on-focus], [data-id=search-internal-disable-select-all]) + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id*=color-accent-] + .style-settings-container,
body:not(.list-enable) .setting-item:is([data-id*=setting-list-], [data-id=list-checkbox]) + .style-settings-container,
body:not(.code-language) .setting-item[data-id=setting-code-language-color] + .style-settings-container,
body:not(.code-preview-bg) .setting-item[data-id=setting-code-bg-outer] + .style-settings-container,
body:not(.modal-header) .setting-item[data-id=setting-modal-header-title] + .style-settings-container,
body:not(.color-use-custom) .setting-item[data-id^=accent-hue] + .style-settings-container,
body:not(.color-active-custom-light) .setting-item[data-id=setting-color-active-custom-light] + .style-settings-container,
body:not(.color-active-custom-dark) .setting-item[data-id=setting-color-active-custom-dark] + .style-settings-container,
body:not(.message-modify) .setting-item[data-id^=setting-message] + .style-settings-container,
body:not(.image-zoom) .setting-item[data-id^=image-zoom-out] + .style-settings-container,
body:not(.heading-level-enable) .setting-item[data-id^=heading-level-fix] + .style-settings-container,
body:not(.heading-color-colorful) .setting-item[data-id=heading-color-custom] + .style-settings-container,
body:not(.table-colorful) .setting-item[data-id^=setting-table] + .style-settings-container,
body:not(.embed-enable) .setting-item[data-id^=embed-title] + .style-settings-container,
body:not(.hr-enable) .setting-item[data-id^=setting-hr-icon] + .style-settings-container,
body:not(.tag-outline) .setting-item[data-id=tag-outline-setting] + .style-settings-container {
  display: none;
}

/* 参考 https://github.com/damiankorcz/Prism-Theme */
div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--file-margins);
}
body.is-mobile div.workspace-leaf-content[data-type=style-settings] div.view-content {
  padding: var(--size-4-8) var(--size-4-4);
}
body:not(.is-mobile) div.workspace-leaf-content[data-type=style-settings] .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
  flex-direction: row;
}

.setting-item.setting-item-heading.style-settings-heading {
  padding: var(--size-4-2);
  margin: var(--size-4-1) 0;
  border-radius: var(--radius-m);
  padding-left: var(--size-4-3);
}
.setting-item.setting-item-heading.style-settings-heading:hover {
  color: var(--highlight-text-normal);
  background-color: var(--background-modifier-hover);
}

.style-settings-container {
  padding-bottom: unset;
}
.style-settings-container .setting-item {
  padding: var(--size-4-2);
  padding-left: var(--size-4-6);
}
.is-phone .style-settings-container .setting-item {
  margin-top: unset;
}

.style-settings-heading[data-level="0"] {
  background-color: var(--md-container-bg);
  border: 1px solid hsla(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 16%) !important;
}
.style-settings-heading[data-level="0"] + .style-settings-container .style-settings-collapse-indicator {
  margin-left: unset;
}

:is(.setting-item.setting-item-heading.style-settings-heading, .style-settings-container .style-settings-heading) {
  border-bottom: unset;
}

.setting-item-heading .setting-item-description {
  padding-left: var(--size-4-4);
}

.setting-item.setting-item-heading.is-collapsed {
  margin-bottom: unset;
}

.style-settings-container > .setting-item:last-of-type {
  padding-bottom: unset;
  margin-bottom: var(--size-4-4);
}

:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container) {
  padding-left: var(--size-2-1);
  margin-left: var(--size-4-4);
  border-left: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  transition: var(--animation);
}
:is(.style-settings-heading[data-level="0"] + .style-settings-container, .style-settings-container):hover {
  border-left-color: var(--accent-active);
}

body.modal-item-animation .style-settings-heading {
  transition: var(--animation);
}
body.modal-item-animation .style-settings-heading:hover {
  transition: none;
}

/* #endregion [style settings] */
/* #region built-in fonts */
@font-face {
  font-family: "EMBED-TEX-I";
  font-display: swap;
  font-style: normal;
  src: url("data:application/font-woff;base64,") format("woff");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: normal;
  src: local("Maple Mono NF CN Regular"), local("Maple Mono CN Regular"), local("Maple Mono NF Regular"), local("Maple Mono Regular"), url("data:font/woff2;base64,") format("woff2");
}
@font-face {
  font-family: "maplemono";
  font-display: swap;
  font-style: italic;
  src: local("Maple Mono NF CN Italic"), local("Maple Mono CN Italic"), local("Maple Mono NF Italic"), local("Maple Mono Italic"), url("data:font/woff2;base64,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") format("woff2");
}
/* #endregion built-in fonts */
/* #region global variables */
:is(body, body .print) {
  --font-ui-smaller: 13px;
  --font-ui-small: 14px;
  --font-ui-medium: 16px;
  --line-height-normal: 1.8;
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%), 20%);
  --background-modifier-border: var(--accent-inactive);
  --background-modifier-border-focus: var(--accent-inactive);
  --background-modifier-error: rgba(var(--color-red-rgb), 0.8);
  --background-modifier-cover: hsla(var(--background-secondary-hsl), 0.6);
  --interactive-accent: var(--accent-active);
  --radius-xl: var(--size-4-3);
  --animation: var(--setting-animation-time, 200ms) var(--anim-motion-smooth);
  --animation-slow: calc(var(--setting-animation-time, 200ms) * 2) var(--anim-motion-smooth);
  --animation-delay: calc(4 * var(--setting-animation-time, 150ms));
  --bg-opacity: 1;
  --block-outline-width: 3px;
  --editor-bg: var(--setting-editor-bg, var(--background-primary-hsl));
  --nav-item-background-hover: var(--background-modifier-hover);
  --nav-item-background-active: var(--accent-active);
  --nav-item-background-selected: var(--frame-outline-color);
}

html :is(body.obsidian-app, body.obsidian-app .print) {
  --accent-s: 32% !important;
  --accent-l: 58% !important;
}

:is(body.color-use-custom.theme-light.css-settings-manager, body.color-use-custom.theme-light.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-light, 35) !important;
  --accent-s: var(--setting-accent-s-light, 32%) !important;
  --accent-l: var(--setting-accent-l-light, 58%) !important;
}

:is(body.color-use-custom.theme-dark.css-settings-manager, body.color-use-custom.theme-dark.css-settings-manager .print) {
  --accent-h: var(--setting-accent-h-dark, 207) !important;
  --accent-s: var(--setting-accent-s-dark, 32%) !important;
  --accent-l: var(--setting-accent-l-dark, 58%) !important;
}

:is(.theme-light, .theme-light .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 189, 81, 81 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 217, 133, 38 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 200, 154, 4 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 85, 170, 24 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 21, 147, 97 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 6, 149, 188 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 134, 112, 178 !important;
  --background-primary-hsl: var(--accent-h), calc(var(--accent-s) - 12%), 97%;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) - 18), calc(var(--accent-s) - 4%), calc(100% - (100% - var(--accent-l)) / 8);
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-modifier-hover: hsl(var(--accent-h), calc(var(--accent-s) * 1.2), min(var(--accent-l) * 2, 90%));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 4%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) - 4%), calc(var(--accent-l) + 24%));
  --text-on-accent: #fafafa !important;
  --frame-background-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 32%));
  --frame-outline-color: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) - 10%));
  --md-container-bg: var(--setting-md-container-bg, hsla(calc(var(--accent-h) + 8), calc(var(--accent-s) / 1.2), calc(100% - (100% - var(--accent-l)) / 6), 70%));
  --color-opacity: 1;
}

:is(.theme-dark, .theme-dark .print) {
  --color-red: rgba(var(--color-red-rgb), var(--color-opacity)) !important;
  --color-red-rgb: 241, 167, 167 !important;
  --color-orange: rgba(var(--color-orange-rgb), var(--color-opacity)) !important;
  --color-orange-rgb: 240, 192, 168 !important;
  --color-yellow: rgba(var(--color-yellow-rgb), var(--color-opacity)) !important;
  --color-yellow-rgb: 238, 207, 160 !important;
  --color-green: rgba(var(--color-green-rgb), var(--color-opacity)) !important;
  --color-green-rgb: 164, 223, 174 !important;
  --color-cyan: rgba(var(--color-cyan-rgb), var(--color-opacity)) !important;
  --color-cyan-rgb: 161, 232, 229 !important;
  --color-blue: rgba(var(--color-blue-rgb), var(--color-opacity)) !important;
  --color-blue-rgb: 143, 199, 255 !important;
  --color-purple: rgba(var(--color-purple-rgb), var(--color-opacity)) !important;
  --color-purple-rgb: 212, 207, 252 !important;
  --background-primary: hsl(var(--background-primary-hsl));
  --background-primary-hsl: var(--accent-h), 5%, 5%;
  --background-secondary: hsl(var(--background-secondary-hsl));
  --background-secondary-hsl: calc(var(--accent-h) + 8), calc(var(--accent-s) / 6), calc(var(--accent-l) / 5);
  --background-modifier-hover: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) / 3));
  --accent-active: hsl(var(--accent-h), var(--accent-s), calc(var(--accent-l) - 16%));
  --accent-inactive: hsl(var(--accent-h), calc(var(--accent-s) + 24%), calc(var(--accent-l) - 32%));
  --frame-background-color: hsl(var(--accent-h), 12%, 16%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 24), calc(var(--accent-s) + 6%), 24%);
  --frame-muted-color: hsl(var(--accent-h), calc(var(--accent-s) - 20%), calc(var(--accent-l) + 10%));
  --text-normal: hsla(var(--accent-h), 50%, 94%, 75%);
  --text-on-accent: #eaeaea !important;
  --md-container-bg: var(--setting-md-container-bg, hsl(calc(var(--accent-h) - 4), 18%, 9%));
  --color-opacity: 0.85;
}

:is(.theme-light.color-use-custom:not(.color-active-default-light), .theme-light.color-use-custom:not(.color-active-default-light) .print) {
  --accent-active: var(--setting-color-active-custom-light,
     hsl(calc(var(--accent-h) + 60),
       calc(var(--accent-s) + -12%),
       calc(var(--accent-l) + 4%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + 20%)));
}

:is(.theme-dark.color-use-custom:not(.color-active-default-dark), .theme-dark.color-use-custom:not(.color-active-default-dark) .print) {
  --accent-active: var(--setting-color-active-custom-light,
     hsl(calc(var(--accent-h) + 60),
       calc(var(--accent-s) + -12%),
       calc(var(--accent-l) + -12%)));
  --accent-inactive: var(--setting-color-active-custom-dark,
    hsl(calc(var(--accent-h) + 60),
      calc(var(--accent-s) + -12%),
      calc(var(--accent-l) + -28%)));
}

/* #endregion global variables */
/* #region [editor] */
/* #region base */
/* #region paragraph */
body {
  --p-spacing: var(--setting-editor-p-spacing, var(--size-4-1)) ;
}

.p-indent {
  --indent: calc(var(--font-text-size) * var(--setting-editor-p-indent, 2));
}
.p-indent :is([class=cm-line], [class="cm-active cm-line"], p) {
  text-indent: var(--indent);
}
.p-indent p > br {
  content: "";
  white-space: pre;
}
.p-indent p > br::after {
  content: "\a​";
  margin-inline-end: var(--indent);
}

/* #endregion paragraph */
/* #region fix latex */
.font-latex-text mjx-container mjx-utext {
  font-family: var(--font-text) !important;
}

.font-fix-latex mjx-container .TEX-I {
  font-family: MJXZERO, EMBED-TEX-I;
}

mjx-stretchy-h > mjx-ext > mjx-c::before {
  transform: scaleX(200) !important;
}

/* #endregion fix latex */
/* #region monospace */
body:is(:not(.css-settings-manager), .font-maple) {
  --font-monospace-theme: "maplemono";
}

code,
code *,
.HyperMD-codeblock *,
.cm-inline-code {
  font-family: var(--font-monospace);
  font-feature-settings: var(--setting-code-ligature, "calt");
}

/* #endregion monospace */
/* #region editor background */
body {
  --file-line-width: var(--setting-file-line-width, clamp(600px, 72%, 820px));
}

.markdown-source-view.mod-cm6.is-readable-line-width :is(.cm-content, .cm-line) {
  max-width: 100%;
}

.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] {
  background-color: hsla(var(--editor-bg), var(--bg-opacity));
}
.workspace-split.mod-root .workspace-leaf-content[data-type=markdown] .view-content {
  background-color: transparent;
}

/* #endregion editor background */
/* #region text */
body {
  --text-selection: hsla(var(--color-accent-hsl), 0.25);
}

.markdown-source-view,
.markdown-rendered,
.markdown-preview-view,
.community-modal-readme {
  color: var(--setting-text-normal, var(--text-normal));
}

body .markdown-source-view .cm-scroller .cm-line:not(.HyperMD-codeblock) {
  padding-inline: var(--size-4-1);
}

/* #endregion text */
/* #region editor line height */
.workspace-split.mod-root,
.markdown-rendered {
  --line-height-normal: var(--setting-line-height, 1.8) !important;
}

/* #endregion editor line height */
/* #region current line highlight */
.theme-light {
  --active-line: var(--setting-line-active-color, hsl(var(--accent-h), 24%, 92%));
}

.theme-dark {
  --active-line: var(--setting-line-active-color, hsl(var(--accent-h), 18%, 14%));
}

body:is(:not(.css-settings-manager), .line-active-enable) .workspace-leaf.mod-active .markdown-source-view .cm-scroller .cm-line.cm-active {
  background-color: var(--active-line);
  border-radius: var(--size-2-3);
}

/* #endregion current line highlight */
/* #region line indicator */
/* reference from https://github.com/Akifyss/obsidian-border */
body.line-indicator-enable .markdown-preview-sizer > div:not(.search-highlight) {
  position: relative;
}
body.line-indicator-enable :is(.markdown-reading-view .markdown-preview-sizer > div:not(:has(:is(.collapse-indicator, hr, pre, blockquote, table, p img, audio, video))),
.markdown-source-view .cm-line:not(.HyperMD-header, .HyperMD-quote, .HyperMD-list-line-1:has(.collapse-indicator))):hover::after {
  content: "";
  width: var(--size-4-1);
  position: absolute;
  inset-block: var(--size-4-1);
  left: calc(var(--size-4-3) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

/* #endregion line indicator */
/* #region keyboard */
.cm-hmd-html-begin,
.cm-hmd-html-begin ~ .cm-tag,
.cm-hmd-html-end,
.cm-line:has(.cm-hmd-html-begin) {
  font-family: var(--font-monospace);
}

kbd {
  user-select: none;
  text-transform: capitalize;
  border: var(--size-2-1) solid var(--accent-inactive);
  box-shadow: var(--shadow-s);
  border-radius: var(--size-2-3);
  transition: var(--animation);
  font-family: var(--font-monospace) !important;
  color: var(--text-normal) !important;
}
kbd:hover {
  border-color: var(--accent-active);
}

/* #endregion keyboard */
/* #region highlight */
mark {
  color: var(--text-normal);
}

.is-flashing {
  transition: var(--animation);
}

.theme-dark .is-flashing {
  --text-faint: #aaa;
}

body {
  --text-highlight-bg: var(--setting-text-highlight-bg, rgba(var(--color-yellow-rgb), 0.3));
}

.text-highlight-all-round :is(.markdown-source-view .cm-highlight, .markdown-rendered mark) {
  -webkit-box-decoration-break: clone;
}

.markdown-source-view span.cm-highlight,
.markdown-rendered mark {
  border-radius: calc(var(--setting-text-highlight-radius, 4) * 1px);
  color: var(--setting-text-highlight-color);
  background: var(--text-highlight-bg);
}

body.text-highlight-margin :is(.markdown-source-view span.cm-highlight, .markdown-rendered mark) {
  margin: 0 var(--size-2-1);
  padding: var(--size-2-1) var(--size-4-1);
}

.markdown-source-view :is(:not(.cm-highlight) + .cm-formatting-highlight, .cm-formatting-highlight:first-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  margin-right: 0;
  padding-right: 0;
}
.markdown-source-view .cm-formatting-highlight + .cm-highlight {
  border-radius: 0;
  padding-inline: 0;
  margin: 0;
}
.markdown-source-view .cm-highlight + .cm-formatting-highlight {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: 0;
  padding-left: 0;
}

/* #endregion highlight */
/* #region bold & italic */
body {
  --bold-color: var(--setting-text-bold-color, var(--color-red)) !important;
  --italic-color: var(--setting-text-italic-color, var(--color-red)) !important;
}

body :is(.cm-highlight.cm-strong, mark > strong) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}
body :is(.cm-highlight.cm-em, mark > em) {
  color: var(--setting-text-highlight-color, var(--bold-color));
}

em,
.cm-em {
  --blockquote-color: var(--italic-color);
  text-decoration: var(--setting-text-italic-style, underline dotted);
  font-family: var(--setting-text-italic-font, var(--font-text));
}

strong,
.cm-strong {
  --blockquote-color: var(--bold-color);
  text-decoration: var(--setting-text-bold-style, underline dotted);
  font-family: var(--setting-text-bold-font, var(--font-text));
}

:is(em, .cm-em, strong, .cm-strong, u) {
  text-underline-offset: var(--setting-underline-offset, 2);
}

a :is(em, strong) {
  text-decoration: none;
}
a :is(em, strong):hover {
  --bold-color: var(--text-on-accent);
  --italic-color: var(--text-on-accent);
}

/* #endregion bold & italic */
/* #region others */
.workspace-leaf-content[data-type=markdown] .view-header .clickable-icon:hover {
  background-color: var(--background-modifier-hover);
}

.cm-hmd-frontmatter {
  font-size: var(--font-small);
}

.view-header-title-container:not(.mod-at-end):after {
  content: none;
}

input[type=checkbox] {
  transition: var(--animation);
}
input[type=checkbox]:checked::after {
  -webkit-mask-position: 47% 52%;
}

/* #endregion others */
/* #endregion base */
/* #region code */
:is(body, .print .markdown-rendered) {
  --inline-code: var(--setting-code-inline, var(--color-red));
  --code-background: var(--setting-code-bg, var(--md-container-bg));
  --code-function: var(--color-orange);
  --code-important: var(--color-purple);
  --code-keyword: var(--color-purple);
  --code-property: var(--color-orange);
  --code-punctuation: var(--color-blue);
  --code-string: var(--color-green);
  --code-tag: var(--color-red);
  --code-value: var(--color-orange);
  --code-comment: var(--text-faint);
  --code-normal: var(--code-preview-base);
  --code-bg-radius: var(--radius-m);
  --code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}

:is(.theme-light, .theme-light .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 30%));
  --code-mac-style-header-bg: #333;
}

:is(.theme-dark, .theme-dark .print) {
  --code-preview-base: hsl(var(--accent-h),
      var(--accent-s),
      85%);
  --code-mac-style-header-bg: #000;
}

.cm-hmd-codeblock.cm-formatting,
.markdown-rendered code {
  color: var(--inline-code);
}

.markdown-rendered code {
  border: var(--code-bg-border);
}

.markdown-preview-view pre code {
  color: var(--code-preview-base);
  border: none;
  border-radius: 0;
}

.cm-inline-code {
  color: var(--inline-code) !important;
  border-radius: var(--radius-s);
  border: var(--code-bg-border);
}
.cm-inline-code:not(.cm-formatting) {
  padding-inline: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  padding: 0;
}
.cm-inline-code.cm-header {
  color: var(--inline-code) !important;
}

.cm-formatting-code:has(+ .cm-inline-code) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  padding-left: var(--size-2-1);
}
.cm-formatting-code + .cm-inline-code {
  border-radius: 0;
  border-inline: 0;
}
.cm-inline-code + .cm-formatting-code {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  padding-right: var(--size-2-1);
}

.cm-s-obsidian .cm-line.HyperMD-codeblock {
  line-height: calc(var(--line-height-normal) - 0.2);
  color: var(--color-blue) !important;
  border-left: var(--code-bg-border);
  border-right: var(--code-bg-border);
  border-radius: 0 !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock .cm-fold-indicator .collapse-indicator {
  padding-left: var(--size-4-3);
  padding-right: unset !important;
  left: calc(var(--size-4-2) * -3);
  right: unset !important;
  cursor: pointer;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-begin-bg {
  border-top: var(--code-bg-border);
  border-top-left-radius: var(--code-bg-radius) !important;
  border-top-right-radius: var(--code-bg-radius) !important;
  margin-top: var(--size-2-1) !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-end-bg {
  border-bottom: var(--code-bg-border);
  border-bottom-left-radius: var(--code-bg-radius) !important;
  border-bottom-right-radius: var(--code-bg-radius) !important;
  margin-bottom: var(--size-2-1) !important;
}

.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout) {
  box-shadow: none !important;
  border: var(--block-outline-width) solid transparent;
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout):hover {
  border-color: var(--accent-active);
}
.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):not(.cm-callout) .edit-block-button {
  border-radius: var(--radius-m) !important;
  transition: var(--animation);
  inset-block: 0.2rem;
  height: fit-content;
}

.cm-hmd-codeblock .cm-indent::before {
  transform: unset !important;
}

.markdown-source-view.mod-cm6 .code-block-flair:has(svg) {
  width: calc(var(--size-4-8) - var(--size-4-1));
  height: calc(var(--size-4-8) - var(--size-4-1));
  padding: var(--size-4-1);
}
.markdown-source-view.mod-cm6 .code-block-flair:has(svg) svg {
  width: var(--size-4-5);
  height: var(--size-4-5);
}

code[class*=language-],
pre {
  line-height: calc(var(--line-height-normal) - 0.2);
}

body .markdown-rendered pre {
  border-radius: var(--code-bg-radius);
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  overflow-x: hidden;
}
body .markdown-rendered pre:hover {
  border-color: var(--accent-active);
}
body .markdown-rendered pre:hover button.copy-code-button {
  opacity: 1;
}
body .markdown-rendered pre .copy-code-button {
  width: 1.5rem;
  height: 1.5rem;
  line-height: 1.5rem;
  opacity: 0;
  color: transparent;
  background-color: var(--setting-code-language-color, var(--accent-active));
  transition: var(--animation);
  margin: 0;
  display: block !important;
  top: var(--size-2-1);
  right: var(--size-4-1);
  z-index: 9;
}
body .markdown-rendered pre .copy-code-button:hover {
  opacity: 1;
  background-color: var(--text-normal);
}

.code-nowrap.scrollbar-gutter-overlay:not(.code-mac-style-header) .app-container div pre {
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.8) !important;
}
.code-nowrap.scrollbar-gutter-overlay pre code {
  padding-bottom: var(--size-2-3);
}
.code-nowrap pre code {
  word-break: normal;
  word-wrap: break-word;
  white-space: pre;
}

body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre {
  padding: 2rem 0.8rem;
  position: relative;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class*=language-]::before {
  content: "unkown language";
  font-family: var(--font-text);
  color: var(--setting-code-language-color, var(--inline-code));
  font-weight: bold;
  font-size: 0.9rem;
  position: absolute;
  letter-spacing: 0.05rem;
  text-align: right;
  right: calc(1.3rem + 2 * var(--size-4-1));
  top: 0.1333333333rem;
  line-height: var(--line-height-normal);
  z-index: 9;
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-c]::before {
  content: "C";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-properties]::before {
  content: "Properties";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-python]::before {
  content: "Python";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-nginx]::before {
  content: "Nginx";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-css]::before {
  content: "CSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-javascript]::before {
  content: "Javascript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-js]::before {
  content: "JS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-typescript]::before {
  content: "Typescript";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ts]::before {
  content: "TS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-jsp]::before {
  content: "JSP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-php]::before {
  content: "PHP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-lua]::before {
  content: "Lua";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-shell]::before {
  content: "Shell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-powershell]::before {
  content: "PowerShell";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-flow]::before {
  content: "Flow";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sequence]::before {
  content: "Sequence";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sql]::before {
  content: "SQL";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-yaml]::before {
  content: "YAML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-yml]::before {
  content: "YML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ini]::before {
  content: "ini";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-xml]::before {
  content: "XML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cs]::before {
  content: "CS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cpp]::before {
  content: "CPP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-java]::before {
  content: "Java";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-html]::before {
  content: "HTML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-txt]::before {
  content: "TXT";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-md]::before {
  content: "MD";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-markdown]::before {
  content: "Markdown";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-bat]::before {
  content: "Bat";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-json]::before {
  content: "Json";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-groovy]::before {
  content: "Groovy";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-scss]::before {
  content: "SCSS";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-bash]::before {
  content: "Bash";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cmd]::before {
  content: "Cmd";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-latex]::before {
  content: "Latex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-zig]::before {
  content: "Zig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-ssml]::before {
  content: "SSML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-jsx]::before {
  content: "JSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-tsx]::before {
  content: "TSX";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-tsconfig]::before {
  content: "tsconfig";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-git]::before {
  content: "Git";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-csharp]::before {
  content: "CSharp";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-csv]::before {
  content: "CSV";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-cue]::before {
  content: "cue";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-toml]::before {
  content: "TOML";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-kt]::before {
  content: "kt";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-kotlin]::before {
  content: "Kotlin";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-go]::before {
  content: "Go";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-rust]::before {
  content: "Rust";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-regex]::before {
  content: "Regex";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-swift]::before {
  content: "Swift";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-abap]::before {
  content: "ABAP";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-pl/sql"]::before {
  content: "PL/SQL";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-c++"]::before {
  content: "C++";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~="language-c#"]::before {
  content: "C#";
}
body:is(:not(.css-settings-manager), .code-language) .markdown-rendered pre code[class~=language-sh]::before {
  content: "Shell";
}

.markdown-source-view.mod-cm6 .code-block-flair {
  padding-block: 0;
  color: var(--color-red);
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .code-block-flair:hover {
  background-color: var(--nav-item-background-hover);
}

.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.comment, .prolog, .doctype, .cdata), .cm-comment) {
  color: var(--code-comment);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.tag, .constant, .symbol, .deleted, .class-name, .maybe-class-name), .cm-tag, .cm-operator) {
  color: var(--code-tag);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-punctuation, .cm-bracket, .cm-hr, .cm-operator) {
  color: var(--code-punctuation);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.boolean, .number), .cm-number) {
  color: var(--code-value);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.selector, .attr-name, .string, .char, .builtin, .inserted), .cm-qualifier, .cm-string:not(.cm-url), .cm-string-2, .cm-meta:not(.cm-hashtag)) {
  color: var(--code-string);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.entity, .parameter, .property, .property-access, .url, .variable), :is(.language-css, .style) .token.string, .cm-def, .cm-number + .cm-variable) {
  color: var(--code-property);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.attr-value, .function, .class-name), .cm-property, .cm-attribute) {
  color: var(--code-function);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.keyword, .constant, .unit, .builtin, .atrule), .cm-keyword, .cm-builtin, .cm-type, .cm-atom) {
  color: var(--code-keyword);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.regex, .important)) {
  color: var(--code-important);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable, .cm-variable-2, .cm-variable-3) {
  color: var(--code-normal);
}
.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable-2, .cm-variable-3) {
  opacity: 0.7;
}

.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) {
  border: none;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 1.5);
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.5) !important;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) code[class*=language-]::before {
  color: var(--setting-code-language-color, var(--accent-active));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)::after {
  content: "";
  width: 100%;
  height: calc(var(--code-size) * var(--line-height-normal) * 1.1);
  background-color: var(--code-mac-style-header-bg);
  top: 0;
  left: 0;
  position: absolute;
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview)::before {
  content: "";
  width: calc(var(--code-size) - var(--size-2-1));
  height: calc(var(--code-size) - var(--size-2-1));
  position: absolute;
  left: 0.8rem;
  top: calc((var(--code-size) - var(--size-2-1)) * var(--line-height-normal) * 0.6 - var(--code-size) / 3);
  border-radius: 50%;
  z-index: 9;
  background-color: rgba(255, 94, 92, var(--color-opacity));
  box-shadow: calc(var(--size-4-5) * 0.9) 0 0 0 rgba(255, 187, 78, var(--color-opacity)), calc(var(--size-4-5) * 1.8) 0 0 0 rgba(81, 188, 0, var(--color-opacity));
}
.code-mac-style-header:not(:has(.print)) .markdown-rendered pre:not(.dataview) .copy-code-button:hover {
  background-color: var(--accent-inactive);
}

.code-line-number .cm-contentContainer {
  counter-reset: code-line;
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock {
  padding-left: var(--size-4-12);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end)::before {
  counter-increment: code-line;
  content: counter(code-line);
  position: absolute;
  text-align: right;
  width: var(--size-4-8);
  left: 0;
  color: var(--accent-inactive);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end).cm-active::before {
  color: var(--accent-active);
}
.code-line-number .cm-contentContainer .cm-line.HyperMD-codeblock-end {
  counter-reset: code-line;
}

.code-preview-bg {
  --code-bg-s: 50%;
  --code-bg-l: 85%;
}
.code-preview-bg .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  padding: var(--size-4-4) var(--size-4-8);
  margin-block: var(--size-4-4);
  border-radius: var(--setting-code-bg-radius);
  background-image: var(--setting-code-bg-outer, linear-gradient(-30deg, hsl(calc(var(--accent-h) + 145), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 115), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 90), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 65), var(--code-bg-s), var(--code-bg-l)), hsl(calc(var(--accent-h) + 35), var(--code-bg-s), var(--code-bg-l))));
}
.code-preview-bg .markdown-preview-view .markdown-preview-section pre:not([class*=frontmatter]) {
  --code-background: var(--setting-code-bg, hsl(var(--background-secondary-hsl)));
  border-width: 0;
}

.theme-dark .markdown-preview-view .markdown-preview-section div:has(> pre:not([class*=frontmatter])) {
  --code-bg-s: 20%;
  --code-bg-l: 45%;
}

/* #endregion code */
/* #region embed */
body:is(:not(.css-settings-manager), .embed-enable) .cm-embed-block {
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) {
  --embed-background: var(--background-primary);
  --embed-max-height: initial;
  transition: var(--animation);
  padding: var(--size-4-1) var(--size-2-1) !important;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link) {
  padding: var(--size-2-3);
  border-radius: var(--radius-m);
  transition: var(--animation);
  color: var(--accent-active);
  top: 0.2rem;
  right: 0.2rem;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link):hover {
  background-color: var(--nav-item-background-hover);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed).mod-empty {
  border: var(--size-2-1) dotted var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) .markdown-embed-title {
  text-align: center;
  line-height: 2.8;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) {
  border-radius: var(--radius-xl);
  transition: var(--animation);
  margin-block: var(--size-4-1) !important;
  padding: 0;
  border: var(--block-outline-width) solid var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.2) calc(var(--font-text-size) * 1.5);
  position: initial;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .markdown-preview-view .markdown-preview-section {
  min-height: fit-content !important;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed):hover {
  border-color: var(--accent-active);
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed):is(.markdown-embed, .file-embed) .frontmatter + div {
  display: none;
}
body:is(:not(.css-settings-manager), .embed-enable) .internal-embed.is-loaded:not(.image-embed) svg.link {
  transform: rotate(90deg);
}
body:is(:not(.css-settings-manager), .embed-enable).scrollbar-gutter-reserve.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  right: var(--size-4-3);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .obsidian-metatable {
  display: none;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  position: absolute;
  right: var(--size-4-9);
  top: var(--size-4-2);
  z-index: 99;
  opacity: 0;
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) * {
  font-size: 1rem;
  cursor: pointer;
  line-height: 1rem;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):not([src*="#^"]) .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) *::after {
  content: none;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-title {
  opacity: 0;
  position: absolute;
  z-index: 99;
  width: fit-content;
  right: 28px;
  left: unset;
  font-size: 1rem;
  top: var(--size-4-1);
  line-height: 28px;
  height: 28px;
  padding: 0 var(--size-4-2);
  border-radius: var(--radius-m);
  transition: var(--animation);
  cursor: pointer;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover .embed-title:empty + .markdown-embed-content .markdown-preview-section > div:nth-child(3) {
  opacity: 1;
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover :is(.markdown-embed-title, .markdown-embed-link, .file-embed-link:hover svg) {
  opacity: 1;
  color: var(--text-normal);
}
body:is(:not(.css-settings-manager), .embed-enable).embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 1.5);
  padding-bottom: calc(var(--font-text-size) * 1.2);
}

/* #endregion embed */
/* #region hr */
.markdown-rendered hr {
  margin-block-start: 2.4rem !important;
  margin-block-end: 2.4rem !important;
}

body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr {
  overflow: initial;
  border: none;
  position: relative;
  height: var(--size-4-1);
  background-image: linear-gradient(to right, transparent 0%, hsla(var(--color-accent-hsl), 40%) 16%, hsla(var(--color-accent-hsl), 90%) 44%, transparent 44%, transparent 56%, hsla(var(--color-accent-hsl), 90%) 56%, hsla(var(--color-accent-hsl), 40%) 84%, transparent 100%);
}
body.hr-enable :is(.markdown-source-view.mod-cm6, .markdown-rendered) hr::after {
  content: var(--setting-hr-icon, "⭐");
  display: inline-block;
  font-family: var(--font-monospace);
  font-size: var(--font-ui-small);
  position: absolute;
  text-align: center;
  width: var(--input-height);
  height: var(--input-height);
  line-height: var(--input-height);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-active);
  background: var(--md-container-bg);
  border-radius: 50%;
}

/* #endregion hr */
/* #region link */
:is(body, .print .markdown-rendered) {
  --link-color-rgb: var(--setting-link-internal-color, var(--color-blue-rgb));
  --link-external-color-rgb: var(--setting-link-external-color, var(--color-orange-rgb));
  --link-color: rgba(var(--link-color-rgb), var(--color-opacity));
  --link-color-hover: var(--link-color);
  --link-color-underline: var(--setting-link-internal-color-underline, var(--link-color));
  --link-external-color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  --link-external-color-hover: var(--link-external-color);
  --link-external-color-underline: var(--setting-link-external-color-underline, var(--link-external-color));
  --link-unresolved-decoration-color: var(--link-unresolve-color);
  --link-footnote: var(--color-purple);
  --link-text-size: var(--font-text-size);
}

.cm-hmd-footnote .cm-underline {
  color: var(--link-footnote) !important;
  font-size: var(--footnote-size);
  text-decoration-color: var(--link-footnote) !important;
  pointer-events: none;
}

.is-unresolved {
  transition: var(--animation);
}
.is-unresolved:hover {
  --link-color-hover: rgba(var(--link-color-rgb), 0.6) !important;
}

body .cm-s-obsidian .cm-url {
  text-decoration: none;
}

.cm-s-obsidian .cm-formatting-link-string + span.cm-url {
  color: var(--link-color);
}

body span:is(.cm-formatting-link, .cm-formatting-link-string) {
  color: rgba(var(--color-green-rgb), 0.6) !important;
}

body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-external-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-external-color-underline);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):hover {
  background-color: rgba(var(--link-external-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.external-link, .cm-link .cm-underline, .cm-url:not(.cm-string) .cm-underline):active {
  background-color: rgba(var(--link-external-color-rgb), 0.35);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  transition: var(--animation);
  color: rgba(var(--link-color-rgb), var(--color-opacity));
  border-radius: var(--radius-s);
  text-underline-offset: var(--size-2-1);
  text-decoration-color: var(--link-color-underline);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover {
  background-color: rgba(var(--link-color-rgb), 0.15);
}
body:not(.link-hover-expand) :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):active {
  background-color: rgba(var(--link-color-rgb), 0.35);
}

span:is(.cm-url, .cm-link, .cm-hmd-internal-link, .cm-formatting-link.cm-url):hover {
  text-decoration: none;
}

body.link-hover-expand .cm-url {
  --link-external-decoration: none;
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-link {
  --link-external-decoration-hover: none;
}
body.link-hover-expand .cm-hmd-internal-link > .cm-underline {
  --link-decoration-hover: none;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-external-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-external-color) !important;
}
body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):hover, body.link-hover-expand :is(a.external-link:not(.is-unresolved), :is(.cm-link, .cm-url) > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-external-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline) {
  font-size: var(--link-text-size);
  box-shadow: inset 0 -0.1em 0 var(--link-color-underline);
  text-decoration: none !important;
  transition: var(--animation);
  color: var(--link-color) !important;
}
body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):hover, body.link-hover-expand :is(a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline):focus {
  box-shadow: inset 0 -1.3em 0 var(--link-color-underline);
  --link-color: var(--setting-link-internal-color-hover, var(--text-on-accent));
  --link-external-color: var(--setting-link-external-color-hover, var(--text-on-accent));
}
body.link-hover-expand :is(.cm-hmd-internal-link, .cm-link) {
  transition: color var(--animation);
}

body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link > .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  transform: translateY(var(--size-2-1));
  width: calc(var(--link-text-size) - var(--size-2-1));
  height: calc(var(--link-text-size) - var(--size-2-1));
  margin-inline: var(--size-2-1);
  background-color: var(--link-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link:not(.is-resolved), :is(.cm-link:not(.cm-hmd-footnote, .cm-escape), .cm-url) > .cm-underline):not(.cm-escape + .cm-link .cm-underline)::before {
  content: "";
  display: inline-block;
  transition: var(--animation);
  width: calc(var(--link-text-size) - var(--size-4-1));
  height: calc(var(--link-text-size) - var(--size-4-1));
  margin-left: var(--size-2-1);
  margin-right: var(--size-2-1);
  background-color: var(--link-external-color);
}
body.link-icon:not(.link-click-to-edit-in-live-preview) a.external-link {
  background-image: none;
  background-size: unset;
  padding-right: 0;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) span.external-link {
  display: none;
}

body.link-click-to-edit-in-live-preview :is(.cm-url, .cm-link, .cm-hmd-internal-link) .cm-underline {
  pointer-events: none;
}

/* #endregion link */
/* #region list */
body:is(:not(.css-settings-manager), .list-enable) {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
  --list-marker-color-alt: var(--setting-list-marker-alt, var(--list-marker-color));
  --list-marker-color-alt-render: transparent;
  --checkbox-marker-color: var(--text-on-accent);
  --checkbox-border-color: var(--setting-list-checkbox-color, var(--accent-inactive));
  --checkbox-border-color-hover: var(--setting-list-checkbox-color-hover, var(--accent-active));
  --list-bullet-size: calc(var(--font-text-size) / 3 + var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list {
  padding-inline-start: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) .cm-formatting-list,
body:is(:not(.css-settings-manager), .list-enable) li::marker {
  font-family: var(--font-monospace);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-nobullet > .cm-hmd-list-indent {
  margin-inline-end: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-source-view, .markdown-preview-view) .task-list-item-checkbox {
  border-width: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .task-list-item-checkbox {
  margin-inline-start: 0.3rem;
  margin-inline-end: var(--size-4-1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-preview-view .task-list-item-checkbox {
  margin-inline-start: calc(var(--checkbox-size) * -1.3);
}
body:is(:not(.css-settings-manager), .list-enable) .collapse-indicator {
  --cursor: pointer;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 {
  --list-bullet-end-padding: 1.6rem;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .cm-indent::before {
  transform: translateX(-0.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view.mod-cm6 .collapse-indicator {
  transform: translateX(-0.3rem) !important;
}
body:is(:not(.css-settings-manager), .list-enable) li .list-collapse-indicator {
  margin-inline-start: 0 !important;
  padding-inline-end: 1.2rem !important;
  transform: translateX(-2.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) ol li .list-collapse-indicator {
  transform: translateX(-3rem);
}
body:is(:not(.css-settings-manager), .list-enable) .contains-task-list .list-collapse-indicator {
  transform: translateX(-2.4rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ul > li {
  margin-inline-start: calc(var(--font-text-size) * 2 + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered div > ul:is(.has-list-bullet, .contains-task-list) {
  margin-inline-start: calc(var(--size-4-3) * -1);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol {
  padding-left: calc(var(--font-text-size) - 0.1rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol > li {
  margin-inline-start: calc(var(--font-text-size) + 0.25rem);
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol {
  padding-left: calc(var(--font-text-size));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-rendered ol li > ol::before {
  left: calc(var(--font-text-size) * -1.5);
}
body:is(:not(.css-settings-manager), .list-enable) :is(.markdown-rendered, div) > ul {
  --list-indent: 0;
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-2 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-3 .list-bullet {
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.95);
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) .HyperMD-list-line-4 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-border: var(--list-marker-color-alt) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-bullet-radius: 0;
  transform: rotate(45deg);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li {
  --list-marker-color: var(--list-marker-color-alt-render);
  --list-bullet-border: var(--setting-list-marker, var(--accent-active)) var(--size-2-1) solid;
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) - var(--size-2-1));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.5);
  --list-bullet-radius: 0;
  --list-marker-color: var(--list-marker-color-alt);
  --deg: 45deg;
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li .list-bullet {
  transform: rotate(var(--deg));
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li {
  --list-bullet-size: calc(calc(var(--font-text-size) / 3 + var(--size-2-1)) * 0.9 - var(--size-2-1));
  --list-marker-color: var(--list-marker-color-alt-render);
}
body:is(:not(.css-settings-manager), .list-enable) ul > li > ul > li > ul > li > ul > li ul > li {
  --list-bullet-radius: var(--radius-s);
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable).list-checkbox-line {
  --checklist-done-decoration: none;
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout ul > li > ul > li {
  --list-marker-color: var(--setting-list-marker, var(--accent-active));
}
body:is(:not(.css-settings-manager), .list-enable) .markdown-source-view .callout .task-list-item {
  margin-inline-start: calc(var(--font-text-size) / 1.5);
}

body.list-enable .print {
  --list-marker-color-alt-render: var(--list-marker-color-alt);
}

/* #endregion list */
/* #region checkbox */
/* https://github.com/Akifyss/obsidian-border/blob/main/theme.css#L7738C1-L7953C2 */
.list-checkbox-alternative input[data-task="<"]:checked,
.list-checkbox-alternative li[data-task="<"] > input:checked,
.list-checkbox-alternative li[data-task="<"] > p > input:checked,
.list-checkbox-alternative input[data-task=">"]:checked,
.list-checkbox-alternative li[data-task=">"] > input:checked,
.list-checkbox-alternative li[data-task=">"] > p > input:checked,
.list-checkbox-alternative input[data-task=d]:checked,
.list-checkbox-alternative li[data-task=d] > input:checked,
.list-checkbox-alternative li[data-task=d] > p > input:checked,
.list-checkbox-alternative input[data-task=u]:checked,
.list-checkbox-alternative li[data-task=u] > input:checked,
.list-checkbox-alternative li[data-task=u] > p > input:checked,
.list-checkbox-alternative input[data-task=S]:checked,
.list-checkbox-alternative li[data-task=S] > input:checked,
.list-checkbox-alternative li[data-task=S] > p > input:checked,
.list-checkbox-alternative input[data-task=“]:checked,
.list-checkbox-alternative li[data-task=“] > input:checked,
.list-checkbox-alternative li[data-task=“] > p > input:checked,
.list-checkbox-alternative input[data-task=c]:checked,
.list-checkbox-alternative li[data-task=c] > input:checked,
.list-checkbox-alternative li[data-task=c] > p > input:checked,
.list-checkbox-alternative input[data-task=p]:checked,
.list-checkbox-alternative li[data-task=p] > input:checked,
.list-checkbox-alternative li[data-task=p] > p > input:checked,
.list-checkbox-alternative input[data-task=n]:checked,
.list-checkbox-alternative li[data-task=n] > input:checked,
.list-checkbox-alternative li[data-task=n] > p > input:checked,
.list-checkbox-alternative input[data-task=b]:checked,
.list-checkbox-alternative li[data-task=b] > input:checked,
.list-checkbox-alternative li[data-task=b] > p > input:checked,
.list-checkbox-alternative input[data-task="-"]:checked,
.list-checkbox-alternative li[data-task="-"] > input:checked,
.list-checkbox-alternative li[data-task="-"] > p > input:checked,
.list-checkbox-alternative input[data-task=l]:checked,
.list-checkbox-alternative li[data-task=l] > input:checked,
.list-checkbox-alternative li[data-task=l] > p > input:checked,
.list-checkbox-alternative input[data-task=I]:checked,
.list-checkbox-alternative li[data-task=I] > input:checked,
.list-checkbox-alternative li[data-task=I] > p > input:checked,
.list-checkbox-alternative input[data-task="/"]:checked,
.list-checkbox-alternative li[data-task="/"] > input:checked,
.list-checkbox-alternative li[data-task="/"] > p > input:checked,
.list-checkbox-alternative input[data-task=i]:checked,
.list-checkbox-alternative li[data-task=i] > input:checked,
.list-checkbox-alternative li[data-task=i] > p > input:checked,
.list-checkbox-alternative input[data-task="*"]:checked,
.list-checkbox-alternative li[data-task="*"] > input:checked,
.list-checkbox-alternative li[data-task="*"] > p > input:checked,
.list-checkbox-alternative input[data-task="?"]:checked,
.list-checkbox-alternative li[data-task="?"] > input:checked,
.list-checkbox-alternative li[data-task="?"] > p > input:checked,
.list-checkbox-alternative input[data-task="!"]:checked,
.list-checkbox-alternative li[data-task="!"] > input:checked,
.list-checkbox-alternative li[data-task="!"] > p > input:checked {
  --checkbox-marker-color: transparent;
  border: none;
  background-image: none;
  background-color: currentColor;
  -webkit-mask-size: var(--checkbox-icon);
  -webkit-mask-position: 50% 50%;
}
.list-checkbox-alternative input[data-task="!"]:checked,
.list-checkbox-alternative li[data-task="!"] > input:checked,
.list-checkbox-alternative li[data-task="!"] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM6.07 3.55c-.08.29-.09.6-.03.9l.86 4.56c.05.28.2.52.42.7.22.18.49.28.77.28s.55-.1.77-.28c.22-.18.36-.43.42-.7l.86-4.56c.06-.3.04-.61-.03-.9-.08-.29-.22-.57-.41-.8A2.094 2.094 0 0 0 8.11 2c-.3 0-.61.07-.88.2-.28.13-.52.32-.71.55-.19.23-.34.51-.41.8zm3.07 10.01a1.499 1.499 0 1 0-2.12-2.12 1.499 1.499 0 1 0 2.12 2.12z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task="?"]:checked,
.list-checkbox-alternative li[data-task="?"] > input:checked,
.list-checkbox-alternative li[data-task="?"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM4.84 3.66c-.32.48-.09 1.14.44 1.37.23.1.49.1.72 0 .17-.07.31-.18.41-.34.31-.49.82-.89 1.6-.89 1.72 0 2.06 1.61 1.45 2.47-.36.51-.87.91-1.33 1.37-.28.28-.55.58-.74.93-.19.33-.27.69-.31 1.03-.04.31.08.59.28.79.18.18.43.29.71.29.49 0 .89-.38.95-.87.04-.3.1-.45.2-.63.41-.76 1.18-1.12 1.98-2.3.72-1.07.45-2.5-.02-3.27C10.63 2.72 9.56 2 7.99 2c-1.43 0-2.51.7-3.15 1.66zM8 14.67c.73 0 1.33-.6 1.33-1.33s-.6-1.33-1.33-1.33-1.33.6-1.33 1.33.6 1.33 1.33 1.33z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task="*"]:checked,
.list-checkbox-alternative li[data-task="*"] > input:checked,
.list-checkbox-alternative li[data-task="*"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8.91.58C8.83.41 8.7.26 8.54.16 8.38.05 8.19 0 8 0s-.38.05-.54.16c-.16.1-.29.25-.37.42L5.16 4.7l-4.31.66c-.18.03-.35.1-.49.22s-.25.27-.3.45a.99.99 0 0 0 .23 1.02l3.15 3.23-.75 4.57c-.03.19 0 .38.06.55.07.17.19.32.35.43.15.11.33.17.52.18.19 0 .37-.03.54-.12L8 13.76l3.84 2.13c.16.09.35.13.54.12.19-.01.37-.07.52-.18.15-.11.27-.26.35-.43.07-.17.09-.36.06-.55l-.75-4.57 3.15-3.23a.99.99 0 0 0 .23-1.02.99.99 0 0 0-.31-.45.914.914 0 0 0-.49-.22l-4.31-.66L8.91.58z" /></svg>');
}
.list-checkbox-alternative input[data-task=i]:checked,
.list-checkbox-alternative li[data-task=i] > input:checked,
.list-checkbox-alternative li[data-task=i] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M10.67 13v-1.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-1V5.67c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09H5.68c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h1V11h-1c-.1 0-.18.03-.24.09s-.09.14-.09.24V13c0 .1.03.18.09.24s.14.09.24.09h4.67c.1 0 .18-.03.24-.09s.09-.14.09-.24zM9.34 3.67V2c0-.1-.03-.18-.09-.24s-.14-.09-.24-.09h-2c-.1 0-.18.03-.24.09s-.09.14-.09.24v1.67c0 .1.03.18.09.24s.14.09.24.09h2c.1 0 .18-.03.24-.09s.09-.14.09-.24zM16.01 8c0 1.45-.36 2.79-1.07 4.02a7.962 7.962 0 0 1-2.91 2.91C10.8 15.65 9.47 16 8.01 16s-2.79-.36-4.02-1.07a7.962 7.962 0 0 1-2.91-2.91C.36 10.79.01 9.46.01 8s.35-2.79 1.06-4.02c.72-1.23 1.69-2.2 2.91-2.91C5.21.35 6.54 0 8 0s2.79.36 4.02 1.07c1.23.72 2.2 1.69 2.91 2.91C15.65 5.21 16 6.54 16 8z"/></svg>');
}
.list-checkbox-alternative input[data-task="/"]:checked,
.list-checkbox-alternative li[data-task="/"] > input:checked,
.list-checkbox-alternative li[data-task="/"] > p > input:checked {
  --checkbox-color-hover: var(--color-yellow);
  color: var(--color-yellow);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none;}.cls-2{fill-rule:evenodd;}</style></defs><rect class="cls-1" width="16" height="16"/><path class="cls-2" d="M13.66,13.66c-1.45,1.45-3.45,2.34-5.66,2.34C3.58,16,0,12.42,0,8S3.58,0,8,0c2.17,0,4.15,.87,5.59,2.28,.06,.06,.12,.12,.18,.18,1.37,1.43,2.22,3.36,2.23,5.5,0,.03,0,.07,0,.1-.01,2.19-.91,4.17-2.34,5.6Zm-1.41-1.41c-1.09,1.09-2.59,1.76-4.24,1.76-3.31,0-6-2.69-6-6S4.69,2,8,2v6l4.24,4.24Z"/></svg>');
}
.list-checkbox-alternative input[data-task=I]:checked,
.list-checkbox-alternative li[data-task=I] > input:checked,
.list-checkbox-alternative li[data-task=I] > p > input:checked {
  --checkbox-color-hover: var(--color-orange);
  color: var(--color-orange);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><defs><style>.cls-1{fill:none}</style></defs><path class="cls-1" d="M0 0h16v16H0z"/><path class="cls-1" d="M0 0h16v16H0z"/><path d="M9 1c0-.27-.11-.52-.29-.71C8.52.1 8.27 0 8 0s-.52.11-.71.29A.99.99 0 0 0 7 1v1c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29A.99.99 0 0 0 9 2V1zm4.66 2.76c.18-.19.28-.44.28-.7 0-.26-.11-.51-.29-.7s-.44-.29-.7-.29c-.26 0-.51.1-.7.28l-.71.71c-.18.19-.28.44-.28.7 0 .26.11.51.29.7s.44.29.7.29c.26 0 .51-.1.7-.28l.71-.71zM16 8c0 .27-.11.52-.29.71A.99.99 0 0 1 15 9h-1c-.27 0-.52-.11-.71-.29C13.1 8.52 13 8.27 13 8s.11-.52.29-.71A.99.99 0 0 1 14 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zM3.05 4.46c.09.1.2.17.32.22.12.05.25.08.39.08.13 0 .26-.02.39-.07a1.004 1.004 0 0 0 .55-.55c.05-.12.08-.25.07-.39 0-.13-.03-.26-.08-.39-.05-.12-.13-.23-.22-.32l-.71-.71c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.29.44-.29.7c0 .26.1.51.28.7l.71.71zM3 8c0 .27-.11.52-.29.71A.99.99 0 0 1 2 9H1c-.27 0-.52-.11-.71-.29C.1 8.52 0 8.27 0 8s.11-.52.29-.71A.99.99 0 0 1 1 7h1c.27 0 .52.11.71.29.19.19.29.44.29.71zm3 6v-1h4v1c0 .53-.21 1.04-.59 1.41a1.983 1.983 0 0 1-2.82 0C6.21 15.03 6 14.53 6 14zm4-2c.02-.34.21-.65.48-.86.65-.51 1.13-1.22 1.36-2.02.23-.8.21-1.65-.06-2.43-.27-.79-.78-1.47-1.46-1.95C9.64 4.26 8.83 4 8 4s-1.64.26-2.32.74C5 5.22 4.49 5.9 4.22 6.69s-.29 1.64-.06 2.43c.23.8.71 1.5 1.36 2.02.27.21.46.52.48.86h4z"/></svg>');
}
.list-checkbox-alternative input[data-task=l]:checked,
.list-checkbox-alternative li[data-task=l] > input:checked,
.list-checkbox-alternative li[data-task=l] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M8 .12A6.176 6.176 0 0 0 1.82 6.3a6.144 6.144 0 0 0 1.45 3.96l4.74 5.6 4.75-5.6.19-.25A6.144 6.144 0 0 0 14.2 6.3c0-1.64-.65-3.21-1.81-4.37A6.345 6.345 0 0 0 8 .12zm0 8.44c-.45 0-.88-.13-1.25-.38s-.66-.6-.83-1.01c-.17-.41-.21-.86-.13-1.3.09-.44.3-.84.62-1.15.31-.31.72-.53 1.15-.62.44-.09.89-.04 1.3.13.41.17.76.46 1.01.83a2.24 2.24 0 0 1-.28 2.84c-.42.42-.99.66-1.59.66z" /></svg>');
}
.list-checkbox-alternative input[data-task="-"]:checked,
.list-checkbox-alternative li[data-task="-"] > input:checked,
.list-checkbox-alternative li[data-task="-"] > p > input:checked {
  --checkbox-color-hover: var(--text-faint);
  color: var(--text-faint);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z"/><path fill="none" d="M0 0h16v16H0z"/><path d="M8 16c4.42 0 8-3.58 8-8s-3.58-8-8-8-8 3.58-8 8 3.58 8 8 8zM3.5 7c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9z" fill-rule="evenodd"/></svg>');
}
.list-checkbox-alternative body:not(.tasks) .markdown-preview-view ul li[data-task="-"].task-list-item.is-checked,
.list-checkbox-alternative body:not(.tasks) .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task="-"]),
.list-checkbox-alternative body:not(.tasks) li[data-task="-"].task-list-item.is-checked {
  color: var(--text-faint);
  text-decoration: line-through solid var(--text-faint) 1px;
}
.list-checkbox-alternative input[data-task=b]:checked,
.list-checkbox-alternative li[data-task=b] > input:checked,
.list-checkbox-alternative li[data-task=b] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M4.25.5c-.6 0-1.17.24-1.59.66-.42.42-.66.99-.66 1.59V14.1c0 .2.05.39.15.56.1.17.24.31.41.41.17.1.36.15.56.15.2 0 .39-.05.56-.15l3.94-2.25c.11-.06.24-.1.37-.1s.26.03.37.1l3.95 2.25c.17.1.36.15.56.15.2 0 .39-.05.56-.15.17-.1.31-.24.41-.41s.15-.36.15-.56V2.75c0-.6-.24-1.17-.66-1.59-.42-.42-.99-.66-1.59-.66H4.25z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=n]:checked,
.list-checkbox-alternative li[data-task=n] > input:checked,
.list-checkbox-alternative li[data-task=n] > p > input:checked {
  --checkbox-color-hover: var(--color-cyan);
  color: var(--color-cyan);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 14.75c-.41 0-.77-.15-1.06-.44-.29-.29-.44-.65-.44-1.06V2.75c0-.41.15-.77.44-1.06.29-.29.65-.44 1.06-.44h10.5c.41 0 .77.15 1.06.44.29.29.44.65.44 1.06v7.5l-4.5 4.5h-7.5zm4.5-5.25c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 7.25 8H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53c.14.14.32.22.53.22h2.25zm3.75-3c.21 0 .39-.07.53-.22.14-.14.22-.32.22-.53s-.07-.39-.22-.53A.732.732 0 0 0 11 5H5c-.21 0-.39.07-.53.22-.14.14-.22.32-.22.53s.07.39.22.53.32.22.53.22h6zm-1.5 6.75l3.75-3.75h-3c-.21 0-.39.07-.53.22s-.22.32-.22.53v3z" /></svg>');
}
.list-checkbox-alternative input[data-task=p]:checked,
.list-checkbox-alternative li[data-task=p] > input:checked,
.list-checkbox-alternative li[data-task=p] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 16h16V0H0v16z" fill="none" /><path d="M3.33 15h-.72c-.33 0-.66-.13-.9-.35-.25-.23-.4-.54-.43-.87L.73 7.11c-.02-.18 0-.37.07-.54.06-.18.16-.34.28-.47.13-.14.28-.25.45-.32.17-.07.35-.11.54-.11h1.27A1.333 1.333 0 0 1 4.67 7v6.67A1.333 1.333 0 0 1 3.34 15zM15.4 7.69l-1.79 6.34c-.08.28-.25.53-.48.7-.23.17-.52.27-.81.27H6.67a1.333 1.333 0 0 1-1.33-1.33V7.13c0-.53.32-1.02.81-1.25.79-.37 1.38-.82 1.62-1.22.36-.6.53-1.78.57-2.65 0-.06 0-.12.01-.18.06-.41.34-.72.73-.8.07-.01.14-.02.21-.02.8 0 1.73.83 2.12 1.48.29.48.41 1.09.36 1.84-.03.55-.18 1.05-.33 1.55L11.4 6h2.72c.21 0 .41.05.6.14.18.09.34.23.47.39.12.17.21.35.24.55.04.2.03.41-.03.61zM9 1.94z" /></svg>');
}
.list-checkbox-alternative input[data-task=c]:checked,
.list-checkbox-alternative li[data-task=c] > input:checked,
.list-checkbox-alternative li[data-task=c] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M0 0h16v16H0V0z" fill="none" /><path d="M3.33 1h-.72c-.33 0-.66.13-.9.35-.25.23-.4.54-.43.87L.72 8.89c-.02.18 0 .37.07.54.06.18.16.34.28.47.13.14.28.25.45.32.17.07.35.11.54.11h1.27A1.333 1.333 0 0 0 4.66 9V2.33A1.333 1.333 0 0 0 3.33 1zM15.4 8.31l-1.79-6.34c-.08-.28-.25-.53-.48-.7-.23-.17-.52-.27-.81-.27H6.67a1.333 1.333 0 0 0-1.33 1.33v6.54c0 .53.32 1.02.81 1.25.79.37 1.38.82 1.62 1.22.36.6.53 1.78.57 2.65 0 .06 0 .12.01.18.06.41.34.72.73.8.07.01.14.02.21.02.8 0 1.73-.83 2.12-1.48.29-.48.41-1.09.36-1.84-.03-.55-.18-1.05-.33-1.55L11.4 10h2.72c.21 0 .41-.05.6-.14.18-.09.34-.23.47-.39.12-.17.21-.35.24-.55.04-.2.03-.41-.03-.61zM9 14.06z" /></svg>');
}
.list-checkbox-alternative input[data-task=“]:checked,
.list-checkbox-alternative li[data-task=“] > input:checked,
.list-checkbox-alternative li[data-task=“] > p > input:checked {
  --checkbox-color-hover: var(--color-purple);
  color: var(--color-purple);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.46 4.19c.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94h2.05c.18 0 .35.07.47.2.13.13.2.29.2.47V12c0 .74-.6 1.33-1.33 1.33H2c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19zm10.87 9.14h-4c-.18 0-.35-.07-.47-.2a.634.634 0 0 1-.2-.47V7.39c0-.07-.13-1.83 1.13-3.19.94-1.01 2.35-1.53 4.21-1.53h.67v1.88l-.54.11c-.91.18-1.55.54-1.89 1.07-.18.28-.28.61-.29.94H14c.18 0 .35.07.47.2s.2.29.2.47v4.67c0 .74-.6 1.33-1.33 1.33z" /></svg>');
}
.list-checkbox-alternative input[data-task=S]:checked,
.list-checkbox-alternative li[data-task=S] > input:checked,
.list-checkbox-alternative li[data-task=S] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M6.43 5.42c.15-.1.35-.2.57-.27v1.7c-.2-.06-.39-.15-.57-.27C6.07 6.34 6 6.11 6 6s.07-.34.43-.58zM9 10.85v-1.7c.22.07.41.16.57.27.36.24.43.47.43.58s-.07.34-.43.58c-.18.11-.37.2-.57.27z" /><path d="M8 16c2.12 0 4.16-.84 5.66-2.34S16 10.12 16 8s-.84-4.16-2.34-5.66S10.12 0 8 0 3.84.84 2.34 2.34 0 5.88 0 8s.84 4.16 2.34 5.66S5.88 16 8 16zM9 3c0-.27-.11-.52-.29-.71C8.52 2.1 8.27 2 8 2s-.52.11-.71.29A.99.99 0 0 0 7 3v.09c-.6.11-1.17.33-1.68.66C4.6 4.23 4 5 4 6s.6 1.76 1.32 2.25c.48.32 1.05.55 1.68.66v1.94c-.39-.13-.68-.32-.84-.5a.95.95 0 0 0-.31-.25c-.12-.06-.25-.1-.38-.11s-.27 0-.4.05a.94.94 0 0 0-.35.2 1.02 1.02 0 0 0-.34.7c0 .13.01.27.06.39.05.13.12.24.21.34.56.65 1.41 1.08 2.35 1.25v.09c0 .27.11.52.29.71.19.19.44.29.71.29s.52-.11.71-.29a.99.99 0 0 0 .29-.71v-.09c.6-.11 1.17-.33 1.68-.66C11.4 11.78 12 11 12 10.01s-.6-1.77-1.32-2.25C10.17 7.43 9.6 7.2 9 7.1V5.16c.39.13.68.32.84.5.09.1.19.18.31.25.12.06.25.1.38.11.13.01.26 0 .39-.05.13-.04.24-.11.34-.19.1-.09.18-.19.24-.31s.09-.25.1-.38c0-.13 0-.26-.05-.39a.9.9 0 0 0-.2-.34C10.79 3.71 9.94 3.28 9 3.11v-.09z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=u]:checked,
.list-checkbox-alternative li[data-task=u] > input:checked,
.list-checkbox-alternative li[data-task=u] > p > input:checked {
  --checkbox-color-hover: var(--color-green);
  color: var(--color-green);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 5c-.27 0-.52-.11-.71-.29C9.1 4.52 9 4.27 9 4s.11-.52.29-.71A.99.99 0 0 1 10 3h5c.27 0 .52.11.71.29.19.19.29.44.29.71v5c0 .27-.11.52-.29.71-.19.19-.44.29-.71.29s-.52-.11-.71-.29A.99.99 0 0 1 14 9V6.41L9.71 10.7c-.19.19-.44.29-.71.29s-.52-.11-.71-.29L6 8.41l-4.29 4.3c-.19.18-.44.28-.7.28-.26 0-.51-.11-.7-.29s-.3-.44-.3-.7c0-.26.1-.51.28-.7l5-5.01C5.48 6.1 5.73 6 6 6s.52.11.71.29L9 8.58l3.59-3.59H10z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=d]:checked,
.list-checkbox-alternative li[data-task=d] > input:checked,
.list-checkbox-alternative li[data-task=d] > p > input:checked {
  --checkbox-color-hover: var(--color-red);
  color: var(--color-red);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M10 11c-.27 0-.52.11-.71.29-.19.19-.29.44-.29.71s.11.52.29.71c.19.19.44.29.71.29h5c.27 0 .52-.11.71-.29A.99.99 0 0 0 16 12V7c0-.27-.11-.52-.29-.71C15.52 6.1 15.27 6 15 6s-.52.11-.71.29A.99.99 0 0 0 14 7v2.59L9.71 5.3c-.19-.19-.44-.29-.71-.29s-.52.11-.71.29L6 7.59l-4.29-4.3c-.19-.18-.44-.28-.7-.28-.26 0-.51.11-.7.29s-.3.44-.3.7c0 .26.1.51.28.7l5 5c.19.19.44.29.71.29s.52-.11.71-.29L9 7.41 12.59 11H10z" fill-rule="evenodd" /></svg>');
}
.list-checkbox-alternative input[data-task=">"]:checked,
.list-checkbox-alternative li[data-task=">"] > input:checked,
.list-checkbox-alternative li[data-task=">"] > p > input:checked {
  --checkbox-color-hover: var(--color-pink);
  color: var(--color-pink);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M1.72 1.05A.503.503 0 0 0 1.45 1c-.09 0-.18.04-.26.1a.503.503 0 0 0-.18.49l1.4 4.85a.513.513 0 0 0 .4.35l5.69.95c.27.05.27.44 0 .49l-5.69.95a.513.513 0 0 0-.4.35l-1.4 4.85a.492.492 0 0 0 .18.49c.07.06.16.09.26.1.09 0 .19 0 .27-.05l13-6.5c.08-.04.15-.11.2-.18.05-.08.07-.17.07-.26s-.03-.18-.07-.26a.494.494 0 0 0-.2-.18l-13-6.49z" /></svg>');
}
.list-checkbox-alternative input[data-task="<"]:checked,
.list-checkbox-alternative li[data-task="<"] > input:checked,
.list-checkbox-alternative li[data-task="<"] > p > input:checked {
  --checkbox-color-hover: var(--color-blue);
  color: var(--color-blue);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" d="M0 0h16v16H0z" /><path d="M2.75 15.5h10.5c.83 0 1.5-.67 1.5-1.5V3.5c0-.83-.67-1.5-1.5-1.5h-1.5V.5h-1.5V2h-4.5V.5h-1.5V2h-1.5c-.83 0-1.5.67-1.5 1.5V14c0 .83.67 1.5 1.5 1.5zm0-11.25h10.5v1.5H2.75v-1.5z" /></svg>');
}

/* #endregion checkbox */
/* #region quote */
:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
  --callout-radius: var(--radius-l);
}

body.quote-theme {
  --blockquote-border-color: var(--accent-active);
  /* 引导线高度修复 */
}
body.quote-theme :is(.markdown-source-view, .markdown-rendered) {
  --blockquote-border-thickness: var(--size-4-1);
  --blockquote-radius: var(--size-2-3);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border)::before {
  width: var(--blockquote-border-thickness);
  border-left: none;
  background-color: var(--blockquote-border-color);
  border-radius: var(--blockquote-radius);
  inset-block: var(--blockquote-radius);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote, .cm-blockquote-border) :not(:first-child)::before {
  transform: translateX(var(--size-2-1));
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote {
  border-radius: 0 !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active:not(:has(+ .HyperMD-quote:not(.HyperMD-callout))) {
  border-bottom-left-radius: var(--blockquote-radius) !important;
  border-bottom-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote.cm-active .cm-blockquote-border::before {
  background-color: transparent;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote::before {
  left: calc(var(--blockquote-border-thickness) / 2);
  z-index: 10;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote + .HyperMD-quote::before {
  top: calc(var(--blockquote-radius) * -2);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) {
  border-top-left-radius: var(--blockquote-radius) !important;
  border-top-right-radius: var(--blockquote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote))::after,
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) .cm-quote.cm-formatting::after {
  content: none !important;
}
body.quote-theme .markdown-rendered blockquote {
  --h1-size: var(--font-text-size);
  --h2-size: var(--font-text-size);
  --h3-size: var(--font-text-size);
  --h4-size: var(--font-text-size);
  --h5-size: var(--font-text-size);
  --h6-size: var(--font-text-size);
  --h1-line-height: var(--setting-line-height, var(--line-height-normal));
  --h2-line-height: var(--setting-line-height, var(--line-height-normal));
  --h3-line-height: var(--setting-line-height, var(--line-height-normal));
  --h4-line-height: var(--setting-line-height, var(--line-height-normal));
  --h5-line-height: var(--setting-line-height, var(--line-height-normal));
  --h6-line-height: var(--setting-line-height, var(--line-height-normal));
  border: none;
  border-radius: var(--blockquote-radius);
  position: relative;
  margin-block: var(--size-4-3);
}
body.quote-theme .markdown-rendered blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: var(--blockquote-border-thickness);
  padding-right: var(--size-4-3);
}
body.quote-theme .markdown-rendered blockquote::after {
  content: "";
  position: absolute;
  left: calc(var(--blockquote-radius) * 4 / 5);
  top: var(--blockquote-radius);
  border-radius: var(--blockquote-radius);
  height: calc(100% - var(--blockquote-radius) * 2);
  width: var(--blockquote-border-thickness);
  background-color: var(--accent-active);
}
body.quote-theme .markdown-rendered blockquote blockquote {
  box-shadow: none;
  margin-inline-end: var(--size-4-3) !important;
}
body.quote-theme.quote-shadow .markdown-rendered blockquote {
  box-shadow: var(--shadow-s);
}
body.quote-theme.quote-border .markdown-rendered blockquote {
  border: var(--block-outline-width) solid var(--accent-inactive);
  transition: var(--animation);
  box-shadow: none;
}
body.quote-theme.quote-border .markdown-rendered blockquote:hover {
  border-color: var(--accent-active);
}
body.quote-theme.quote-border .markdown-rendered blockquote blockquote {
  margin: var(--block-outline-width);
}
body.quote-theme.quote-mark.quote-theme blockquote {
  padding-left: 2.28rem;
}
body.quote-theme.quote-mark.quote-theme blockquote::before {
  position: absolute;
  font-size: 3rem;
  font-family: Source Code Pro;
  line-height: 1;
  content: "“" !important;
  background-color: transparent;
  color: var(--text-muted);
  top: calc(var(--font-text-size) * var(--line-height-normal) - 2.1428571429rem);
  transform: translateX(-1.32rem);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote {
  padding-left: var(--size-4-6);
}
body.quote-theme :is(.markdown-preview-view, .community-modal-readme.markdown-rendered) blockquote :is(p, h1, h2, h3, h4, h5, h6) {
  padding-left: calc(var(--blockquote-border-thickness) * 2);
}
body.quote-theme :is(.HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-2 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-3 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-4 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-5 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-6 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-7 .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.cm-active) + .HyperMD-quote-8 .cm-blockquote-border:nth-of-type(-n + 8))::before {
  top: calc(var(--blockquote-radius) * -2);
}

/* #endregion quote */
/* #region table */
body {
  --table-radius: var(--size-2-3);
  --table-btn-color: var(--text-on-accent);
  --table-btn-bg: var(--accent-inactive);
  --table-header-bg: var(--setting-table-header-bg, var(--md-container-bg));
  --table-alt-line-bg: var(--setting-table-line-bg, var(--md-container-bg));
  --table-cell-vertical-alignment: middle;
}

.markdown-rendered table {
  border-collapse: initial;
  border-spacing: 0;
}

body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) {
  --table-white-space: break-all;
  width: 100%;
}
body:is(:not(.css-settings-manager), .table-full) :is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-editor {
  width: 100%;
}

:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-col-btn {
  border-top-right-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-row-btn {
  border-bottom-left-radius: var(--table-radius);
  border-bottom-right-radius: var(--table-radius);
  color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(.table-col-btn, .table-row-btn, .table-col-drag-handle:hover, .table-row-drag-handle:hover) {
  transition: var(--animation);
  background-color: var(--table-btn-bg);
  --table-drag-handle-color: var(--table-btn-color);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(tr:hover .table-row-drag-handle, th:hover .table-col-drag-handle) {
  opacity: 1;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:first-child:not(:has(:is(.table-row-drag-handle, .table-col-drag-handle):hover)) {
  border-top-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) th:last-child:not(:has(.table-col-drag-handle:hover)) {
  border-top-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-col-btn:hover) th:last-child {
  border-top-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:first-child {
  border-bottom-left-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(.table-row-btn:hover) tr:last-child td:first-child {
  border-bottom-left-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tr:last-child td:last-child {
  border-bottom-right-radius: var(--table-radius);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table):has(:is(.table-col-btn, .table-row-btn):hover) tr:last-child td:last-child {
  border-bottom-right-radius: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) :is(th, td):not(:first-child) {
  border-left: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody td {
  border-top: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) thead tr {
  background-color: var(--table-header-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n) {
  background-color: var(--table-alt-line-bg);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) tbody tr:nth-of-type(2n+1) {
  background-color: var(--background-primary);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .cm-s-obsidian):not(:has(.image-embed)) {
  padding-inline: var(--size-4-1);
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(> .image-embed) {
  display: table-cell;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper .image-embed {
  padding-block: 0;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
:is(.markdown-source-view.mod-cm6 .cm-table-widget .table-wrapper, .markdown-rendered table) .table-cell-wrapper:has(.is-live-preview .image-embed) [class=cm-line] {
  display: none;
}

body.table-colorful table {
  --table-header-color: var(--setting-table-header-text, var(--text-on-accent));
  --table-header-bg: var(--setting-table-header-bg, var(--accent-active));
}
body.table-colorful .markdown-source-view table thead .cm-s-obsidian {
  color: var(--setting-table-header-text, var(--text-normal));
}

/* #endregion table */
/* #region tag */
body {
  --tag-color: var(--accent-active);
}

.HyperMD-header .cm-hashtag {
  font-size: var(--tag-size) !important;
}

:is(body, .print .markdown-rendered) {
  --tag-padding-x: 0.4rem;
  --tag-padding-y: 0.05rem;
}

.cm-line span.cm-hashtag {
  vertical-align: baseline;
}

body.tag-click-to-edit .cm-line span.cm-hashtag:not(.cm-formatting) {
  pointer-events: none;
}

body.tag-plain {
  --tag-background: transparent;
}

body.tag-outline {
  --tag-border-color: var(--setting-tag-outline, var(--accent-inactive)) !important;
  --tag-border-width: var(--size-2-1) !important;
  --tag-color: var(--setting-tag-color, var(--accent-active)) !important;
}
body.tag-outline :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-border-color: var(--color-purple) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-border-color: var(--color-green) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-border-color: var(--color-red) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-border-color: var(--color-blue) !important;
  --tag-color: var(--tag-border-color);
}
body.tag-outline :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-border-color: var(--color-orange) !important;
  --tag-color: var(--tag-border-color);
}

body.tag-fill {
  --tag-background: var(--setting-tag-bg, var(--accent-active)) !important;
  --tag-background-hover: var(--tag-background);
  --tag-color: var(--text-on-accent);
  --tag-color-hover: var(--tag-color);
}
body.tag-fill :is(.cm-tag-obsidian, .tag[href="#obsidian"]) {
  --tag-background: var(--color-purple) !important ;
}
body.tag-fill :is(.cm-tag-todo, .tag[href="#todo"]) {
  --tag-background: var(--color-green) !important ;
}
body.tag-fill :is(.cm-tag-important, .tag[href="#important"]) {
  --tag-background: var(--color-red) !important ;
}
body.tag-fill :is(.cm-tag-progress, .tag[href="#progress"]) {
  --tag-background: var(--color-blue) !important ;
}
body.tag-fill :is(.cm-tag-complete, .tag[href="#complete"]) {
  --tag-background: var(--color-orange) !important ;
}

/* #endregion tag */
/* #region heading */
body {
  --h1-size: calc(var(--font-text-size) * var(--setting-h1-size, 1.6));
  --h2-size: calc(var(--font-text-size) * var(--setting-h2-size, 1.5));
  --h3-size: calc(var(--font-text-size) * var(--setting-h3-size, 1.4));
  --h4-size: calc(var(--font-text-size) * var(--setting-h4-size, 1.3));
  --h5-size: calc(var(--font-text-size) * var(--setting-h5-size, 1.2));
  --h6-size: calc(var(--font-text-size) * var(--setting-h6-size, 1.1));
  --h1-weight: 750;
  --h2-weight: 700;
  --h3-weight: 650;
  --h4-weight: 650;
  --h5-weight: 600;
  --h6-weight: 600;
  --h1-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h1-size));
  --h2-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h2-size));
  --h3-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h3-size));
  --h4-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h4-size));
  --h5-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h5-size));
  --h6-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h6-size));
  --h1-font: var(--setting-h1-font, var(--font-text));
  --h2-font: var(--setting-h2-font, var(--font-text));
  --h3-font: var(--setting-h3-font, var(--font-text));
  --h4-font: var(--setting-h4-font, var(--font-text));
  --h5-font: var(--setting-h5-font, var(--font-text));
  --h6-font: var(--setting-h6-font, var(--font-text));
}
body.heading-color-base {
  --h1-color: var(--text-normal);
  --h2-color: var(--text-normal);
  --h3-color: var(--text-normal);
  --h4-color: var(--text-normal);
  --h5-color: var(--text-normal);
  --h6-color: var(--text-normal);
}
body.heading-color-accent {
  --h1-color: var(--accent-active);
  --h2-color: var(--accent-active);
  --h3-color: var(--accent-active);
  --h4-color: var(--accent-active);
  --h5-color: var(--accent-active);
  --h6-color: var(--accent-active);
}
body :is(h1, h2, h3, h4, h5, h6) {
  margin: 0 !important;
}

body:is(:not(.css-settings-manager), .heading-color-colorful) {
  --h1-color: var(--setting-h1-color, var(--color-red));
  --h2-color: var(--setting-h2-color, var(--color-orange));
  --h3-color: var(--setting-h3-color, var(--color-green));
  --h4-color: var(--setting-h4-color, var(--color-blue));
  --h5-color: var(--setting-h5-color, var(--color-purple));
  --h6-color: var(--setting-h6-color, var(--color-cyan));
}

.cm-formatting.cm-formatting-header {
  filter: grayscale(70%);
  font-weight: 400 !important;
}
body:not(.fix-line-number) .cm-formatting.cm-formatting-header {
  font-size: 1rem !important;
  line-height: 1.2rem;
}

.cm-s-obsidian .cm-line.HyperMD-header {
  padding-block: 0;
}

body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header) {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header)::before {
  content: "";
  position: absolute;
  z-index: 1;
  padding: 0.1rem;
  background-color: transparent;
  font-size: 0.7rem;
  line-height: 1;
  width: fit-content;
  letter-spacing: 0.05rem;
  opacity: 0;
  transition: var(--animation);
  transition-delay: calc(var(--animation-delay) / 2);
  pointer-events: none;
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-4-5) * -1);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6), .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header):hover::before {
  opacity: 0.9;
  transition-delay: 0s;
  pointer-events: all;
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div.is-collapsed > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:has(> .cm-foldPlaceholder))::before {
  opacity: 0.9;
  text-decoration: underline 0.1rem;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder)))::before {
  opacity: 0.4;
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):not(:hover)::before {
  color: var(--text-muted);
}
body:is(:not(.css-settings-manager), .heading-level-enable).heading-level-fix :is(div.markdown-reading-view > div > div > div:not(.is-collapsed) > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header:not(:has(> .cm-foldPlaceholder))):hover::before {
  opacity: 1;
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(var(--size-4-6) * -1) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1) {
  --link-color: var(--h1-color);
  --link-color-underline: var(--h1-color);
  --link-external-color: var(--h1-color);
  --link-external-color-underline: var(--h1-color);
  --link-text-size: var(--h1-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h1, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1)::before {
  content: "H1";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2) {
  --link-color: var(--h2-color);
  --link-color-underline: var(--h2-color);
  --link-external-color: var(--h2-color);
  --link-external-color-underline: var(--h2-color);
  --link-text-size: var(--h2-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h2, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2)::before {
  content: "H2";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3) {
  --link-color: var(--h3-color);
  --link-color-underline: var(--h3-color);
  --link-external-color: var(--h3-color);
  --link-external-color-underline: var(--h3-color);
  --link-text-size: var(--h3-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h3, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3)::before {
  content: "H3";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4) {
  --link-color: var(--h4-color);
  --link-color-underline: var(--h4-color);
  --link-external-color: var(--h4-color);
  --link-external-color-underline: var(--h4-color);
  --link-text-size: var(--h4-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h4, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4)::before {
  content: "H4";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5) {
  --link-color: var(--h5-color);
  --link-color-underline: var(--h5-color);
  --link-external-color: var(--h5-color);
  --link-external-color-underline: var(--h5-color);
  --link-text-size: var(--h5-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h5, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5)::before {
  content: "H5";
}
body:is(:not(.css-settings-manager), .heading-level-enable).link-heading :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6) {
  --link-color: var(--h6-color);
  --link-color-underline: var(--h6-color);
  --link-external-color: var(--h6-color);
  --link-external-color-underline: var(--h6-color);
  --link-text-size: var(--h6-size);
}
body:is(:not(.css-settings-manager), .heading-level-enable) :is(div.markdown-reading-view > div > div > div > h6, .markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6)::before {
  content: "H6";
}
body:is(:not(.css-settings-manager), .heading-level-enable) div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(-1 * var(--size-4-6)) !important;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator {
  position: absolute;
  z-index: 99;
  height: var(--size-4-4);
  width: var(--size-4-5);
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-2-1) * -1);
  padding: 0 !important;
  --cursor: pointer;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .heading-collapse-indicator svg {
  display: none;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header {
  position: relative;
}
body:is(:not(.css-settings-manager), .heading-level-enable) .HyperMD-header .cm-fold-indicator .collapse-indicator {
  --cursor: pointer;
  z-index: 99;
  opacity: 0 !important;
  width: var(--size-4-6);
  height: var(--size-4-4) !important;
  left: calc(var(--size-2-1) - var(--size-4-8));
  top: 50% !important;
  transform: translateY(-50%) !important;
}

body.heading-h1-center h1 {
  text-align: center;
}

body.heading-h1-underline {
  --h1-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h1-size) * 1.2);
}
body.heading-h1-underline :is(h1, .HyperMD-header-1) {
  position: relative;
}
body.heading-h1-underline :is(h1, .HyperMD-header-1)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h1-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h1-color) 30%, transparent 70%);
}
body.heading-h1-underline h1::after {
  left: 0;
}
body.heading-h1-underline .HyperMD-header-1::after {
  left: var(--size-4-1);
}
body.heading-h1-underline .vertical-tab-content h1 {
  font-size: var(--h1-size);
  font-weight: var(--h1-weight);
}
body.heading-h1-underline.heading-underline-thin :is(h1, .HyperMD-header-1)::after {
  height: var(--size-2-1);
}

body.heading-h2-underline {
  --h2-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h2-size) * 1.2);
}
body.heading-h2-underline :is(h2, .HyperMD-header-2) {
  position: relative;
}
body.heading-h2-underline :is(h2, .HyperMD-header-2)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h2-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h2-color) 30%, transparent 70%);
}
body.heading-h2-underline h2::after {
  left: 0;
}
body.heading-h2-underline .HyperMD-header-2::after {
  left: var(--size-4-1);
}
body.heading-h2-underline .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body.heading-h2-underline.heading-underline-thin :is(h2, .HyperMD-header-2)::after {
  height: var(--size-2-1);
}

body.heading-h3-underline {
  --h3-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h3-size) * 1.2);
}
body.heading-h3-underline :is(h3, .HyperMD-header-3) {
  position: relative;
}
body.heading-h3-underline :is(h3, .HyperMD-header-3)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h3-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h3-color) 30%, transparent 70%);
}
body.heading-h3-underline h3::after {
  left: 0;
}
body.heading-h3-underline .HyperMD-header-3::after {
  left: var(--size-4-1);
}
body.heading-h3-underline .vertical-tab-content h3 {
  font-size: var(--h3-size);
  font-weight: var(--h3-weight);
}
body.heading-h3-underline.heading-underline-thin :is(h3, .HyperMD-header-3)::after {
  height: var(--size-2-1);
}

body.heading-h4-underline {
  --h4-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h4-size) * 1.2);
}
body.heading-h4-underline :is(h4, .HyperMD-header-4) {
  position: relative;
}
body.heading-h4-underline :is(h4, .HyperMD-header-4)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h4-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h4-color) 30%, transparent 70%);
}
body.heading-h4-underline h4::after {
  left: 0;
}
body.heading-h4-underline .HyperMD-header-4::after {
  left: var(--size-4-1);
}
body.heading-h4-underline .vertical-tab-content h4 {
  font-size: var(--h4-size);
  font-weight: var(--h4-weight);
}
body.heading-h4-underline.heading-underline-thin :is(h4, .HyperMD-header-4)::after {
  height: var(--size-2-1);
}

body.heading-h5-underline {
  --h5-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h5-size) * 1.2);
}
body.heading-h5-underline :is(h5, .HyperMD-header-5) {
  position: relative;
}
body.heading-h5-underline :is(h5, .HyperMD-header-5)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h5-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h5-color) 30%, transparent 70%);
}
body.heading-h5-underline h5::after {
  left: 0;
}
body.heading-h5-underline .HyperMD-header-5::after {
  left: var(--size-4-1);
}
body.heading-h5-underline .vertical-tab-content h5 {
  font-size: var(--h5-size);
  font-weight: var(--h5-weight);
}
body.heading-h5-underline.heading-underline-thin :is(h5, .HyperMD-header-5)::after {
  height: var(--size-2-1);
}

body.heading-h6-underline {
  --h6-line-height: calc(var(--setting-line-height, var(--line-height-normal)) * var(--h6-size) * 1.2);
}
body.heading-h6-underline :is(h6, .HyperMD-header-6) {
  position: relative;
}
body.heading-h6-underline :is(h6, .HyperMD-header-6)::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  top: 50%;
  transform: translateY(max(var(--h6-size) * var(--line-height-normal) * 0.3, var(--size-4-3)));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h6-color) 30%, transparent 70%);
}
body.heading-h6-underline h6::after {
  left: 0;
}
body.heading-h6-underline .HyperMD-header-6::after {
  left: var(--size-4-1);
}
body.heading-h6-underline .vertical-tab-content h6 {
  font-size: var(--h6-size);
  font-weight: var(--h6-weight);
}
body.heading-h6-underline.heading-underline-thin :is(h6, .HyperMD-header-6)::after {
  height: var(--size-2-1);
}

body.heading-h6-variant :is(h6, .cm-header-6) {
  font-variant: small-caps;
}

/* #endregion heading */
/* #region image */
body.theme-dark.image-dark-hover img {
  filter: brightness(0.7);
  transition: var(--animation);
}
body.theme-dark.image-dark-hover img:hover {
  filter: brightness(0.85);
}

img {
  border-radius: var(--radius-l);
  cursor: pointer;
}

/* hint text, reference from https://github.com/chrisgrieser/shimmering-focus */
body.image-alt .image-embed[alt] {
  padding: var(--size-4-1) 0;
}
body.image-alt .image-embed[alt]::after {
  display: block;
  text-align: center;
}
body.image-alt .image-embed[alt]:not([alt$=".png"], [alt$=".jpg"], [alt$=".jpeg"], [alt$=".tiff"], [alt$=".webp"], [alt$=".bmp"])::after {
  content: attr(alt);
  font-size: var(--font-smaller);
  color: var(--text-faint);
}
body.image-alt .view-content img:not(.emoji) {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

/* scale on click, reference from blue-topaz */
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image) {
  cursor: zoom-in;
}
body.image-zoom :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image):active {
  overflow: hidden;
  position: relative;
  object-fit: contain;
  height: 100%;
  width: 100%;
  margin: 0;
  border-radius: 0;
  inset: 0;
  z-index: 200;
  background-image: linear-gradient(to right, hsl(var(--background-primary-hsl)), hsl(var(--background-secondary-hsl)), hsl(var(--background-primary-hsl)));
}
body.image-zoom.image-zoom-out :is(.markdown-preview-view, .workspace-leaf-content[data-type=image]) img:not([class*=emoji], .banner-image):active {
  position: fixed;
}

/* #endregion image */
/* #region canvas */
.canvas-wrapper .canvas-node-container {
  border-radius: var(--radius-l);
  background-color: hsl(var(--background-primary-hsl));
}
.canvas-wrapper .canvas-card-menu {
  padding: var(--size-2-1);
  border-radius: var(--radius-m);
  bottom: var(--size-4-6);
}
.canvas-wrapper .canvas-card-menu .canvas-card-menu-button {
  --icon-size: var(--icon-l);
}
.canvas-wrapper :is(.canvas-menu, .canvas-controls-group) {
  border-radius: var(--radius-m);
}
.canvas-wrapper .canvas-menu {
  padding: var(--size-4-1);
}
.canvas-wrapper .canvas-menu .clickable-icon {
  padding: var(--size-2-3);
}
.canvas-wrapper .canvas-control-group {
  box-shadow: none;
  border-radius: var(--radius-m);
  background-color: hsl(var(--background-secondary-hsl));
}
.canvas-wrapper .canvas-control button {
  transition: none;
  margin: var(--size-2-1);
  padding: var(--size-2-3);
  border-radius: var(--radius-s);
  border-bottom: none;
}
.canvas-wrapper .canvas-control button:not([disabled]):hover {
  background-color: var(--background-modifier-hover) !important;
}

body.canvas-control-hide .canvas-control-group {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.canvas-control-hide .canvas-control-group:hover {
  transition-delay: 0s;
  opacity: 1;
}

body.canvas-center .canvas-node-content.markdown-embed > .markdown-embed-content > .markdown-preview-view > .markdown-preview-sizer {
  text-align: center;
}

/* #endregion canvas */
/* #region callout */
/* #endregion callout */
/* #region pdf */
body.theme-dark.pdf-dark-hover .pdf-viewer {
  opacity: 0.7;
  transition: opacity var(--animation);
}
body.theme-dark.pdf-dark-hover .pdf-viewer:hover {
  opacity: 0.85;
}

/* #endregion pdf */
/* #region property */
.metadata-container {
  margin-block-end: var(--size-4-2);
  transition: var(--animation);
  --metadata-property-background-hover: var(--md-container-bg);
}
body.prop-outline .metadata-container {
  transform: none;
  --metadata-border-width: var(--block-outline-width);
  --metadata-border-radius: var(--radius-l);
  --metadata-border-color: var(--accent-inactive);
  --metadata-padding: var(--radius-l);
}
body.prop-outline .metadata-container:hover {
  --metadata-border-color: var(--accent-active);
}
.metadata-container .metadata-add-button {
  padding: var(--size-4-1);
  margin-top: var(--size-4-2);
  gap: var(--size-2-3);
}

.metadata-properties-heading .collapse-indicator {
  left: calc(var(--size-4-8) * -1);
}

.metadata-property-icon,
input.metadata-property-key-input,
.multi-select-pill,
.multi-select-input {
  line-height: calc(var(--line-height-normal) / 1.5);
  height: calc(var(--line-height-normal) / 1.5);
}

.metadata-property-key {
  padding-block: var(--size-2-1);
}

.metadata-property:not([data-property-key=tags]) .metadata-property-key-input {
  padding-block: var(--size-2-3);
}

.multi-select-pill {
  transition: var(--animation);
}

.metadata-property[data-property-key=cssclasses] {
  --pill-padding-x: 0.4em;
}
.metadata-property[data-property-key=cssclasses] .multi-select-pill {
  line-height: 1;
}

.multi-select-pill-remove-button {
  cursor: pointer;
}

.multi-select-pill-content {
  line-height: 1.6;
}

/* #endregion property */
/* #endregion [editor] */
/* #region [plugins] */
/* #region better-command-palette */
.better-command-palette p.better-command-palette-title {
  margin: var(--size-4-3) var(--size-4-6);
}
.better-command-palette .prompt-input {
  font-size: var(--font-ui-large);
}

/* #endregion better-command-palette */
/* #region calender */
body.calendar-swap-year-month #calendar-container .nav {
  padding-left: var(--size-4-1);
}
body.calendar-swap-year-month #calendar-container .nav .title {
  display: flex;
  flex-direction: row-reverse;
  font-weight: normal;
  font-size: 1.2rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year {
  color: var(--text-normal);
  letter-spacing: 0.1rem;
  display: flex;
  align-items: center;
}
body.calendar-swap-year-month #calendar-container .nav .title .year::after {
  content: var(--setting-calendar-year-suffix, "年");
  margin-right: var(--size-2-1);
  margin-left: var(--size-2-1);
}
body.calendar-swap-year-month #calendar-container .nav .title .month {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
  letter-spacing: 0.1rem;
  font-weight: bold;
  color: var(--accent-active);
}

.theme-light {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 24%), 24%);
}

.theme-dark {
  --calendar-weekend-bg: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) - 24%), 24%);
}

#calendar-container {
  --color-text-today: var(--text-on-accent);
  --color-text-weeknum: var(--accent-active);
}
#calendar-container thead {
  border-bottom: var(--size-2-1) solid var(--accent-active);
}
#calendar-container th {
  padding: 2px 0 4px;
  font-weight: bold;
  letter-spacing: 0.1em;
}
#calendar-container .nav {
  padding: 0;
  margin-bottom: var(--size-4-3);
  padding-left: var(--size-4-1);
  justify-content: space-around;
}
#calendar-container .nav .right-nav {
  margin-left: unset;
}
#calendar-container .day {
  border: 1px solid transparent;
}
#calendar-container .day:hover {
  border-color: var(--accent-inactive);
}
#calendar-container .day.today:hover {
  border-color: var(--text-on-accent);
}
#calendar-container .day:active {
  background-color: var(--accent-inactive);
}
#calendar-container .active {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}
#calendar-container .today {
  --color-dot: var(--text-on-accent);
  color: var(--text-on-accent);
  background-color: var(--accent-active);
}
#calendar-container .reset-button {
  white-space: nowrap;
}
#calendar-container .title {
  line-height: 1;
  font-size: 1.4rem;
  white-space: nowrap;
}
#calendar-container .dot-container {
  translate: 0 calc(-1 * var(--size-2-1));
}

body.calendar-weekend #calendar-container tbody tr td:nth-last-child(2),
body.calendar-weekend #calendar-container tbody tr td:nth-last-child(1) {
  background-color: var(--calendar-weekend-bg);
}

.workspace-leaf-content[data-type=calendar] .view-content {
  padding-inline: var(--size-4-1);
  padding-block: 0;
}

body #calendar-container {
  max-width: var(--setting-calendar-max-width, 500px);
  margin-inline: auto;
}
body #calendar-container .day {
  padding: var(--size-2-1) var(--size-4-1) !important;
  border: none;
}

/* #endregion calender */
/* #region excalidraw */
/* reference from https://github.com/Maldonacho/obsidian-encore-theme */
.excalidraw-wrapper {
  background-color: transparent;
}

.excalidraw {
  border-radius: 8px;
  background-color: transparent;
  --ui-font: var(--font-interface);
  --help-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3'%3E%3C/path%3E%3Cline x1='12' y1='17' x2='12.01' y2='17'%3E%3C/line%3E%3C/svg%3E");
  --grip-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Ccircle cx='12' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='9' r='1'%3E%3C/circle%3E%3Ccircle cx='12' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='19' cy='15' r='1'%3E%3C/circle%3E%3Ccircle cx='5' cy='15' r='1'%3E%3C/circle%3E%3C/svg%3E");
}
.excalidraw .welcome-screen-menu {
  display: none;
}
.excalidraw .mobile-misc-tools-container {
  right: calc(var(--editor-container-padding) * -0.8);
}
.excalidraw .mobile-misc-tools-container .library-button {
  border-radius: 0;
  padding: var(--size-4-1);
}
:is(.excalidraw, .excalidraw.theme--dark) {
  --color-selection: var(--accent-active);
  --color-primary: var(--accent-active);
  --color-primary-darker: var(--accent-active);
  --color-primary-darkest: var(--text-normal);
  --button-gray-2: var(--nav-item-background-hover);
  --color-primary-light: var(--nav-item-background-hover);
  --border-radius-md: 4px;
  --border-radius-lg: 8px;
  --input-shadow: none;
  --input-shadow-hover: none;
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-label-swatch {
  border: 1px solid var(--color-base-100);
}
:is(.excalidraw, .excalidraw.theme--dark) .color-picker-hash {
  width: 1rem;
}
:is(.excalidraw, .excalidraw.theme--dark) .Island > div:first-child > svg {
  -webkit-mask-image: var(--grip-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: unset;
  background-color: var(--button-gray-1);
}
:is(.excalidraw, .excalidraw.theme--dark) :is(.Island, .mobile-misc-tools-container) {
  backdrop-filter: blur(var(--size-2-3));
}
.excalidraw .popover {
  box-shadow: none;
  background-color: hsl(var(--background-secondary-hsl)) !important;
  animation: op var(--animation) !important;
}
.excalidraw .popover ul {
  border-radius: var(--radius-m);
  margin-left: 0;
  padding: var(--size-2-3);
  font-family: var(--font-text);
  box-shadow: var(--shadow-s);
}
.excalidraw .popover ul li button {
  border-radius: var(--radius-s);
  transition: none;
}
.excalidraw .popover ul li button:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.excalidraw .popover ul hr {
  margin-block: var(--size-2-3);
  border-color: var(--hr-color);
  margin-inline: calc(-1 * var(--size-4-1));
}
.excalidraw .layer-ui__wrapper__footer-right {
  transform: translateY(-32px);
}
.excalidraw .layer-ui__wrapper__footer-right .help-icon {
  display: none;
}
.excalidraw .layer-ui__wrapper__footer-left {
  margin-bottom: 0.3rem;
}

.theme-light .excalidraw:not(.theme--dark) {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.theme-dark .excalidraw.theme--dark {
  --button-gray-1: var(--color-base-30);
  --button-gray-3: var(--color-base-30);
  --dialog-border-color: var(--color-base-40);
  --island-bg-color: var(--color-base-00);
  --input-border-color: var(--color-base-30);
  --input-bg-color: var(--color-base-20);
}

.help-icon {
  -webkit-mask-image: var(--help-icon);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 18px;
  background-color: var(--button-gray-1);
  height: 30px;
}
.help-icon :hover {
  background-color: var(--button-gray-2);
}
.help-icon > * {
  display: none;
}

.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action:is([aria-label="Press ESC to exit fullscreen mode"], [aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"], [aria-label="Save (will also update transclusions)"], [aria-label="Install or update Excalidraw Scripts"]) > svg {
  -webkit-mask-image: unset;
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 16px;
  background-color: var(--color-base-70);
  border-radius: 0;
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Press ESC to exit fullscreen mode"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cpolyline points='9 21 3 21 3 15'%3E%3C/polyline%3E%3Cline x1='21' y1='3' x2='14' y2='10'%3E%3C/line%3E%3Cline x1='3' y1='21' x2='10' y2='14'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Open selected text as link\a(SHIFT+CLICK to open in a new pane)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'%3E%3C/path%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cline x1='10' y1='14' x2='21' y2='3'%3E%3C/line%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Save (will also update transclusions)"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z'%3E%3C/path%3E%3Cpolyline points='17 21 17 13 7 13 7 21'%3E%3C/polyline%3E%3Cpolyline points='7 3 7 8 15 8'%3E%3C/polyline%3E%3C/svg%3E");
}
.workspace-leaf-content[data-type=excalidraw] .clickable-icon.view-action[aria-label="Install or update Excalidraw Scripts"] > svg {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' data-darkreader-inline-stroke='' style='--darkreader-inline-stroke:currentColor;'%3E%3Cpath d='M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4'%3E%3C/path%3E%3Cpolyline points='14 2 14 8 20 8'%3E%3C/polyline%3E%3Cpath d='m9 18 3-3-3-3'%3E%3C/path%3E%3Cpath d='m5 12-3 3 3 3'%3E%3C/path%3E%3C/svg%3E");
}

.workspace-leaf-content .excalidraw-view {
  padding: unset;
  padding-right: 4px;
  padding-bottom: 4px;
}

.excalidraw .excalidraw__embeddable__outer .theme-light {
  --background-primary: hsla(var(--accent-h),
      calc(var(--accent-s) - 12%),
      97%,
      var(--bg-opacity)) !important ;
}

.theme-dark .excalidraw .excalidraw-textEditorContainer * {
  color: var(--text-on-accent) !important;
  filter: none !important;
}

/* #endregion excalidraw */
/* #region dbfolder */
body.link-icon .database-plugin__embed-link-wrapper a.internal-link[class*=database-plugin]::before {
  content: none;
}

/* #endregion dbfolder */
/* #region git */
.workspace-leaf-content[data-type=diff-view] .d2h-diff-table {
  font-family: var(--font-monospace);
}

body.back-blur-title-bar .workspace-leaf-content[data-type=diff-view] .d2h-file-diff {
  padding-top: var(--size-4-8);
}

/* #endregion git */
/* #region my-snippets */
.MySnippets-statusbar-menu {
  --interactive-normal: var(--accent-inactive);
}

/* #endregion my-snippets */
/* #region banners */
img.banner-image {
  border-radius: 0;
}

.obsidian-banner-spacer {
  height: 0;
}

.markdown-source-view .cm-content:has(.cm-line.has-banner) {
  padding-top: calc(var(--banner-height) - var(--size-4-8) + 1.5rem) !important;
}
.markdown-source-view .obsidian-banner-spacer {
  margin: 0 !important;
}

.markdown-preview-sizer > div.obsidian-banner-wrapper {
  position: initial !important;
  margin-top: var(--banner-height);
}

/* #endregion banners */
/* #region kanban */
body {
  --kanban-item-color: var(--setting-kanban-item-color, var(--text-normal));
  --kanban-item-bg: var(--setting-kanban-item-bg, hsl(var(--background-primary-hsl)));
  --kanban-board-bg: var(--setting-kanban-board-bg, hsl(var(--background-secondary-hsl)));
}

:is(.kanban-plugin, .kanban-plugin__item, .kanban-plugin__lane) button {
  line-height: normal;
  padding-block: 0;
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add) {
  color: var(--accent-active);
}
:is(.kanban-plugin__item-action-add, .kanban-plugin__lane-action-add):hover {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
.kanban-plugin__lane {
  background: var(--kanban-board-bg);
}
.kanban-plugin__lane-form-wrapper {
  background: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  box-shadow: var(--shadow-s);
}
.kanban-plugin__lane-form-wrapper textarea {
  padding: var(--size-4-1) var(--size-2-3);
}
.kanban-plugin__grow-wrap > textarea, .kanban-plugin__grow-wrap:after {
  border-radius: var(--radius-s);
  box-sizing: border-box;
  transition: box-shadow var(--animation) !important;
}
.kanban-plugin__new-item-button {
  background-color: var(--kanban-item-bg) !important;
  transition: var(--animation);
}
.kanban-plugin__new-item-button:hover {
  color: var(--accent-active);
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper {
  padding: 0;
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper * {
  height: 100%;
}
.kanban-plugin__item-form .kanban-plugin__item-input-wrapper textarea {
  padding: var(--size-2-1) var(--size-2-3);
}
.kanban-plugin__item-title-wrapper {
  background: var(--kanban-item-bg);
}
.kanban-plugin__item-title-wrapper p {
  color: var(--kanban-item-color);
}
.kanban-plugin__item-title-wrapper:has(.kanban-plugin__item-input-wrapper) {
  background: var(--background-modifier-form-field);
}
.kanban-plugin__item-postfix-button {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__lane-title .kanban-plugin__lane-input {
  padding-inline: var(--size-2-3);
}
.kanban-plugin__lane a[aria-label=Close] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-3);
  margin-right: calc(var(--size-2-1) * -1);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) {
  padding-inline-start: var(--size-4-8);
}
.kanban-plugin__markdown-preview-view :is(ul, ol) li {
  margin: 0 !important;
  line-height: var(--line-height-tight) !important;
}
.kanban-plugin__markdown-preview-view img {
  pointer-events: none !important;
}
.kanban-plugin__autocomplete {
  backdrop-filter: blur(var(--size-4-8));
  padding-inline: var(--size-2-2);
  animation: op var(--animation);
  border-radius: var(--radius-m);
  border: 1px solid var(--background-modifier-border);
  box-shadow: var(--shadow-s);
  z-index: var(--layer-notice);
}
.kanban-plugin__autocomplete-item, .kanban-plugin__autocomplete-item-active {
  border: none;
  border-radius: var(--radius-s);
  margin-block: var(--size-4-1) !important;
}
.kanban-plugin__autocomplete-item *, .kanban-plugin__autocomplete-item-active * {
  opacity: 1 !important;
  transition: none !important;
}
.kanban-plugin__autocomplete-item-active * {
  color: var(--text-on-accent) !important;
}
.kanban-plugin__autocomplete-item:hover {
  background-color: var(--background-modifier-hover);
  color: var(--text-normal);
}
.kanban-plugin * {
  caret-color: var(--accent-active);
}

.kanban-plugin__board-settings-modal :is(.is-open .choices__list--dropdown, .choices__list--dropdown) {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices {
  border: none;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__inner {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list {
  background-color: var(--interactive-normal);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown {
  border-radius: var(--input-radius);
}
.kanban-plugin__board-settings-modal .choices__list--dropdown:focus {
  box-shadow: 0 0 0 3px var(--background-modifier-border-focus);
}
.kanban-plugin__board-settings-modal .choices__item--choice {
  border-radius: var(--radius-s);
}
.kanban-plugin__board-settings-modal .choices::after {
  content: var(--select-bg-img);
  width: 1.2rem;
  height: 1.2rem;
  border: none;
  margin-top: 0;
  translate: 0 -50%;
}
.kanban-plugin__board-settings-modal .choices[data-type*=select-one].is-open:after {
  margin-top: 0;
}

body.search-internal-enable .kanban-plugin__search-wrapper {
  width: fit-content;
  padding: var(--size-2-3) var(--size-2-3);
  position: absolute;
  background-color: var(--kanban-board-bg);
  border: 1px solid var(--background-modifier-border-hover);
  border-radius: var(--radius-m);
  left: unset;
  top: var(--size-2-3);
  right: var(--size-2-3);
}
body.search-internal-enable .kanban-plugin__search-wrapper a[aria-label=Cancel] {
  padding: var(--size-4-1);
  margin-left: var(--size-2-2);
}

/* #endregion kanban */
/* #region annotator */
hypothesis-app {
  --radius-base: 0.25rem;
}
hypothesis-app textarea {
  color: var(--text-normal) !important;
  border-bottom-left-radius: calc(var(--radius-base) * 4 / 5) !important;
  border-bottom-right-radius: calc(var(--radius-base) * 4 / 5) !important;
}
hypothesis-app .Hyp-Card {
  transition: var(--setting-animation-time, 200ms) ease;
  border-radius: calc(var(--radius-base) * 2);
}
hypothesis-app :is(.Hyp-LabeledButton, .Hyp-TextInput) {
  border-radius: var(--radius-base);
}

/* #endregion annotator */
/* #region dataview */
pre.dataview {
  border: 0 !important;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 0.7);
}
pre.dataview-error {
  font-family: var(--font-monospace);
}

pre.dataview-error::before {
  content: "DataView Error";
  color: var(--color-red);
  position: absolute;
  top: var(--size-4-1);
  font-weight: bold;
}

body.dv-enable .cm-embed-block:has(.dataview) {
  border-color: var(--accent-inactive);
}

/* #endregion dataview */
/* #region recent-files */
.workspace-leaf-content[data-type=recent-files] .nav-file-title {
  padding: var(--size-4-1) var(--size-4-2);
  border-radius: var(--radius-s);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover {
  background-color: var(--nav-item-background-hover);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title:hover:not(.is-active) .recent-files-file-delete {
  color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active {
  background-color: var(--accent-active);
}
.workspace-leaf-content[data-type=recent-files] .nav-file-title.is-active::after {
  content: none;
}
.workspace-leaf-content[data-type=recent-files] .recent-files-file-delete {
  color: var(--text-on-accent);
  transform: translateY(var(--size-4-1));
}

/* #endregion recent-files */
/* #region markmap */
body .markmap {
  font: var(--font-text-size) var(--font-text);
}
body .mm-toolbar {
  background-color: var(--status-bar-background);
  border-color: var(--status-bar-border-color);
}

/* #endregion markmap */
/* #region edit-toolbar */
body.search-internal-enable :is(.cMenuToolbarpopover + .document-search-container.top,
.document-search-container:has(+ #cMenuToolbarModalBar.top)) {
  top: var(--size-4-12);
  right: var(--size-2-2);
}

#cMenuToolbarModalBar.top {
  margin: var(--size-2-2);
}

/* #endregion edit-toolbar */
/* #region shiki */
body {
  --shiki-code-background: var(--setting-code-bg, var(--md-container-bg));
  --shiki-code-function: var(--color-orange);
  --shiki-code-important: var(--color-purple);
  --shiki-code-keyword: var(--color-purple);
  --shiki-code-property: var(--color-orange);
  --shiki-code-punctuation: var(--color-blue);
  --shiki-code-string: var(--color-green);
  --shiki-code-tag: var(--color-red);
  --shiki-code-value: var(--color-orange);
  --shiki-code-comment: var(--text-faint);
  --shiki-code-normal: var(--code-preview-base);
  --shiki-code-bg-radius: var(--setting-code-bg-radius, var(--radius-l));
  --shiki-code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}

/* #endregion shiki */
/* #endregion [plugins] */
/* #region [workspace] */
/* #region document-search */
.obsidian-search-match-highlight {
  background-color: var(--background-secondary);
}

body.search-internal-enable .document-search-container {
  background-color: hsl(var(--background-secondary-hsl)) !important;
  position: absolute;
  top: var(--size-4-2);
  right: var(--size-4-4);
  border-radius: var(--radius-m);
  height: fit-content;
  border: var(--size-2-1) solid var(--frame-outline-color);
  box-shadow: var(--shadow-s);
  margin: 0;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button {
  font-size: 0;
  background-color: transparent !important;
  color: var(--text-muted);
  cursor: var(--cursor);
  height: var(--input-height);
  width: var(--input-height);
  padding: var(--size-4-1);
  box-shadow: unset !important;
}
body.search-internal-enable .document-search-container .document-search-buttons .document-search-button:hover {
  background-color: var(--background-modifier-hover) !important;
  color: var(--text-normal);
}

.markdown-source-view,
.markdown-reading-view {
  container-type: inline-size;
}

@container (max-width: 390px) {
  body.search-internal-enable .document-search-container {
    width: calc(100% - 2 * var(--size-4-3));
  }
  body.search-internal-enable .document-search-container :is(.document-search-input, .document-replace-input) {
    min-width: 0;
  }
}
@container (max-width: 320px) {
  body.search-internal-enable .document-search-container :is(.document-search-buttons [aria-label="Shift + F3"], .document-replace-buttons [aria-label="Ctrl + Alt + Enter"]) {
    display: none;
  }
}
/* #endregion document-search */
/* #region modal */
body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

.modal-close-button {
  height: var(--input-height);
  width: var(--input-height);
  transition: var(--animation);
  padding: 3px;
}
.modal-close-button::before {
  content: " " !important;
  display: block;
  height: var(--size-4-6);
  width: var(--size-4-6);
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M17.25 17.25 6.75 6.75m10.5 0-10.5 10.5'/%3e%3c/svg%3e");
}
.modal-close-button:hover {
  background-color: var(--frame-outline-color);
}

body.titlebar-colorful .modal-container .mod-settings::before {
  --setting-color-logo: var(--text-on-accent);
}

input {
  transition-duration: var(--setting-animation-time, 200ms) !important;
}

body.modal-slider input[type=range]::-webkit-slider-thumb {
  height: 1.6em;
  width: var(--size-4-1);
  background-color: var(--text-muted);
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border-radius: var(--radius-m);
}
body.modal-slider input[type=range]::-webkit-slider-thumb:hover {
  box-shadow: none;
}

body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container {
  --toggle-radius: var(--radius-m);
  height: var(--size-4-4);
  transition: var(--animation-slow);
  border: var(--size-2-1) solid var(--text-faint);
  background-color: var(--color-base-20);
  cursor: pointer;
}
body:is(.modal-toggle-round, .modal-toggle-thin) .checkbox-container input[type=checkbox] {
  display: none;
}

body.modal-toggle-round .checkbox-container {
  --toggle-shadow: var(--color-base-40);
}
body.modal-toggle-round .checkbox-container::after {
  left: 0;
  height: calc(var(--toggle-width) / 3);
  width: calc(var(--toggle-width) / 3);
  bottom: 30%;
  border-radius: calc(var(--toggle-width) / 2);
  border: var(--toggle-border-width) solid var(--text-faint);
  background-color: var(--text-on-accent);
  margin: 0;
  transition: var(--animation-slow);
  box-shadow: 0 4px 2px 0 var(--toggle-shadow);
}
:is(body.modal-toggle-round .checkbox-container:hover, body.modal-toggle-round .checkbox-container:focus)::after {
  bottom: 10%;
  box-shadow: 0 2px 2px 0 var(--toggle-shadow);
}
body.modal-toggle-round .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-round .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(100% - var(--toggle-width) / 3 - 3 * var(--toggle-border-width));
}

/* 参考 https://uiverse.io/martinval9/white-lionfish-18 */
body.modal-toggle-thin .checkbox-container::before {
  height: var(--toggle-border-width);
  left: calc(var(--toggle-border-width) * 2);
  right: calc(var(--toggle-border-width) * 2);
  opacity: 1;
  top: 50%;
  bottom: initial;
  transform: translateY(-50%);
  background-color: var(--text-faint);
}
body.modal-toggle-thin .checkbox-container::after {
  left: var(--toggle-border-width);
  height: var(--size-4-3);
  bottom: 50%;
  border-radius: var(--radius-m) var(--radius-m) 0 0;
  border: var(--toggle-border-width) solid var(--text-faint);
  border-bottom-width: calc(var(--toggle-border-width) / 2);
  background-color: var(--text-on-accent);
  width: 20%;
  margin: 0;
  transition: var(--animation-slow);
}
body.modal-toggle-thin .checkbox-container:hover::after {
  height: var(--size-4-2);
}
body.modal-toggle-thin .checkbox-container:active::after {
  width: calc(100% - var(--toggle-border-width) * 6);
}
body.modal-toggle-thin .checkbox-container.is-enabled {
  border-color: var(--accent-active);
  background-color: var(--accent-inactive);
}
body.modal-toggle-thin .checkbox-container.is-enabled::before {
  background-color: var(--accent-active);
}
body.modal-toggle-thin .checkbox-container.is-enabled::after {
  border-color: var(--accent-active);
  transform: none;
  left: calc(80% - var(--toggle-border-width) * 4);
}
body.modal-toggle-thin .checkbox-container.is-enabled:active::after {
  left: calc(2 * var(--toggle-border-width));
}

body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container {
  --modal-header-height: var(--size-4-12);
  --top-search-right: var(--size-4-12);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings {
  container-type: inline-size;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
  content: var(--setting-header-title, "maple 0.8.29");
  position: absolute;
  left: 50%;
  top: var(--size-4-6);
  transform: translate(-50%, -50%);
  font-size: calc(1.4 * var(--size-4-4));
  font-weight: bold;
  color: var(--setting-color-logo, var(--text-accent));
  transition: var(--animation);
}
@container (max-width:750px) {
  body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings::before {
    opacity: 0;
  }
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content {
  background-color: var(--frame-background-color);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-header {
  background-color: hsl(var(--background-secondary-hsl));
  border-top: 1px solid var(--divider-color);
  margin-top: var(--modal-header-height);
  padding-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container {
  padding-top: var(--modal-header-height);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content {
  background-color: hsl(var(--background-primary-hsl));
  border-top: 1px solid var(--divider-color);
  padding-top: var(--size-4-6);
  padding-right: var(--size-4-8);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .settings-search-container .settings-search-input {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  left: var(--size-4-2);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 - var(--size-2-1)));
  width: calc(clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-3) * 1);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-heading {
  margin-top: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) {
  padding-bottom: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) .setting-item-control {
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
  position: absolute;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item:has(.search-input-container.mod-hotkey) + .setting-filter-container {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item {
  padding: 0;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-info {
  display: none;
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-control {
  display: block;
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .setting-item-name:has(.search-input-container) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc((var(--modal-header-height) - var(--input-height)) / 2 + var(--size-2-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) {
  position: absolute;
  top: calc(var(--size-2-1) * -1);
  transform: translateY(calc(var(--modal-header-height) / 2 - var(--input-height) + var(--size-4-1)));
  right: var(--top-search-right);
}
body:is(:not(.css-settings-manager), .modal-header):not(.is-mobile) .modal-container .mod-settings .modal-content .vertical-tab-content > :nth-child(5):not(.style-settings-container):has(input[type=search]) .setting-item-info {
  display: none;
}

select,
.dropdown,
button {
  transition: var(--animation);
}

.theme-light {
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23222" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

.theme-dark {
  /* current color seems to be invalid for SVG in background-image */
  --select-bg-img: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23eee" d="M12 14.975q-.2 0-.387-.075q-.188-.075-.313-.2l-4.6-4.6q-.275-.275-.275-.7q0-.425.275-.7q.275-.275.7-.275q.425 0 .7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275q.425 0 .7.275q.275.275.275.7q0 .425-.275.7l-4.6 4.6q-.15.15-.325.212q-.175.063-.375.063Z"/></svg>');
}

:is(select, .dropdown) {
  background-size: calc(1.2 * var(--size-4-4));
  background-position: right calc(0.4 * var(--size-4-4)) top 56%, 0 0;
  background-image: var(--select-bg-img) !important;
}

.modal-container .is-loading {
  position: initial;
}
.modal-container .modal-close-button {
  top: 9px;
  right: 9px !important;
}
.modal-container :is(.mod-community-plugin, .mod-community-theme) .modal-sidebar .setting-item:first-child {
  max-width: var(--modal-community-sidebar-width);
}
.modal-container .mod-settings .modal-content .setting-hotkey {
  box-shadow: var(--shadow-s);
  border: 2px solid var(--accent-inactive);
  border-radius: var(--size-2-3);
  font-size: var(--font-ui-smaller);
  padding: 1px var(--size-4-2);
  transition: var(--animation);
}
.modal-container .mod-settings .modal-content .setting-hotkey .setting-hotkey-icon {
  margin-right: calc(-1 * var(--size-4-1));
}
.modal-container .mod-settings .modal-content .setting-hotkey:hover {
  border-color: var(--accent-active);
}
.modal-container .mod-settings .modal-content .setting-hotkey.mod-active {
  color: var(--text-faint);
  background-color: var(--frame-background-color);
}
.modal-container .mod-settings .modal-content .setting-hotkey:not(.has-conflict):not(.mod-active) {
  background-color: var(--code-background);
}
.modal-container .mod-settings .modal-content .setting-item-heading .setting-item-name {
  font-weight: bold;
  font-size: var(--font-ui-medium);
}

body.setting-group-title.theme-dark .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  filter: brightness(1.4);
}

body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group {
  padding-bottom: 0;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  color: var(--accent-active);
  font-size: var(--size-4-4);
  position: relative;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title::before {
  content: "";
  position: absolute;
  height: calc(100% - var(--size-4-4));
  width: var(--size-4-1);
  top: var(--size-4-2);
  left: calc(var(--size-4-1) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

:is(.menu, .prompt, :not(.excalidraw) .popover, .modal, .modal-bg, .document-search-container, .suggestion-container) {
  animation: op var(--animation);
}

body.modal-animation :is(.prompt, .popover, .modal) {
  animation: op var(--animation), bounce var(--animation);
}

@keyframes op {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.7;
  }
  70% {
    opacity: 0.95;
  }
  100% {
    opacity: 1;
  }
}
@keyframes bounce {
  0% {
    transform: scale(0.99);
  }
  70% {
    transform: scale(1.01);
  }
  100% {
    transform: scale(1);
  }
}
:is(.menu-normal .menu, .menu-suggestion .suggestion-container, .menu-graph .graph-control-section) {
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-8));
  will-change: backdrop-filter;
}

body.modal-blur .modal-bg {
  opacity: 1 !important;
  background-color: hsla(var(--background-secondary-hsl), 0.5) !important;
  backdrop-filter: blur(var(--size-4-1));
  will-change: backdrop-filter;
}

.mod-search-suggestion .suggestion {
  background-color: transparent;
}

/* #endregion modal */
/* #region scrollbar */
@property --scrollbar-color {
  syntax: "<color>";
  inherits: true;
  initial-value: rgba(0, 0, 0, 0);
}
/* ! `overflow: overlay` is deprecated, Chrome >= 114 (Obsidian 1.4) is equal to `overflow: auto` */
/* !Chrome >= 121 no longer support `-webkit-scrollbar-*`, no effect currently */
/* usage of `@property`: https://stackoverflow.com/a/74050413/20058211 */
/* usage of `-webkit-text-fill-color`: https://stackoverflow.com/a/46304690/20058211 */
body:not(.is-mobile):not(.mod-macos) .mod-settings :is(.vertical-tab-content, .vertical-tab-header) {
  scrollbar-gutter: stable;
}
body:not(.is-mobile):not(.mod-macos).scrollbar-hover-accent {
  --setting-scrollbar-hover: hsla(var(--color-accent-hsl), 40%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-hover-expand ::-webkit-scrollbar-thumb:hover, body:not(.is-mobile):not(.mod-macos).scrollbar-hover-expand ::-webkit-scrollbar-thumb:active {
  border-width: var(--size-2-1) !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar {
  width: var(--size-4-3) !important;
  height: var(--size-4-3) !important;
  background-color: transparent !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-track {
  background-color: transparent !important;
  box-shadow: none !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb {
  border-radius: var(--size-2-3) !important;
  border: 3.6px solid transparent !important;
  background-color: var(--scrollbar-color) !important;
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb:hover {
  --scrollbar-color: var(--setting-scrollbar-hover);
}
body:not(.is-mobile):not(.mod-macos) ::-webkit-scrollbar-thumb:active {
  --scrollbar-color: hsla(var(--color-accent-hsl), 64%);
}
body:not(.is-mobile):not(.mod-macos):not(.scrollbar-movein-animation-enable) {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete) {
  transition: --scrollbar-color var(--animation);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .workspace-leaf-content:not([data-type*=graph], [data-type*=pdf]) .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .markdown-source-view .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .markdown-embed-content .markdown-rendered, pre code, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-menu .Stack .Island.App-menu__left, .scrollbar), .excalidraw-contextMenuContainer .popover, .kanban-plugin__board, .kanban-plugin__lane-items, .kanban-plugin__autocomplete):hover {
  --scrollbar-color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea {
  color: transparent;
  transition: color var(--animation);
  -webkit-text-fill-color: var(--text-normal);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea:hover {
  color: hsla(var(--color-accent-hsl), 24%);
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea * {
  -webkit-text-fill-color: initial;
}
body:not(.is-mobile):not(.mod-macos).scrollbar-movein-animation-enable textarea::-webkit-scrollbar-thumb {
  box-shadow: 0 0 0 10px inset;
  border-width: 3.2px;
  background-clip: content-box;
  background-color: transparent !important;
}

body.scrollbar-hide :not([style="overflow-x: auto;"])::-webkit-scrollbar {
  display: none !important;
}

/* #endregion scrollbar */
/* #region tab */
body.tab-float {
  --tab-radius: var(--size-2-3);
}
body.tab-float .workspace-tab-header-container {
  --tab-outline-width: 0 !important;
  padding-left: 0;
}
body.tab-float .mod-root .workspace-tab-header-container-inner {
  margin-top: var(--size-4-1);
  padding-bottom: var(--size-4-1);
  padding-left: var(--size-4-1);
}
body.tab-float .mod-root .workspace-tab-header {
  padding-block: 0 !important;
  transition: color var(--animation), width var(--animation);
}
body.tab-float .mod-root .workspace-tab-header.is-active {
  --tab-radius-active: var(--size-2-3);
  box-shadow: var(--shadow-s);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button {
  padding: var(--size-2-1);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button:hover {
  background-color: var(--frame-background-color);
}
body.tab-float .mod-root .workspace-tabs:not(.mod-stacked):not(.mod-active) .workspace-tab-header.is-active {
  --tab-background-active: hsla(var(--background-primary-hsl), 0.5);
}
body.tab-float.theme-dark .mod-root .workspace-tab-header.is-active {
  box-shadow: none;
}
body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::before, body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::after {
  box-shadow: none;
}
body.tab-float .workspace-tab-header-new-tab {
  padding-top: var(--size-4-1);
  margin-left: calc(var(--size-4-3) * -1);
}

.view-header-title-parent:empty + .view-header-title {
  max-width: 70%;
  text-align: center;
  cursor: text;
}
.view-header-title-parent:not(:empty) + .view-header-title:after {
  content: "";
  width: 20%;
  inset-block: 0;
  position: absolute;
  cursor: text;
}

body.tab-show-close-all .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active) .workspace-tab-header-inner-close-button {
  display: none;
}
body.tab-show-close-all .mod-root .workspace-tab-header:hover .workspace-tab-header-inner-close-button,
body.tab-show-close-part .mod-root .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner-close-button {
  display: inherit;
}

body.tab-title-bar-text-small .view-header {
  --file-header-font-size: calc(var(--font-ui-smaller) - var(--size-2-1));
}

body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container {
  opacity: 0;
  transition: var(--animation);
  transition-delay: var(--animation-delay);
}
body.tab-title-bar-text-hidden .workspace-leaf-content:not([data-type=excalidraw]) .view-header-title-container:hover {
  opacity: 1;
  transition-delay: 0s;
}

body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  margin: var(--size-4-1);
  margin-bottom: 0;
  padding: 0 var(--size-2-3) !important;
  border: var(--size-2-1) solid var(--background-modifier-hover);
  border-radius: var(--radius-m);
  transition: var(--animation);
  width: calc(100% - var(--size-4-2)) !important;
  background-color: hsl(var(--background-secondary-hsl));
}
body.tab-title-bar-round .workspace-leaf-content:not([data-type=excalidraw]) .view-header .view-header-title-container:after {
  content: none;
}
body.tab-title-bar-round .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  background-color: var(--md-container-bg);
}
body.tab-title-bar-round.tab-title-bar-shadow .workspace-leaf.mod-active .workspace-leaf-content:not([data-type=excalidraw]) .view-header {
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}

/* 切换标签动画，参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
body.tab-slide-up :is(.workspace-split .workspace-tabs:not(.mod-stacked) .workspace-leaf-content:not([data-type=pdf]) .view-content, .workspace-leaf-content:not(:has(.view-content))) {
  animation: slide-up var(--animation) forwards;
}

@keyframes slide-up {
  0% {
    transform: translateY(0%);
    opacity: 0;
  }
  15% {
    transform: translateY(1px);
    opacity: 0;
  }
  25% {
    transform: translateY(2px);
  }
  45% {
    opacity: 0.5;
  }
  65% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
.is-sidedock-collapsed {
  opacity: 0;
  transition: var(--animation);
}

.search-result-file-matches {
  border-radius: var(--radius-m);
}

body {
  --divider-color: #8883;
}

/* #endregion tab */
/* #region titlebar */
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button {
  padding: 0 14px;
}
body.titlebar-button-style.is-hidden-frameless:is(.mod-windows, .mod-linux) .titlebar-button svg {
  width: 100%;
  height: 32%;
}
body.titlebar-button-style.is-frameless:not(.is-hidden-frameless):is(.mod-windows, .mod-linux) .titlebar-button svg:not([class*=logo]) {
  width: 100%;
  height: 42%;
}
body.titlebar-button-style .titlebar-button.mod-close:hover {
  color: var(--text-on-accent);
}
body.titlebar-button-style .workspace-tab-header-new-tab {
  padding-bottom: var(--size-2-1);
}

.theme-light {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.2),
      calc(100% - (100% - var(--accent-l)) / 4),
      60%);
}

.theme-dark {
  --ribbon-background: hsla(calc(var(--accent-h) + 16),
      calc(var(--accent-s) / 1.5),
      calc(var(--accent-l) - 40%),
      60%);
}

.workspace-ribbon.mod-left {
  border-right: 0;
  --ribbon-background-collapsed: var(--ribbon-background);
}
.workspace-ribbon.mod-left::before {
  height: var(--header-height);
  border-bottom: 0;
}

/* 参考 minimal theme */
:is(body, body.is-focused) :is(.mod-top .workspace-tab-header-container, .sidebar-toggle-button.mod-left, .titlebar),
:is(body, body.is-focused) .workspace-ribbon.mod-left::before {
  --titlebar-container: var(--frame-outline-color);
  --frame-divider-color: var(--frame-outline-color);
  --titlebar-background: var(--frame-background-color);
  --titlebar-background-focused: var(--frame-background-color);
  --tab-container-background: var(--frame-background-color);
  --titlebar-text-color: var(--frame-muted-color);
  --tab-outline-color: var(--frame-outline-color);
  --tab-divider-color: var(--frame-outline-color);
  --background-modifier-hover: var(--frame-outline-color);
  --icon-color: var(--frame-muted-color);
  --icon-color-hover: var(--frame-muted-color);
  --icon-color-focused: var(--color-base-100);
  --tab-text-color: var(--frame-muted-color);
  --tab-text-color-hover: var(--frame-muted-color);
  --tab-text-color-focused: var(--frame-muted-color);
}
:is(body, body.is-focused) .clickable-icon:active {
  color: var(--text-normal);
}

.workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
.workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--color-accent);
}

body.titlebar-colorful.theme-light {
  --frame-background-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 18%));
  --frame-outline-color: hsl(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) + 23.5%));
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      ar(--accent-l));
}
body.titlebar-colorful.theme-dark {
  --frame-background-color: hsl(var(--accent-h), 12%, 38%);
  --frame-outline-color: hsl(calc(var(--accent-h) - 6),
      calc(var(--accent-s) + 12%),
      40%);
  --frame-muted-color: hsl(var(--accent-h),
      calc(var(--accent-s) - 20%),
      calc(var(--accent-l) + 20%));
}
body.titlebar-colorful .workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
body.titlebar-colorful .workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: var(--text-on-accent);
}
body.titlebar-colorful :is(.document-search-close-button, .modal-close-button)::before {
  background-color: var(--text-normal);
}

/* #endregion titlebar */
/* #region print */
body.export-pdf-transparent .print {
  --background-primary: transparent;
}

.print code {
  white-space: pre-wrap !important;
}
.print :is(.markdown-preview-view, .markdown-rendered) {
  background-color: var(--background-primary) !important;
}
.print pre::before {
  right: var(--size-4-2) !important;
}
.print pre code {
  tab-size: 4;
}

/* #endregion print */
/* #region statusbar */
body {
  --stauts-bar-background-opacity: 1;
}
body.theme-light .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(100% - (100% - var(--accent-l)) / 8),
      var(--stauts-bar-background-opacity));
}
body.theme-dark .status-bar {
  --status-bar-background: hsla(var(--accent-h),
      var(--accent-s),
      calc(var(--accent-l) / 3),
      var(--stauts-bar-background-opacity));
}

body.status-bar-enable .status-bar {
  padding: var(--size-2-1) var(--size-4-1);
  width: fit-content;
  transition: var(--animation);
}
body.status-bar-enable.status-bar-hidden .status-bar {
  opacity: 0;
  transition-delay: var(--animation-delay);
}
body.status-bar-enable.status-bar-hidden .status-bar:hover {
  transition-delay: 0s;
  opacity: 1;
}
body.status-bar-enable.status-bar-style-float .status-bar {
  --status-bar-radius: var(--size-2-3);
  --status-bar-border-width: 1px;
  bottom: var(--size-4-1);
  right: var(--size-4-1);
  box-shadow: 0 0 var(--size-2-1) var(--background-modifier-box-shadow);
}
body.status-bar-enable.status-bar-style-float.status-bar-style-center:is(.status-bar-default, .status-bar-hidden) .status-bar {
  left: 50%;
  transform: translateX(-50%);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar {
  transform: translateX(calc(100% - var(--size-4-2)));
  transition-delay: var(--animation-delay);
  right: 0;
  padding: var(--size-4-1);
}
body.status-bar-enable.status-bar-style-float.status-bar-scroll .status-bar:hover {
  transform: translateX(0);
  transition-delay: 0s;
}

/* #endregion statusbar */
/* #region icons */
.modal svg[class*=lucide-folder] {
  --icon-size: 20px;
}

svg.lucide-layout-dashboard rect {
  rx: 1.8;
  stroke-width: 2;
}

svg.excalidraw-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 19l7-7l3 3l-7 7l-3-3z"/><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"/><path d="M2 2l7.586 7.586"/><circle cx="11" cy="11" r="2"/></g></svg>');
}

svg.spreadsheet {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><path d="M3 9h18M3 15h18M12 3v18"/></g></svg>');
}

svg[class*=lucide-folder] {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M216 72h-85.3l-27.8-20.8a15.6 15.6 0 0 0-9.6-3.2H40a16 16 0 0 0-16 16v136a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V88a16 16 0 0 0-16-16ZM93.3 96H40V64h53.3l21.4 16l-21.4 16M216 200H40v-88h53.3a15.6 15.6 0 0 0 9.6-3.2L130.7 88H216Z"/></svg>');
}

svg.lucide-sticky-note {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.4"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-8 10v-6m-3 3h6"/></g></svg>');
}

svg.lucide-image {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

svg.lucide-file {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

svg.lucide-copy {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

svg.database-folder-icon {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="3.5"><path d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5ZM4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68M34 41s-3.5-5.862-3.5-10c0-4.137 3.5-10 3.5-10m0 20s3.5-5.862 3.5-10c0-4.137-3.5-10-3.5-10m10 10H24"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container svg.right-triangle {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 42 42"><path d="M24.833 12.5H40.25a3.75 3.75 0 0 1 3.745 3.55l.005.2v19a3.75 3.75 0 0 1-3.55 3.745l-.2.005H7.75a3.75 3.75 0 0 1-3.745-3.55L4 35.25V18.999L17.804 19l.226-.007a3.75 3.75 0 0 0 2.547-1.219l.147-.172 4.109-5.102zM17.061 9c.832 0 1.639.277 2.294.784l.175.144 2.444 2.138-3.197 3.968-.094.105c-.2.197-.46.322-.739.353l-.14.008L4 16.499V12.75a3.75 3.75 0 0 1 3.55-3.745L7.75 9h9.31z" fill="currentColor"/></svg>');
}

body.titlebar-button-style .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12"><rect x="2" y="2" width="8" height="8" rx="1.5" stroke="currentColor" stroke-width="0.8" fill="none"/></svg>');
}

body.titlebar-button-style.is-maximized .mod-maximize svg {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024"><g fill="none" stroke="currentColor" stroke-width="60" stroke-linecap="round" stroke-linejoin="round"><path d="M602 932H234c-77.3 0-140-62.7-140-140V424c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140z" /><path d="M284 284v-50c0-77.3 62.7-140 140-140h368c77.3 0 140 62.7 140 140v368c0 77.3-62.7 140-140 140h-50" /></g></svg>');
}

:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) {
  background-color: currentColor;
  -webkit-mask-size: 100% 100%;
}
:is(:is(body.titlebar-button-style .mod-maximize, body.titlebar-button-style.is-maximized .mod-maximize, body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content:is([data-type=file-explorer]) .nav-files-container) svg, svg:is(.excalidraw-icon, .spreadsheet, [class*=lucide-folder], .lucide-sticky-note, .lucide-image, .lucide-file, .lucide-copy, .database-folder-icon)) path {
  display: none;
}

.markdown-rendered pre .copy-code-button {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2" /><rect width="6" height="4" x="9" y="3" rx="2" /><path d="M9 12h6m-6 4h6" /></g></svg>');
}

:where(body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title, body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link:not(.is-unresolved), .cm-hmd-internal-link .cm-underline))::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6m-4 5H8m8 4H8m2-8H8"/></g></svg>');
}

body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link, :is(.cm-link:not(.cm-hmd-footnote), .cm-url) .cm-underline)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svg-icon lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>');
}

.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"/><circle cx="7.5" cy="7.5" r=".5" fill="currentColor"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is(.is-unsupported)::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3c0 1.3-2 2-2 2m0 4h.01" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=png], [data-path$=svg], [data-path$=jpeg], [data-path$=jpg], [data-path$=bmp], [data-path$=gif], [data-path$=webp], [data-path$=tiff])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6" /><circle cx="10" cy="13" r="2" /><path d="m20 17l-1.09-1.09a2 2 0 0 0-2.82 0L10 22" /></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=pdf])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" /><path d="M14 2v6h6m-4" /></g><path d="M16.714 14.869c-.6-.642-2.31-.466-3.165-.348-.844-.562-1.41-1.34-1.808-2.48.192-.862.497-2.174.266-3-.207-1.403-1.857-1.264-2.093-.316-.217.862-.02 2.062.344 3.594-.492 1.28-1.224 3-1.74 3.986-.983.552-2.31 1.403-2.506 2.474-.162.847 1.278 2.957 3.74-1.67 1.1-.397 2.3-.885 3.36-1.078.929.547 2.015.912 2.742.912 1.254 0 1.376-1.512.86-2.074zM6.98 19.037c.251-.734 1.204-1.58 1.494-1.875-.933 1.623-1.494 1.912-1.494 1.875zm4.01-10.21c.363 0 .33 1.72.087 2.185-.215-.744-.21-2.185-.088-2.185zM9.79 16.144c.477-.905.885-1.981 1.214-2.93.408.809.929 1.457 1.479 1.901-1.022.23-1.911.703-2.693 1.03zm6.467-.268q-.246.322-1.834-.417c1.726-.14 2.01.29 1.834.417z" fill="currentColor"/></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mp3], [data-path$=flac], [data-path$=wav], [data-path$=ape], [data-path$=alac], [data-path$=aac])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M17.5 22h.5c.5 0 1-.2 1.4-.6c.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3" /><path d="M14 2v6h6M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Zm-4 0v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z"/><path d="M2 19v-3a6 6 0 0 1 12 0v3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=mkv], [data-path$=mp4], [data-path$=flv], [data-path$=webm], [data-path$=avi])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4"/><path d="M14 2v6h6m-10 7.5l4 2.5v-6l-4 2.5"/><rect width="8" height="6" x="2" y="12" rx="1"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=ttf], [data-path$=otf], [data-path$=ttc], [data-path$=otc])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><path d="M14 2v6h6M9 13v-1h6v1m-4 5h2m-1-6v6"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=zip], [data-path$="7z"], [data-path$=tar])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4c-.4.4-.9.6-1.4.6h-2"/><path d="M14 2v6h6"/><circle cx="10" cy="20" r="2"/><path d="M10 7V6m0 6v-1m0 7v-2"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=js], [data-path$=css], [data-path$=html], [data-path$=py], [data-path$=c], [data-path$=cpp], [data-path$=java], [data-path$=rs], [data-path$=ts], [data-path$=tsx], [data-path$=jsx], [data-path$=json], [data-path$=bash], [data-path$=sh])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4"/><path d="M14 2v6h6M9 18l3-3l-3-3m-4 0l-3 3l3 3"/></g></svg>');
}

body:is(:not(.css-settings-manager), .explorer-icon) .nav-file-title:is([data-path$=canvas])::before {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-layout-dashboard svg-icon"><rect x="3" y="3" rx="1.8" width="7" height="9"></rect><rect x="14" y="3" rx="1.8" width="7" height="5"></rect><rect x="14" y="12" rx="1.8" width="7" height="9"></rect><rect x="3" y="16" rx="1.8" width="7" height="5"></rect></svg>');
}

/* #endregion icons */
/* #region notice, tooltips */
body.message-tooltip-hide .tooltip {
  display: none;
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

body.message-modify {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) - 30) var(--accent-s) calc(var(--accent-l) - 20%)));
}
body.message-modify :is(.tooltip, .notice) {
  color: var(--setting-message-fg, var(--text-on-accent));
}
body.message-modify:not(.color-active-default).theme-light {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) + 4%)));
}
body.message-modify:not(.color-active-default).theme-dark {
  --background-modifier-message: hsl(var(--setting-message-bg,
        calc(var(--accent-h) + 60) calc(var(--accent-s) - 12%) calc(var(--accent-l) - 12%)));
}

body.message-tooltip-hide-arrow .tooltip-arrow {
  display: none;
}

/* #endregion message */
/* #region background image */
@media screen and (min-width: 768px) {
  body:is(.bg-static, .bg-live) {
    --bg-opacity: 0.75;
  }
  body:is(.bg-static, .bg-live) .workspace-split.mod-root,
  body:is(.bg-static, .bg-live) .workspace-split.mod-root .workspace-leaf-content {
    background-color: hsla(var(--editor-bg), calc(var(--bg-opacity) / 2));
  }
  body:is(.bg-static, .bg-live) :not(.mod-root) .workspace-leaf {
    background-color: hsla(var(--background-secondary-hsl), var(--bg-opacity));
  }
  body:is(.bg-static, .bg-live) .workspace::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-mask-repeat: no-repeat;
    background-color: var(--setting-bg-color, var(--text-accent));
    opacity: 0.5;
  }
  /* 参考 https://github.com/hydescarf/Obsidian-Theme-Mado-Miniflow */
  body {
    --setting-bg-static: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none" xml:space="preserve"><path opacity="0.3" d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"/><path opacity="0.4" d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z"/><path opacity="0.6" d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"/></svg>');
    --setting-bg-live: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 24 150 28' preserveAspectRatio='none' shape-rendering='auto' style='position:relative;width:100%25;height:15vh;min-height:100px;max-height:150px'%3E%3Cstyle%3E.parallax>use%7Banimation:move-forever 25s cubic-bezier(.55, .5, .45, .5) infinite%7D.parallax>use:nth-child(1)%7Banimation-delay:-33.6s;animation-duration:75.6s%7D.parallax>use:nth-child(2)%7Banimation-delay:2.4s;animation-duration:68.4s%7D.parallax>use:nth-child(3)%7Banimation-delay:-6s;animation-duration:24s%7D.parallax>use:nth-child(4)%7Banimation-delay:19.2s;animation-duration:73.2s%7D@keyframes move-forever%7B0%25%7Btransform:translate3d(-90px, 0, 0)%7D100%25%7Btransform:translate3d(85px, 0, 0)%7D%7D@media (max-width:768px)%7B.waves%7Bheight:40px;min-height:40px%7D%7D%3C/style%3E%3Cdefs%3E%3Cpath id='gentle-wave' d='M-160 44c30 0 58-18 88-18s58 18 88 18 58-18 88-18 58 18 88 18v44h-352z'/%3E%3C/defs%3E%3Cg class='parallax'%3E%3Cuse xlink:href='%23gentle-wave' x='48' opacity='0.3'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='3' opacity='0.4'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='8' opacity='0.6'/%3E%3Cuse xlink:href='%23gentle-wave' x='48' y='14' opacity='0.5'/%3E%3C/g%3E%3C/svg%3E");
  }
  body.bg-static .workspace::before {
    -webkit-mask-image: var(--setting-bg-static);
    -webkit-mask-size: 300% 300px;
    -webkit-mask-position: 88.5% -73px;
    transform: rotateZ(180deg);
  }
  /* 参考 https://www.cssscript.com/animated-waves-svg */
  body.bg-live .workspace::before {
    -webkit-mask-image: var(--setting-bg-live);
    -webkit-mask-size: 100% 160px;
    -webkit-mask-position-y: 100%;
  }
}
/* #endregion background */
/* #region labeled-navigator */
/* MIT License | Copyright (c) Stephan Ango (@kepano)

Labeled Nav snippet for Obsidian

author: @kepano
version: 2.0.0

Support my work:
https://github.com/sponsors/kepano

*/
.labeled-nav.mod-windows,
.labeled-nav.is-fullscreen:not(.colorful-frame) {
  --labeled-nav-top-margin: 0;
}

.labeled-nav {
  --labeled-nav-top-margin: var(--header-height);
  /* refactor this using a new variable for border above labeled nav
  in different conditions e.g. OSes and colorful frame */
}
.labeled-nav.is-translucent .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  background-color: transparent;
}
.labeled-nav.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav.mod-macos .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  -webkit-app-region: drag;
  position: absolute;
  width: calc(100% - var(--divider-width));
  height: calc(var(--header-height) - var(--tab-outline-width));
  border-bottom: 0 solid var(--tab-outline-color);
}
.labeled-nav.mod-macos.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  border: none;
  --tab-outline-width: 0px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.mod-macos:not(.hider-ribbon) .mod-left-split .mod-top .workspace-tab-header-container:before, .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .mod-left-split .mod-top .workspace-tab-header-container:before {
  border-bottom: var(--tab-outline-width) solid var(--tab-outline-color);
}
.labeled-nav:not(.is-hidden-frameless) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.mod-macos:not(.hider-ribbon) .workspace-ribbon.mod-left:not(.is-collapsed), .labeled-nav.colorful-frame.is-hidden-frameless:not(.is-fullscreen) .workspace-ribbon.mod-left:not(.is-collapsed) {
  --tab-outline-width: 1px;
}
.labeled-nav:not(.is-hidden-frameless) .mod-left-split .mod-top .workspace-tab-header-container:before {
  position: absolute;
  top: 0;
  content: " ";
}
.labeled-nav.hider-ribbon.mod-macos.is-hidden-frameless:not(.is-fullscreen):not(.is-popout-window) .mod-left-split:not(.is-sidedock-collapsed) .workspace-tabs.mod-top-left-space .workspace-tab-header-container {
  padding-left: 0;
}
.labeled-nav:not(.is-grabbing):not(.is-fullscreen).is-hidden-frameless .mod-top .workspace-tab-header-container {
  -webkit-app-region: no-drag;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-spacer {
  display: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-inner-title {
  display: inline-block;
  font-weight: 500;
  font-size: var(--font-adaptive-smaller);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  position: relative;
  flex-direction: column-reverse !important;
  height: auto;
  width: 100%;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .sidebar-toggle-button.mod-left {
  position: absolute;
  justify-content: flex-end;
  padding-right: var(--size-4-2);
  top: 0;
  right: 0;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-header-container-inner {
  padding-top: var(--size-4-2);
  margin-top: var(--labeled-nav-top-margin);
  flex-direction: column !important;
  background-color: var(--background-secondary);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container .workspace-tab-container-inner {
  flex-grow: 1;
  gap: 0;
  padding: var(--size-4-2) var(--size-4-3);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header {
  --icon-color: var(--text-muted);
  --tab-text-color: var(--text-muted);
  --tab-text-color-focused: var(--text-muted);
  padding: 0;
  margin-bottom: 2px;
  border: none;
  height: auto;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:not(:hover) {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active, .labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover {
  opacity: 1;
  --tab-text-color-active: var(--text-normal);
  --tab-text-color-focused: var(--text-normal);
  --tab-text-color-focused-active: var(--text-normal);
  --tab-text-color-focused-active-current: var(--text-normal);
  --icon-color: var(--text-normal);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header .workspace-tab-header-inner {
  gap: var(--size-2-3);
  padding: var(--size-4-1) var(--size-4-2);
  box-shadow: none;
  border: none;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.has-active-menu:hover,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover {
  background-color: transparent;
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active:hover .workspace-tab-header-inner,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:not(.is-active):hover .workspace-tab-header-inner {
  background-color: var(--nav-item-background-hover);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header:hover .workspace-tab-header-inner-icon,
.labeled-nav .mod-left-split .mod-top .workspace-tab-header.is-active .workspace-tab-header-inner-icon {
  color: var(--icon-color-active);
}
.labeled-nav .mod-left-split .mod-top .workspace-tab-header-container {
  border: none;
  padding: 0;
}

.labeled-nav .workspace-tab-header-container-inner {
  --background-secondary: hsl(var(--background-secondary-hsl)) ;
}
.labeled-nav .nav-buttons-container {
  justify-self: flex-start;
}

/* #endregion labeled-navigator */
/* #region [[panel]] */
/* #region panel-base*/
.nav-buttons-container {
  justify-content: flex-start;
  padding-left: var(--size-4-1);
}

body {
  --nav-item-children-padding-left: var(--size-4-2);
}

/* #endregion panel-base */
/* #region tag */
.workspace-leaf-content[data-type=tag] .tree-item-self::before {
  background-color: var(--accent-active);
  line-height: var(--line-height-tight);
  width: var(--size-4-4);
  height: var(--size-4-4);
  margin-left: calc(-1 * var(--size-4-5));
  margin-right: var(--size-4-3);
  transform: translateY(var(--size-4-1));
}
.workspace-leaf-content[data-type=tag] .tree-item-self:has(.tree-item-icon)::before {
  background-color: var(--folder-color);
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon {
  cursor: pointer;
}
.workspace-leaf-content[data-type=tag] .tree-item-icon.collapse-icon svg {
  color: transparent;
}

/* #endregion tag */
/* #region bookmark */
.workspace-leaf-content[data-type=bookmarks] {
  --nav-item-color-active: var(--text-on-accent);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.mod-collapsible .tree-item-icon {
  margin-right: var(--size-4-1);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) {
  padding-left: var(--size-2-3);
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self:not(.mod-collapsible) .tree-item-icon {
  transform: translateY(var(--size-2-1));
  color: var(--accent-active);
  width: calc(1.3 * var(--size-4-4));
}
.workspace-leaf-content[data-type=bookmarks] .tree-item-self.is-active .tree-item-icon {
  color: var(--nav-item-color-active);
}

/* #endregion bookmark */
/* #region graph */
body {
  --graph-node: var(--setting-graph-node, var(--text-muted));
  --graph-node-unresolved: var(--setting-graph-node-unresolved, var(--text-faint));
  --graph-node-focused: var(--setting-graph-node-focus, var(--accent-active));
}

.graph-controls {
  top: var(--size-4-1);
  right: var(--size-4-1);
}

/* #endregion graph */
/* #region outline */
body {
  /* 引导线粗细 */
  --outline-guideline-width: var(--size-2-1);
  /* 引导线颜色 */
  --outline-guideline-color: var(--accent-inactive);
  /* 引导线颜色 */
  --outline-guideline-color-alt: var(--accent-active);
  /* 一行高度 */
  --outline-item-height: calc(var(--nav-item-size) * 1.8);
}

.workspace-leaf-content[data-type=outline] .tree-item-inner {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: var(--outline-item-height);
  line-height: var(--outline-item-height);
}

.workspace-leaf-content[data-type=outline] .tree-item-self.is-active > .tree-item-inner {
  color: var(--text-on-accent);
}

body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item {
  position: relative;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self {
  position: relative;
  margin-bottom: 0;
  white-space: nowrap;
  margin-top: -1px;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-inner::before {
  content: "";
  width: calc(var(--size-4-1) * 1.2);
  height: calc(var(--size-4-1) * 1.2);
  border: var(--size-2-1) solid var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  transform: translate(calc(-1 * var(--size-4-5)), -50%);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-inner::before {
  border-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner {
  padding-left: var(--size-4-1);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self .tree-item-icon ~ .tree-item-inner::before {
  content: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item.is-collapsed .tree-item-icon::before {
  box-shadow: 0 0 0 var(--size-4-1) var(--background-modifier-hover);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item::after {
  content: "";
  width: var(--outline-guideline-width);
  position: absolute;
  background-color: transparent;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  height: calc(100% - var(--outline-item-height) + var(--size-4-8));
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon {
  cursor: pointer;
  transform: translateY(8px);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon::before {
  width: var(--size-4-2);
  height: var(--size-4-2);
  background-color: var(--outline-guideline-color-alt);
  border-radius: 50%;
  position: absolute;
  left: 3px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-icon svg path {
  display: none;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item-self.is-active .tree-item-icon::before {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item::after {
  background-color: var(--outline-guideline-color);
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-self:hover + .tree-item-children .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::after, body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover ~ .tree-item::after {
  background-color: transparent;
}
body.outline-enable .workspace-leaf-content[data-type=outline] .tree-item:hover > .tree-item-children > .tree-item:hover::before {
  content: "";
  position: absolute;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -14px;
  bottom: calc(100% - (var(--outline-item-height) + var(--size-4-2)) / 2 - 1px);
  width: var(--size-4-6);
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--outline-guideline-width) solid var(--outline-guideline-color);
  border-left: var(--outline-guideline-width) solid var(--outline-guideline-color);
  z-index: 9;
}
body.outline-enable .workspace-leaf-content[data-type=outline] :is(.tree-item-children, .tree-item-self) {
  padding-left: 28px !important;
  margin-left: 0 !important;
  border-left: none;
}

/* #endregion outline */
/* #region file-explorer */
body {
  --file-folding-offset: 28px;
  --folder-color-rgb: 245, 180, 0;
  --folder-color: rgb(var(--setting-color-dirs, var(--folder-color-rgb)));
  --folder-hover-color: rgba(var(--setting-color-dirs, var(--folder-color-rgb)), 0.24);
  --nav-item-size: calc(var(--size-4-4) * 0.9);
  --line-height-tight: 1.6;
  --nav-indentation-guide-color: hsla(var(--accent-h), 20%, 50%, 0.2);
  --nav-indentation-guide-width: 1.8px;
}

.theme-light {
  --folder-inactive: 85%;
}

.theme-dark {
  --folder-inactive: 70%;
}

.nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}

body:not(.is-grabbing) :is(.nav-file-title.is-being-dragged, .nav-folder-title.is-being-dragged),
.nav-file-title.is-being-dragged,
.nav-folder-title.is-being-dragged {
  background-color: var(--accent-inactive);
  color: var(--text-normal);
}

.workspace-leaf-content[data-type=file-explorer] {
  --line-height-tight: var(--explorer-item-height, 1.6);
}

body.theme-dark.explorer-icon .is-active .nav-file-tag {
  --nav-item-background-active: var(--text-on-accent);
}

body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title {
  cursor: pointer;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title:hover {
  background-color: var(--folder-hover-color);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .nav-folder-children {
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .nav-folder-children:hover {
  border-color: var(--accent-inactive);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder .collapse-icon svg.svg-icon {
  line-height: var(--line-height-tight);
  width: var(--size-4-4);
  height: var(--size-4-4);
  background-color: var(--folder-color);
  display: inline-block;
  translate: 0 calc(-1 * var(--size-2-1));
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-folder.is-collapsed .collapse-icon svg.svg-icon {
  transform: none;
  filter: brightness(var(--folder-inactive));
  transition: var(--animation);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title-content {
  padding-left: var(--size-2-1);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title:not([data-path$="excalidraw.md"]):not([data-path$=excalidraw])::before {
  content: "";
  position: absolute;
  width: var(--size-4-4);
  height: var(--size-4-4);
  opacity: 0.8;
  flex-shrink: 0;
  translate: calc(2px - var(--size-4-5)) 25%;
  background-color: var(--accent-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title:is([data-path$="excalidraw.md"], [data-path$=excalidraw]) .nav-file-tag {
  position: absolute;
  translate: calc(-1 * var(--size-4-5));
  top: var(--size-2-3);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected) {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected):first-child::before {
  background-color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active:not(.is-selected) .nav-file-title-content {
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-tag {
  font-size: var(--size-4-2);
  margin-left: 0;
  margin-right: var(--size-4-2);
  line-height: 2;
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title .nav-file-tag {
  background-color: var(--accent-active);
  color: var(--text-on-accent);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title.is-active .nav-file-tag {
  background-color: hsl(var(--background-secondary-hsl), 0.9);
  color: var(--nav-item-background-active);
}
body:is(:not(.css-settings-manager), .explorer-icon) .workspace-leaf-content[data-type=file-explorer] .nav-files-container .nav-file-title-content + .nav-file-tag {
  margin-left: var(--size-2-3);
}

/* 参考 https://github.com/Akifyss/obsidian-border */
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item) {
  position: relative;
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item).is-active::after {
  height: calc(100% - var(--size-4-2));
  transform: translateY(-50%);
}
:is(body.explorer-nav-decoration .nav-file-title, body.setting-nav-decoration .vertical-tab-nav-item)::after {
  content: "";
  position: absolute;
  right: 4px;
  top: 50%;
  width: var(--size-4-1);
  height: 0%;
  border-radius: var(--radius-s);
  background: var(--accent-inactive);
}

body.explorer-title-wrap :is(.nav-file-title-content, .nav-folder-title-content) {
  overflow: visible;
  white-space: pre-wrap;
}

/* #endregion file-explorer */
/* #endregion [[panel]] */
/* #endregion [workspace] */
/* #region [mobile] */
.is-mobile {
  --input-border-width: 1px;
  --input-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.12),
    0 2px 3px 0 rgba(0, 0, 0, .05),
    0 1px 1.5px 0 rgba(0, 0, 0, .03),
    0 1px 2px 0 rgba(0, 0, 0, .04),
    0 0 0 0 transparent;
}
.is-mobile:is(.bg-static, .bg-live) {
  --background-modifier-form-field: hsl(var(--background-primary-hsl));
  --interactive-normal: hsl(var(--background-primary-hsl));
}
.is-mobile button:not(.clickable-icon) {
  background-color: var(--interactive-normal) !important;
  box-shadow: var(--input-shadow);
}
.is-mobile .document-search .document-search-button {
  padding: var(--size-4-2);
}

/* #endregion [mobile] */
