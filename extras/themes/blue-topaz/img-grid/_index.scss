.img-grid
  :is(.markdown-preview-section, .markdown-rendered)
  > div
  > p
  > .image-embed[alt*='.']:last-child {
  padding-right: 0;
}

.img-grid
  :is(.markdown-preview-section, .markdown-rendered)
  > div
  > p
  > .image-embed[alt*='.']:first-child {
  padding-left: 0;
}

.img-grid :is(.markdown-preview-section, .markdown-rendered) > div hr {
  width: 100%;
}

.img-grid span.image-embed[alt*='.'] {
  display: table-cell;
}

.img-grid img[alt*='.'] {
  max-height: 100vh;
  object-fit: cover;
}

.img-grid .markdown-preview-section .el-embed-image img:not([width]),
.img-grid .markdown-preview-section video {
  width: 100%;
}

.img-grid .markdown-preview-section > .el-embed-image > p {
  display: grid;
  grid-column-gap: 0.5rem;
  grid-row-gap: 0;
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}

.img-grid .markdown-preview-section > .el-embed-image > p > br {
  display: none;
}

.img-grid .markdown-preview-section > .el-embed-image > p > img {
  object-fit: cover;
  align-self: stretch;
}

.img-grid
  .markdown-preview-section
  > .el-embed-image
  > p
  > .internal-embed
  img {
  object-fit: cover;
  height: 100%;
}

.img-grid-ratio
  .markdown-preview-section
  > .el-embed-image
  > p
  > .internal-embed
  img,
.img-grid-ratio
  .markdown-preview-section
  > .el-embed-image
  > p
  > .internal-embed
  img {
  object-fit: contain;
  height: 100%;
  align-self: center;
}

.img-grid .markdown-preview-section > .el-embed-image > p {
  grid-column-gap: 0.25rem;
}
