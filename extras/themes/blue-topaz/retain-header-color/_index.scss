body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  :is(h1, h2, h3, h4, h5, h6)
  em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  :is(h1, h2, h3, h4, h5, h6)
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  :is(h1, h2, h3, h4, h5, h6)
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header[class*='cm-em'],
body.retain-header-color .cm-s-obsidian .cm-header[class*='cm-strong'] {
  background-image: initial;
  background-clip: initial;
  -webkit-background-clip: initial;
  -webkit-text-fill-color: initial;
  background-color: initial;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h1 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h1
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h1
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-1[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-1[class*='cm-strong'] {
  color: var(--h1-color) !important;
  font-family: var(--h1-font) !important;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h2 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h2
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h2
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-2[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-2[class*='cm-strong'] {
  color: var(--h2-color) !important;
  font-family: var(--h2-font) !important;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h3 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h3
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h3
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-3[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-3[class*='cm-strong'] {
  color: var(--h3-color) !important;
  font-family: var(--h3-font) !important;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h4 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h4
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h4
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-4[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-4[class*='cm-strong'] {
  color: var(--h4-color) !important;
  font-family: var(--h4-font) !important;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h5 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h5
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h5
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-5[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-5[class*='cm-strong'] {
  color: var(--h5-color) !important;
  font-family: var(--h5-font) !important;
}

body.retain-header-color :is(.markdown-preview-view, .markdown-rendered) h6 em,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h6
  strong,
body.retain-header-color
  :is(.markdown-preview-view, .markdown-rendered)
  h6
  strong
  em,
body.retain-header-color .cm-s-obsidian .cm-header.cm-header-6[class*='cm-em'],
body.retain-header-color
  .cm-s-obsidian
  .cm-header.cm-header-6[class*='cm-strong'] {
  color: var(--h6-color) !important;
  font-family: var(--h6-font) !important;
}
