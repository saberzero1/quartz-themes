body.theme-setting-enableBuiltInAlternativeCheckboxes {
  /* Alternate incomplete states */
  & input.task-list-item-checkbox[data-task="/"]:checked,
  & input.task-list-item-checkbox[data-task="<"]:checked,
  & input.task-list-item-checkbox[data-task="!"]:checked,
  & input.task-list-item-checkbox[data-task="?"]:checked,
  & li[data-task="/"] > input:checked,
  & li[data-task="<"] > input:checked,
  & li[data-task="!"] > input:checked,
  & li[data-task="?"] > input:checked,
  & li[data-task="/"] > p > input:checked,
  & li[data-task="<"] > p > input:checked,
  & li[data-task="!"] > p > input:checked,
  & li[data-task="?"] > p > input:checked {
    background-image: none;
    background-color: transparent;
    position: relative;
    overflow: hidden;
  }
  & input[data-task="/"]:checked:after,
  & input[data-task="<"]:checked:after,
  & input[data-task="!"]:checked:after,
  & input[data-task="?"]:checked:after,
  & li[data-task="/"] > input:checked:after,
  & li[data-task="<"] > input:checked:after,
  & li[data-task="!"] > input:checked:after,
  & li[data-task="?"] > input:checked:after,
  & li[data-task="/"] > p > input:checked:after,
  & li[data-task="<"] > p > input:checked:after,
  & li[data-task="!"] > p > input:checked:after,
  & li[data-task="?"] > p > input:checked:after {
    content: "";
    top: -1px;
    left: -1px;
    position: absolute;
    width: var(--checkbox-size);
    height: var(--checkbox-size);
    display: block;
    background-color: var(--theme-color-controlContentArea);
    -webkit-mask-position: 50% 50%;
    -webkit-mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
  }
  & input[data-task="/"]:checked:after,
  & li[data-task="/"] > input:checked:after,
  & li[data-task="/"] > p > input:checked:after {
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g fill="%23000000"><polyline points="12,-12 48,-12 48,36 12,36" transform="rotate(45) translate(5,-12)"></polyline></g></g></svg>');
  }
  & input[data-task="<"]:checked:after,
  & li[data-task="<"] > input:checked:after,
  & li[data-task="<"] > p > input:checked:after {
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g fill="%23000000"><polyline points="15,4.5 6,12 15,19.5 16.75,17.5 10,12 16.75,6.5"></polyline></g></g></svg>');
  }
  & input[data-task="!"]:checked:after,
  & li[data-task="!"] > input:checked:after,
  & li[data-task="!"] > p > input:checked:after {
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="12" x2="12" y1="5" y2="13"/><line x1="12" x2="12" y1="19" y2="19"/></svg>');
  }
  & input[data-task="?"]:checked:after,
  & li[data-task="?"] > input:checked:after,
  & li[data-task="?"] > p > input:checked:after {
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7.5,6.852c0.463,-1.049 1.493,-2.872 4.5,-2.852c3.957,0.026 5.001,2.617 5,4.5c-0.002,2.952 -4.963,3.463 -5,7.5"/><path d="M12.25,20l-0.443,-0"/></svg>');
  }
  /* Complete states */
  & .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task="x"],
  & .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task="-"],
  & .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task=">"] {
    text-decoration: var(--checklist-done-decoration);
    color: var(--checklist-done-color);
  }
  & input[data-task="x"]:checked,
  & li[data-task="x"] > input:checked,
  & li[data-task="x"] > p > input:checked,
  & input[data-task="X"]:checked,
  & li[data-task="X"] > input:checked,
  & li[data-task="X"] > p > input:checked,
  & input.task-list-item-checkbox[data-task=">"]:checked,
  & li[data-task=">"] > input:checked,
  & li[data-task=">"] > p > input:checked,
  & input.task-list-item-checkbox[data-task="-"]:checked,
  & li[data-task="-"] > input:checked,
  & li[data-task="-"] > p > input:checked {
    background-image: none;
    border-color: var(--theme-color-controlContentArea);
    position: relative;
    overflow: hidden;
    background-color: var(--theme-color-controlContentArea);
    color: white;
  }
  & input[data-task="x"]:checked:after,
  & li[data-task="x"] > input:checked:after,
  & li[data-task="x"] > p > input:checked:after,
  & input[data-task="x"]:checked:after,
  & li[data-task="x"] > input:checked:after,
  & li[data-task="x"] > p > input:checked:after,
  & input[data-task="-"]:checked:after,
  & li[data-task="-"] > input:checked:after,
  & li[data-task="-"] > p > input:checked:after,
  & input[data-task=">"]:checked:after,
  & li[data-task=">"] > input:checked:after,
  & li[data-task=">"] > p > input:checked:after {
    content: "";
    top: -1px;
    left: -1px;
    position: absolute;
    width: var(--checkbox-size);
    height: var(--checkbox-size);
    display: block;
    background-color: var(--checkbox-marker-color);
    -webkit-mask-repeat: no-repeat;
  }
  & input[data-task="x"]:checked:after,
  & li[data-task="x"] > input:checked:after,
  & li[data-task="x"] > p > input:checked:after {
    -webkit-mask-position: 52% 52%;
    -webkit-mask-size: 65%;
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg width="12px" height="10px" viewBox="0 0 12 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-4.000000, -6.000000)" fill="%23000000"><path d="M8.1043257,14.0367999 L4.52468714,10.5420499 C4.32525014,10.3497722 4.32525014,10.0368095 4.52468714,9.8424863 L5.24777413,9.1439454 C5.44721114,8.95166768 5.77142411,8.95166768 5.97086112,9.1439454 L8.46638057,11.5903727 L14.0291389,6.1442083 C14.2285759,5.95193057 14.5527889,5.95193057 14.7522259,6.1442083 L15.4753129,6.84377194 C15.6747499,7.03604967 15.6747499,7.35003511 15.4753129,7.54129009 L8.82741268,14.0367999 C8.62797568,14.2290777 8.3037627,14.2290777 8.1043257,14.0367999"></path></g></g></svg>');
  }
  & input[data-task="-"]:checked:after,
  & li[data-task="-"] > input:checked:after,
  & li[data-task="-"] > p > input:checked:after {
    -webkit-mask-position: 50% 50%;
    -webkit-mask-size: 100%;
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g fill="%23000000"><polyline points="4,10.5 20,10.5 20,13.5 4,13.5"></polyline></g></g></svg>');
  }
  & input[data-task=">"]:checked:after,
  & li[data-task=">"] > input:checked:after,
  & li[data-task=">"] > p > input:checked:after {
    -webkit-mask-position: 50% 50%;
    -webkit-mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-image: url('data:image/svg+xml; utf8, <svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g fill="%23000000"><polyline points="9,4.5 18,12 9,19.5 7.25,17.5 14,12 7.25,6.5"></polyline></g></g></svg>');
  }
}
